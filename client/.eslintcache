[{"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\index.js":"1","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\serviceWorker.js":"2","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\App.js":"3","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\index.js":"4","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\hoc\\auth.js":"5","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\MainPage.js":"6","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\PayPage.js":"7","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js":"8","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js":"9","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"10","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"11","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Chat.js":"12","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Introduce\\Introduce.js":"13","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Category.js":"14","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js":"15","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostDetailPage.js":"16","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Nav.js":"17","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyCategory.js":"18","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js":"19","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js":"20","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js":"21","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Privacy.js":"22","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js":"23","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js":"24","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\user_reducer.js":"25","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\adminPost_reducer.js":"26","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx":"27","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\user_actions.js":"28","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Store.js":"29","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Dashboard.js":"30","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js":"31","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js":"32","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js":"33","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js":"34","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewableCard.js":"35","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js":"36","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js":"37","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\types.js":"38","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Content.jsx":"39","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyContent.jsx":"40","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx":"41","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\Config.js":"42","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js":"43","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx":"44","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostCard.js":"45","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\QnaPage.js":"46","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewVoiceWrite.js":"47"},{"size":1595,"mtime":1620235167015,"results":"48","hashOfConfig":"49"},{"size":5086,"mtime":1618302477010,"results":"50","hashOfConfig":"49"},{"size":4357,"mtime":1621953822239,"results":"51","hashOfConfig":"49"},{"size":226,"mtime":1621151187169,"results":"52","hashOfConfig":"49"},{"size":1584,"mtime":1620902234366,"results":"53","hashOfConfig":"49"},{"size":5097,"mtime":1621254600257,"results":"54","hashOfConfig":"49"},{"size":3324,"mtime":1621927316089,"results":"55","hashOfConfig":"49"},{"size":4097,"mtime":1620235166891,"results":"56","hashOfConfig":"49"},{"size":1231,"mtime":1620235166891,"results":"57","hashOfConfig":"49"},{"size":30655,"mtime":1620966888455,"results":"58","hashOfConfig":"49"},{"size":8021,"mtime":1621155282200,"results":"59","hashOfConfig":"49"},{"size":224,"mtime":1620966888420,"results":"60","hashOfConfig":"49"},{"size":2271,"mtime":1620966888433,"results":"61","hashOfConfig":"49"},{"size":399,"mtime":1620996564983,"results":"62","hashOfConfig":"49"},{"size":2309,"mtime":1621945447412,"results":"63","hashOfConfig":"49"},{"size":13156,"mtime":1621954180837,"results":"64","hashOfConfig":"49"},{"size":7356,"mtime":1621584185489,"results":"65","hashOfConfig":"49"},{"size":409,"mtime":1621584026395,"results":"66","hashOfConfig":"49"},{"size":1203,"mtime":1621573003974,"results":"67","hashOfConfig":"49"},{"size":2461,"mtime":1621945676288,"results":"68","hashOfConfig":"49"},{"size":6288,"mtime":1621945447406,"results":"69","hashOfConfig":"49"},{"size":1203,"mtime":1621573003978,"results":"70","hashOfConfig":"49"},{"size":5454,"mtime":1621584289553,"results":"71","hashOfConfig":"49"},{"size":2057,"mtime":1621945447403,"results":"72","hashOfConfig":"49"},{"size":623,"mtime":1621151157331,"results":"73","hashOfConfig":"49"},{"size":453,"mtime":1618302476970,"results":"74","hashOfConfig":"49"},{"size":4465,"mtime":1621954517327,"results":"75","hashOfConfig":"49"},{"size":1102,"mtime":1621151147143,"results":"76","hashOfConfig":"49"},{"size":2212,"mtime":1621945447401,"results":"77","hashOfConfig":"49"},{"size":6679,"mtime":1621945447399,"results":"78","hashOfConfig":"49"},{"size":685,"mtime":1620966888444,"results":"79","hashOfConfig":"49"},{"size":3602,"mtime":1620235166883,"results":"80","hashOfConfig":"49"},{"size":4830,"mtime":1620235166890,"results":"81","hashOfConfig":"49"},{"size":476,"mtime":1618302476979,"results":"82","hashOfConfig":"49"},{"size":4091,"mtime":1620235166877,"results":"83","hashOfConfig":"49"},{"size":2257,"mtime":1621945447407,"results":"84","hashOfConfig":"49"},{"size":3764,"mtime":1621945518959,"results":"85","hashOfConfig":"49"},{"size":274,"mtime":1621151172460,"results":"86","hashOfConfig":"49"},{"size":18158,"mtime":1621573003963,"results":"87","hashOfConfig":"49"},{"size":4929,"mtime":1621578859976,"results":"88","hashOfConfig":"49"},{"size":3342,"mtime":1621430659765,"results":"89","hashOfConfig":"49"},{"size":94,"mtime":1621945447394,"results":"90","hashOfConfig":"49"},{"size":772,"mtime":1620966888435,"results":"91","hashOfConfig":"49"},{"size":1211,"mtime":1621573003965,"results":"92","hashOfConfig":"49"},{"size":2099,"mtime":1621573003985,"results":"93","hashOfConfig":"49"},{"size":3744,"mtime":1621931326300,"results":"94","hashOfConfig":"49"},{"size":9036,"mtime":1621945447404,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"paqdep",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"98"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"98"},"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\index.js",[],["210","211"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\serviceWorker.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\App.js",["212"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\index.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\hoc\\auth.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\MainPage.js",["213","214"],"import React from \"react\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport {  Typography ,Grid, Container, Paper, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport SubContent from './LandContents/SubContent'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nconst newsPost = {\r\n  title: \"Title Sample\",\r\n  description: \"description Sample, which codes is best code? can you choice that?\",\r\n  linkText: \"LinkText Sample\",\r\n  linkURL: \"http://localhost:3000/\",\r\n  image: \"https://source.unsplash.com/random\"\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n \r\n    h6: {\r\n      fontSize:13\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flex: {\r\n    display: 'flex',\r\n    padding: '20px',\r\n  },\r\n  AppbarContainer: {\r\n    maxWidth: '100%',\r\n    margin: theme.spacing(0, 0, 0, 0),\r\n    padding: theme.spacing(0, 0, 0, 0),\r\n    position: \"relative\",\r\n    zIndex: \"2\"\r\n },\r\n  productToolbar: {\r\n    top:\"10%\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n appbar2: {\r\n  position: \"relative\",\r\n  display: \"relative\",\r\n  alignItems: \"center\",\r\n},\r\n  }))\r\n\r\n  function MainPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n  <div>\r\n    <div className={classes.flex}>\r\n      <Container>\r\n      <React.Fragment>\r\n      <CssBaseline />\r\n      <Paper elevation={3}>\r\n      <Typography\r\n      variant=\"h5\" \r\n      style={{textAlign:'center'}}>\r\n      <br/>\r\n      당신의 Vision을 들려주세요.\r\n      <br />\r\n      </Typography>\r\n      <Typography\r\n      variant=\"subtitle1\" \r\n      style={{textAlign:'center'}}\r\n      >\r\n      저희 Vision Market은 사용자들의 리뷰를 바탕으로\r\n      <br />\r\n      시각 장애인들에게 상품을 들려줍니다.\r\n      </Typography>\r\n      <br />\r\n      </Paper>\r\n    </React.Fragment>\r\n    </Container>\r\n    </div>\r\n    <div>\r\n    <Container className={classes.AppbarContainer} >\r\n    <AppBar className={classes.appbar2} style={{ backgroundColor: \"#505050\" }}>\r\n                <Toolbar >\r\n                    <Button color=\"inherit\" aria-label=\"모든 카테고리\" href=\"/category\" style={{ fontSize: '1.2rem' }}>\r\n                            모든 카테고리\r\n                    </Button>\r\n                    <Button color=\"inherit\" aria-label=\"소개 및 안내\" href=\"/introduce\" style={{ fontSize: '1.2rem' }}>\r\n                            소개 및 안내\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            </Container>\r\n            </div>\r\n            <Container>\r\n          <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 인기상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 신상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 추천상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n            </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default MainPage;","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\PayPage.js",["215","216","217","218"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, Container, makeStyles, Card, Input, Paper, Button, CircularProgress } from '@material-ui/core'\r\nimport NumberFormat from 'react-number-format'\r\nimport { Check } from '@material-ui/icons'\r\nimport LoadingAndSuccess from './LoadingAndSuccess'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        // paddingTop : theme.spacing(12)\r\n        backgroundColor : \"white\"\r\n    },\r\n    creditCard: {\r\n        paddingTop: theme.spacing(4),\r\n        margin: 'auto',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        width: \"100%\"\r\n    },\r\n    cardPadding: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    cardForm: {\r\n        width: \"100%\",\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"320px\"\r\n        }\r\n    },\r\n    card: {\r\n        border: '1px solid #dddddd',\r\n        padding: '0 0.8rem',\r\n        fontSize: '1rem',\r\n        lineHeight: '2rem',\r\n        margin: '0.2rem',\r\n        color: '#666666',\r\n        backgroundColor: '#f8f8f8'\r\n    },\r\n    cardBtn: {\r\n        marginTop: '1.5rem',\r\n        marginBottom: \"0\",\r\n        backgroundColor : theme.palette.primary\r\n    }\r\n}))\r\n\r\n\r\nfunction PayPage() {\r\n    const classes = useStyle()\r\n\r\n    const [Success, setSuccess] = useState(false)\r\n\r\n\r\n    const SuccessHandle = (e) => {\r\n        e.preventDefault()\r\n\r\n        setSuccess(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container component=\"body\" className={classes.root}>\r\n            <Grid className={classes.creditCard} component=\"h4\" container>\r\n\r\n                {Success ? \r\n                <LoadingAndSuccess />  :\r\n                <div>\r\n                <Grid item md={12}>\r\n                    <h3 >내 카드 정보</h3>\r\n                </Grid>\r\n                    <Grid item style={{margin : 'auto'}} className={classes.cardPadding} sm={6}>\r\n                        <Paper component=\"body\" className={classes.cardForm} variant=\"outlined\" >\r\n                            <form noValidate autoComplete=\"off\">\r\n\r\n                                <div >\r\n                                    <NumberFormat disabled value=\"4321431243214321\" format=\"####-####-####-####\" className={classes.card} style={{ width: '68%' }} placeholder=\"카드 번호\" />\r\n                                    <img style={{ width: \"12%\", verticalAlign: \"middle\" }} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Visa.svg/1024px-Visa.svg.png\" alt=\"VISA\" />\r\n                                    <Input disabled className={classes.card} value=\"KO YEONG BIN\" style={{ width: '80%' }} placeholder=\"이름\" />\r\n                                </div>\r\n\r\n                                <div>\r\n                                </div>\r\n                                {/* 버튼 부분 수정해야함 */}\r\n                                <Button onClick={SuccessHandle} className={classes.cardBtn} variant=\"contained\" color=\"primary\" type=\"submit\" >결제</Button>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                </div>\r\n            }\r\n\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PayPage\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js",["219","220","221"],"import React, { useState } from 'react'\r\nimport { Grid, Container,  makeStyles, Paper, Typography, ButtonBase} from '@material-ui/core'\r\nimport CreditCard from './CreditCard/CreditCard'\r\nimport CreditCash from './CreditCash/CreditCash'\r\nimport Banks from './BankInformation.json'\r\n\r\nconst useStyle = makeStyles((theme => ({\r\n    root: {\r\n        paddingTop: theme.spacing(30),\r\n        backgroundColor : theme.palette.action.hover,\r\n        height : '100%',\r\n        paddingBottom : \"30%\"\r\n    },\r\n    mainTitle: {\r\n        padding : theme.spacing(3),\r\n        borderColor : theme.palette.action.selected,\r\n        margin : theme.spacing(3)\r\n    },\r\n    creditTitle: {\r\n        width: '100%',\r\n        borderColor : theme.palette.action.selected\r\n    },\r\n    enrollement: {\r\n        padding : theme.spacing(3),\r\n    },\r\n\r\n})))\r\n\r\n\r\nfunction EnrollmentCreditPage(props) {\r\n    const classes = useStyle();\r\n\r\n    const [SelectCredit, setSelectCredit] = useState(false)\r\n    const [SelectCash, setSelectCash] = useState(false)\r\n\r\n    const [CreditNum, setCreditNum] = useState()\r\n\r\n    const HandlingCredit = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCredit === true || SelectCash === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCredit(true)\r\n        }\r\n    }\r\n    const HandlingCash = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCash === true || SelectCredit === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCash(true)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const CreditCardComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n               <CreditCard />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n    const CreditCashComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n                <CreditCash banks={Banks.banks} />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root} component=\"body\">\r\n            <Grid container>\r\n                <Grid item component=\"h2\" xs={12}>\r\n                    <Paper variant=\"outlined\" className={classes.mainTitle} >결제 수단 등록</Paper>\r\n\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCardComponent} onSubmit={HandlingCredit}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        신용카드\r\n                        </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCashComponent} onSubmit={HandlingCash}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        계좌번호\r\n                                    </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                {CreditCardComponent(SelectCredit)}\r\n                {CreditCashComponent(SelectCash)}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default EnrollmentCreditPage\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["222","223","224","225","226"],"import { Container, CssBaseline, Grid, makeStyles, Typography, Button, Box, Link } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\nimport { registerUser } from '../../../_action/user_actions'\r\nimport HearingIcon from '@material-ui/icons/Hearing';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root : {\r\n    //     // paddingTop : theme.spacing(25)\r\n    // },\r\n    paper: {\r\n        paddingTop : theme.spacing(23),\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems : 'center'\r\n    },\r\n    avatar: {\r\n        marginTop : theme.spacing(1),\r\n        backgroundColor : theme.palette.primary.dark\r\n    },\r\n    form : {\r\n        marginTop : theme.spacing(1),\r\n        width : \"100%\"\r\n    },\r\n    onSubmit : {\r\n        margin : theme.spacing(3, 0, 2)\r\n    }\r\n}))\r\n\r\nexport default function RegisterPage(props) {\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch();\r\n    const [FormErrorMessage, setFormErrorMessage] = useState(\"\")\r\n\r\n\r\n    // 라디오\r\n    const [selectedValue, setSelectedValue] = React.useState(\"10대\");\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n      \r\n    // 체크박스 \r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChange2 = (event) => {\r\n          setChecked(event.target.checked);\r\n    };\r\n\r\n    // 페이지 넘어가는 부분\r\n    const [NextPage, setNextPage] = useState(1);\r\n\r\n    const ButtonHandler = (e) => {\r\n        if(NextPage !== 4){\r\n            e.preventDefault()\r\n            setNextPage(NextPage+1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지가 4일 경우(===메인으로 돌아가기, 쇼핑창)\r\n        }\r\n    }\r\n\r\n    const ButtonHandler2 = (e) => {\r\n        if(NextPage !== 1){\r\n            e.preventDefault()\r\n            setNextPage(NextPage-1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지 1일 경우 뒤로(===메인으로돌아가기, 로그인창) \r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        name : Yup.string().required(\"이름을 입력해주세요.\"),\r\n        birth : Yup.string().min(8, \"생년월일은 8자로 입력해주세요.\").required(\"생년월일이 필요합니다.\"),\r\n        id : Yup.string().required('아이디가 필요합니다.'),\r\n        password : Yup.string().min(4, \"Password는 최소 4자 이상이여야 합니다.\").required('password가 필요합니다.'),\r\n        confirmPassword : Yup.string().oneOf([Yup.ref('password'), null], 'Password는 서로 일치해야합니다.').required('Password 확인란에 Password를 입력해주세요.')   \r\n    })\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues : {\r\n            name : \"\",\r\n            birth : \"\",\r\n            id : \"\",\r\n            password : \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validationSchema : validationSchema,\r\n        onSubmit : ((values, {setSubmitting}) => {\r\n            setTimeout(() => {\r\n                let dataToSubmit = {\r\n                    name : values.name,\r\n                    birth : values.birth,\r\n                    id : values.id,\r\n                    password : values.password,\r\n                }\r\n                \r\n                dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if(response.payload.success) {\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    }\r\n                }).catch((err) => {\r\n                    setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    setTimeout(() => {\r\n                        setFormErrorMessage('')\r\n                    }, 3000);\r\n                })\r\n                setSubmitting(false)\r\n            }, 500)\r\n        })\r\n    })\r\n\r\n    if(NextPage === 1) {\r\n        return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12}> \r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"name\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"이름\"\r\n                                autoFocus\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText= {formik.touched.name && formik.errors.name}\r\n                                alt=\"이름입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"birth\"\r\n                                name=\"birth\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"birth\"\r\n                                label=\"생년월일(8자리)\"\r\n                                type='birth'\r\n                                value={formik.values.birth}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.birth && Boolean(formik.errors.birth)}\r\n                                helperText = {formik.touched.birth && formik.errors.birth}\r\n                                alt=\"생년월일8자리입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        메인으로돌아가기\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 2){\r\n            return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"id\"\r\n                                name=\"id\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"id\"\r\n                                label=\"ID\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"아이디입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"current-password\"\r\n                                name=\"password\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type='password'\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText = {formik.touched.password && formik.errors.password}\r\n                                alt=\"비밀번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField \r\n                                autoComplete=\"confirm-password\"\r\n                                name=\"confirmPassword\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type='password'\r\n                                value={formik.values.confirmPassword}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                                helperText = {formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                                alt=\"비밀번호확인입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 3){\r\n            return(\r\n        <Container component='main' maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={9} sm={10}>\r\n                            <TextField\r\n                                autoComplete=\"address\"\r\n                                name=\"address\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"주소입력창\"\r\n                            /> </Grid>\r\n                            <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>검색</Button>\r\n                        </Grid>\r\n                        <Grid item xs={5} sm={6} >\r\n                            <TextField\r\n                                autoComplete=\"ph\"\r\n                                name=\"ph\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"ph\"\r\n                                label=\"PH\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"전화번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={4} >\r\n                            <TextField\r\n                                autoComplete=\"CertifiNumber\"\r\n                                name=\"CertifiNumber\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"CertifiNumber\"\r\n                                label=\"인증번호\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"인증번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>인증</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n            )} else if (NextPage === 4) {\r\n            return(\r\n                <Container component='main' maxWidth=\"xs\" >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                <br />\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p style={{fontSize: '1.0rem'}} >\r\n                    당신의 취향과 프로필을 선택해주세요.<br />\r\n                    스타일의 경우 중복으로 선택할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>\r\n                        <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 나이 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"10대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>10대</p>}\r\n                    labelPlacement=\"10대\"\r\n                    alt=\"10대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"20대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>20대</p>}\r\n                    labelPlacement=\"20대\"\r\n                    alt=\"20대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"30대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>30대</p>}\r\n                    labelPlacement=\"30대\"\r\n                    alt=\"30대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"40대이상\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>40대이상</p>}\r\n                    labelPlacement=\"40대이상\"\r\n                    alt=\"40대이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 성별 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"남자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>남자</p>}\r\n                    labelPlacement=\"남자\"\r\n                    alt=\"남자\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"여자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>여자</p>}\r\n                    labelPlacement=\"여자\"\r\n                    alt=\"여자\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />                    \r\n                    <div style={{fontSize: '1.0rem'}}>[ 키 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"140\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm 이하</p>}\r\n                    labelPlacement=\"140\"\r\n                    alt=\"150센티미터이하\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"150\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm</p>}\r\n                    labelPlacement=\"150\"\r\n                    alt=\"150센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"160\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>160cm</p>}\r\n                    labelPlacement=\"160\"\r\n                    alt=\"160센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"170\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>170cm</p>}\r\n                    labelPlacement=\"170\"\r\n                    alt=\"170센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"180\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>180cm</p>}\r\n                    labelPlacement=\"180\"\r\n                    alt=\"180센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"190\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>190cm 이상</p>}\r\n                    labelPlacement=\"190\"\r\n                    alt=\"190센티미터이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 스타일 ]</div>\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"심플\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />심플\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"캐주얼\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />캐주얼\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"시크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />시크\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"유니크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />유니크\r\n                    <br />\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"오피스\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />오피스\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"스트릿\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />스트릿\r\n                    <br />\r\n                    </fieldset>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        // onSubmit={ButtonHandler}\r\n                        href=\"/\"\r\n                    >\r\n                        가입완료\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n            </Container>\r\n            )} else {\r\n            return(\r\n                <div> hi </div>\r\n                // 자동 로그인 후 메인 페이지로 이동\r\n            )\r\n        }\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Chat.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Introduce\\Introduce.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Category.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js",["227"],"import React, { useState,useEffect } from 'react'\r\nimport { useLocation } from \"react-router\";\r\nimport { Grid, makeStyles, Typography} from '@material-ui/core'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PostCard from './PostCard';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(2),\r\n        justifyContent: 'center',\r\n        justifyItems: 'center',\r\n        align: 'center',\r\n        justify: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n}))\r\n\r\nexport default function PostSearchListPage(props) {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n\r\n     const [posts,setPosts] = useState([])\r\n\r\nconst category = location.state.category\r\n     //sh url만 변경 server post.js에서 상품 카테고리에 맞는거 조회에 해당.\r\n    useEffect(() => {\r\n\r\n        axios.post(`/api/post/posts_by_category`,category)\r\n        .then(response => {\r\n         console.log(\"실행\")\r\n            if(response.data.success){\r\n              console.log(response)\r\n              setPosts(response.data.post)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const [page, setPage] = React.useState(1);\r\n    \r\n    const handleChange = (event, value) => {\r\n      setPage(value);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid item container direction=\"column\" style={{margin : \"auto\"}} spacing={1}>\r\n            <Grid container spacing={2} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}} >\r\n                {posts.map((post) => (\r\n                <Grid\r\n                    item\r\n                    key={post.id}\r\n                    lg={3}\r\n                >\r\n                <PostCard post={post} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}} />\r\n                </Grid>\r\n                ))}\r\n            </Grid>\r\n          <Grid container spacing={2} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}}>\r\n          <Typography>Page: {page}</Typography>\r\n          <Pagination \r\n          shape=\"rounded\"\r\n          count={10}\r\n          size=\"large\"\r\n          page={page} \r\n          onChange={handleChange}\r\n          /> \r\n          </Grid>\r\n      </Grid>\r\n      </div>\r\n    )}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostDetailPage.js",["228","229","230"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Nav.js",["231","232","233","234","235"],"import React,{useState} from 'react'\r\nimport { Box, Grid, makeStyles,  AppBar, Toolbar, InputBase, Container } from '@material-ui/core'\r\nimport { useHistory } from 'react-router';\r\nimport axios from \"axios\";\r\nimport { ZoomOut, ZoomIn, RecordVoiceOver, Exposure, Brightness6, ShoppingCart, ExitToApp, ZoomInSharp } from '@material-ui/icons'\r\n\r\nimport { fade } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n    },\r\n    BoxComponent2: {\r\n        minWidth: '230px',\r\n        textAlign: 'center',\r\n        height: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        color: \"#ffffff\",\r\n        borderColor: '#B6B5B5'\r\n        \r\n    },\r\n    appbar: {\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    iconComponent: {\r\n        margin: '0', padding: '0',\r\n        color: '#ffffff'\r\n    },\r\n    searchIcon: {\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        right: \"-2%\",\r\n        padding: theme.spacing(0, 2),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.35)\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n    appbarContainer: {\r\n        maxWidth: '100%',\r\n        margin: theme.spacing(0, 0, 0, 0),\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        position: \"relative\",\r\n        zIndex: \"2\"\r\n    },\r\n    orderButton: {\r\n        position: \"relative\",\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    BoxComponent: {\r\n        minWidth: '200px',\r\n        height: '20px',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n    },\r\n}))\r\n\r\n\r\nfunction Nav(props) {\r\n    const classes = useStyle();\r\n  \r\n    // 확대, 축소 기능\r\n    var nowZoom = 100;\r\n    function zoomOut() {\r\n        nowZoom = nowZoom - 20;\r\n        if(nowZoom <= 100) nowZoom = 100;\r\n        zooms();\r\n    }\r\n\r\n    function zoomIn() {\r\n        nowZoom = nowZoom + 20;\r\n        if(nowZoom >= 200) nowZoom = 200;\r\n        zooms();\r\n    }\r\n\r\n    function zomReset(){\r\n        nowZoom = 100;\r\n        zooms();\r\n    }\r\n\r\n    function zooms(){\r\n        document.body.style.zoom = nowZoom + '%';\r\n    }\r\n\r\n\r\n    //sh-119 로그아웃기능 193\r\n    const histroy = useHistory()\r\n    const clickLogoutHandler = () => {\r\n      \r\n        axios.get(`/api/users/logout`)\r\n        .then(response => {\r\n            histroy.push('/')\r\n        })\r\n      }\r\n  \r\n\r\n\r\n    return (\r\n        <Container className={classes.appbarContainer} component='main' maxWidth='xl' >\r\n            <AppBar className={classes.appbar} style={{ backgroundColor: \"#303030\" }}>\r\n                <Toolbar className={classes.toolbar} p={1} >\r\n                    <Grid container spacing={1}>\r\n\r\n                        {/* 아이콘모음  F-146 고대비 버튼 삭제 */}\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Box color=\"#000000\" className={classes.BoxComponent2} p={4} >\r\n                            <div className={classes.root}>\r\n                            <ButtonGroup variant=\"text\" color=\"inherit\">\r\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"비전마켓\" href=\"/\">\r\n                            메인\r\n                            </Button>\r\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"챗봇\" href=\"/chat\">\r\n                            Chat\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"음성검색\">\r\n                                <RecordVoiceOver className={classes.iconComponent} />\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"확대\" onClick={zoomIn}>\r\n                                <ZoomIn className={classes.iconComponent} />\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"축소\" onClick={zoomOut}>\r\n                                <ZoomOut className={classes.iconComponent} />\r\n                            </Button>\r\n                            </ButtonGroup>\r\n                            </div>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        {/* 검색창 */}\r\n                        <Grid item xs={12} sm={4} >\r\n                            <Box p={2}>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                placeholder=\" 검색창...\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': '검색창' }}\r\n                                />\r\n                            </div>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        {/* 주버튼 */}\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Box className={classes.BoxComponent} p={4} >\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"마이페이지\" href=\"/myCategory\" >\r\n                                        마이페이지\r\n                                </Button>\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} aria-label=\"장바구니\" aria-details=\"장바구니 링크\" href=\"/shoppingbascket\" color=\"inherit\" >\r\n                                <ShoppingCart  style={{ fontSize: '30' }} />\r\n                                        장바구니\r\n                                </Button>\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"로그아웃\" onClick ={clickLogoutHandler}>\r\n                                    <ExitToApp />\r\n                                        로그아웃\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyCategory.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js",["236","237","238","239"],"import { makeStyles, Tab, Tabs, Typography, Box, Paper, Container} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport BuyCard from \"./BuyCard\";\r\nimport axios from 'axios';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    }\r\n  }));\r\n  \r\n  export default function Order() {\r\n\r\n    let orderCount = 3;\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n\r\n    //sh 유저가 구매한 목록 받아와서 BuyCard에 뿌려준다.\r\n    const [purchaseList,setPurchaseList] = useState([])\r\n    useEffect(() => {\r\n\r\n        axios.get(`/api/purchase/purchaseList`)\r\n        .then(response => {\r\n            if(response.data.success){\r\n               if(response.data.success) {\r\n                console.log(response)\r\n                setPurchaseList(response.data.purchaseList)\r\n                \r\n            }\r\n        }\r\n        })\r\n    }, [])\r\n\r\n    const getPurchaseList = (PurchaseListObj) => {\r\n      return (\r\n          <BuyCard {...PurchaseListObj} deletePurchaseItem={e => deletePurchaseItem(e)}></BuyCard>\r\n      );\r\n  }\r\n\r\n  function deletePurchaseItem(purchaseId){ \r\n    setPurchaseList(purchaseList.filter(item => item._id !== purchaseId))\r\n}\r\n\r\n    return (\r\n        <Container style={{paddingTop:'2%'}}>\r\n            <Paper className={classes.panel}>\r\n              {\r\n                    orderCount < 1 ? '최근 6개월간 주문하신 내역이 없습니다.' : \r\n                    <div>\r\n                        {purchaseList.map(PurchaseListObj => getPurchaseList(PurchaseListObj))}\r\n                    </div>\r\n                }\r\n            </Paper>\r\n      </Container>\r\n    );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js",["240","241","242","243","244","245"],"import { Box, Button, Card, CardContent, Container, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport axios from 'axios'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    BoxComponent:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex',\r\n        margin:'auto'\r\n    },\r\n    InputBoxComponent:{\r\n        height:'240px',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    }\r\n  });\r\n\r\nexport default function CancelCard(props){\r\n    const classes = useStyles();\r\n    // 모달창\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    const [value, setValue] = React.useState(2); //별점\r\n    //추가\r\n    const [content, setContent] = useState(\"\");//내용\r\n    const [post, setPost] = useState({});\r\n    const userId=localStorage.getItem('userId');\r\n    const postId = props.match.params.postId;\r\n\r\n    const handleChangeContent = (event) => {\r\n        setContent(event.currentTarget.value)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.post('/api/post/getPost', {postId:postId})\r\n        .then(response => {\r\n            console.log(response.data.post)\r\n            setPost(response.data.post)\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (post === null || content === \"\") {\r\n            return alert('Please first fill all the fields')\r\n        }\r\n\r\n        const variables = {\r\n            author: userId,\r\n            post: post._id,\r\n            content: content,\r\n            voice: false,\r\n            star: value\r\n        }\r\n\r\n        axios.post('/api/review/uploadReview', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('Review Uploaded Successfully')\r\n                    props.history.push('/order')\r\n                } else {\r\n                    alert('Failed to upload review')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div>\r\n        <Container style={{paddingTop:'2%'}}>\r\n        <Card className={classes.root} elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    {/* <Dialog\r\n                        open={handleClickOpen}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    > */}\r\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\r\n                        {/* <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src={post.image}/>\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                {post.title}\r\n                            </Typography>\r\n                            <Typography className={classes.pos}>\r\n                                2021년 04월 27일 배송완료\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        <br/>\r\n        <Divider/>\r\n        <br/>\r\n        <form>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" className={classes.BoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"legend\">[ 별점 ]</Typography>\r\n                    <Rating\r\n                    name=\"simple-controlled\"\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.InputBoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                <Box style={{display:'flex'}}>\r\n                    <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"구매후기\"\r\n                    multiline\r\n                    rows={8}\r\n                    variant=\"outlined\"\r\n                    style={{ width:'1200px'}}\r\n                    onChange={handleChangeContent}\r\n                    value={content}\r\n                />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.BoxComponent}>\r\n            <Button onClick={onSubmit}variant=\"outlined\" style={{fontSize:'1.2rem', width:'120px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\r\n        </Box>\r\n        </form>\r\n        </Container>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Privacy.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js",["246","247"],"import { Button, Box, Card, Tabs, Tab, Container, Grid, makeStyles, Paper, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CardActions } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState,useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction TabPanel(props) {\r\n     const { children, value, index, ...other } = props;\r\n   \r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography component=\"div\">{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n  \r\nTabPanel.propTypes = {\r\nchildren: PropTypes.node,\r\nindex: PropTypes.any.isRequired,\r\nvalue: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    card: {\r\n        margin: 'auto',\r\n        padding: '1% 1%',\r\n    },\r\n    button: {\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nfunction createData(point, usage, deadline) {\r\n    return {point, usage, deadline };\r\n}\r\n\r\nconst rows = [\r\n    createData(1000, '회원가입 이벤트', '7일후 소멸'),\r\n];\r\n\r\nconst rows2 = [\r\n    createData(500, '마우스 구매', '21년 4월 21일'),\r\n    createData(500, '헤드폰 구매', '21년 3월 19일'),\r\n]\r\n\r\nexport default function PointPage(){\r\n\r\n    const cancelCount = 1\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n\r\n    //sh 포인트 조회 91\r\n    const [point,setPoint] = useState(0)\r\n    useEffect(() => {\r\n\r\n       axios.get(`/api/users/point`)\r\n       .then(response => {\r\n           if(response.data.success){\r\n               setPoint(response.data.result.point)\r\n           }\r\n       })\r\n   }, [])\r\n\r\n    return(\r\n        <Container style={{paddingTop:'2%'}}>\r\n            <Card className={classes.card}>\r\n                    <Typography variant=\"h6\" align='center'>\r\n                        사용가능 적립금은 총 {point}원 입니다.\r\n                    </Typography>\r\n                    <CardActions className={classes.button}>\r\n                    <Button \r\n                    variant='outlined' \r\n                    style={{fontSize:'1rem'}} \r\n                    size=\"large\"\r\n                    href=\"http://www.kbuwel.or.kr/Assistance/Info\">\r\n                        기부하기</Button>\r\n                    </CardActions>\r\n                </Card>\r\n            <br/>\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                value={value}\r\n                variant=\"fullWidth\"\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                centered\r\n                >\r\n                <Tab style={{fontSize:'1rem'}} label=\"적립내역\" />\r\n                <Tab style={{fontSize:'1rem'}} label=\"사용내역\" />\r\n                </Tabs>\r\n\r\n            <TabPanel value={value} index={0} className={classes.panel}>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">적립금</TableCell>\r\n                        <TableCell align=\"center\">비고</TableCell>\r\n                        <TableCell align=\"center\">유효기간</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.date}>\r\n                        <TableCell align=\"center\">{row.point}</TableCell>\r\n                        <TableCell align=\"center\">{row.usage}</TableCell>\r\n                        <TableCell align=\"center\">{row.deadline}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                \r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} className={classes.panel}>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">사용금액</TableCell>\r\n                        <TableCell align=\"center\">사용처</TableCell>\r\n                        <TableCell align=\"center\">사용날짜</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows2.map((row) => (\r\n                        <TableRow key={row.date}>\r\n                        <TableCell align=\"center\">{row.point}</TableCell>\r\n                        <TableCell align=\"center\">{row.usage}</TableCell>\r\n                        <TableCell align=\"center\">{row.deadline}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </TabPanel>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n\r\n}\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js",["248","249","250","251"],"import {  makeStyles, Typography, Box, Paper, Container} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport ReviewedCard from \"./ReviewedCard\"\r\nimport axios from 'axios'\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    }\r\n  }));\r\n  \r\n  export default function ReviewPage() {\r\n    let reviewCount = 1\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    \r\n    const [reviews, setReviews] = useState([])\r\n    const userId=localStorage.getItem('userId');\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/review/getMyReviews', {userId:userId})\r\n        .then(response => {\r\n            console.log(response.data.reviews)\r\n            setReviews(response.data.reviews)\r\n            // reviewCount = reviews.length;\r\n        })\r\n    }, [])\r\n    const ReviewedItems = reviews.map(( review, index) => {\r\n      return <ReviewedCard review = { review } title = {review.post.title} content={review.content} image={review.post.image}/>\r\n    });\r\n\r\n    return (\r\n        <Container style={{paddingTop:'2%'}}>\r\n            <Paper className={classes.root}>\r\n              {ReviewedItems}\r\n            </Paper>\r\n      </Container>\r\n    );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\user_reducer.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\adminPost_reducer.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx",["252","253"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\user_actions.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Store.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Dashboard.js",["254","255","256","257","258","259","260","261","262"],"import dog from './1.jpg';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Avatar, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SpeechRecognition, {useSpeechRecognition} from 'react-speech-recognition'\r\nimport Speech from 'speak-tts';\r\nimport {useCookies} from 'react-cookie'\r\nimport Linkify from 'react-linkify';\r\n\r\n\r\nimport {CTX} from './Store';\r\nimport { Route } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: '50px',\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    flex : {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justify: 'center',\r\n      padding: '2px'\r\n    },\r\n    chatWindow: {\r\n      width: '100%',\r\n      height: '100%',\r\n      maxHeight: '700px',\r\n      padding: '20px',\r\n      overflow: 'auto'\r\n    },\r\n    chatBox: {\r\n      width: '85%'\r\n    },\r\n    button: {\r\n      width: '15%'\r\n    },\r\n    micIcon:{\r\n      color: \"#141414\",\r\n      '&:hover': {\r\n        color: \"#7A7A7A\",\r\n        cursor: 'pointer'\r\n      },\r\n    },\r\n    Img:{\r\n      width: '200px',\r\n      height: '200px'\r\n    }\r\n  }));\r\n\r\n  const speech = new Speech();\r\n\r\n  speech.init({\r\n    volume: 0.5,\r\n    lang: \"ko-KR\",\r\n    rate: 1,\r\n    pitch: 1,\r\n  })\r\n\r\n  export default function Dashboard(){\r\n    const classes = useStyles();\r\n    const messagesEndRef = useRef(null);\r\n  \r\n    // CTX store\r\n    const {allChats, sendChatAction, user} = React.useContext(CTX);\r\n    const topics = Object.keys(allChats);\r\n     \r\n    // local state\r\n    const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n    const [ textValue, changeTextValue ] = React.useState('');\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [count, setCount] = React.useState(2);\r\n    const [isRemember, setIsRemember] =React.useState(false);\r\n    const [token, setToken] = React.useState(Math.random().toString(36).substr(2,11));\r\n    const [cookies, setCookie, removeCookie] = useCookies(['rememberChatToken']);\r\n  \r\n    const {\r\n      interimTranscript,\r\n      finalTranscript,\r\n    } = useSpeechRecognition();\r\n  \r\n    const scrollToBottom = () => {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      setChecked(event.target.checked);\r\n    };\r\n\r\n    useEffect(()=>{\r\n      if(cookies.rememberChatToken === undefined){\r\n        setToken(token);\r\n        setIsRemember(true);\r\n        setCookie('rememberChatToken', token, {maxAge: 20000});\r\n        //console.log(token);\r\n      }\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      scrollToBottom()\r\n      console.log();\r\n      //console.log(cookies.rememberChatToken);\r\n      setCount(count+1);\r\n      if(allChats.general[count-1].from === \"비전\" && checked && allChats.general.length > 2){\r\n        speech.speak({\r\n          text: allChats.general[count-1].msg,\r\n          queue: false\r\n        })\r\n        console.log(allChats.general[count-1]);\r\n        if(allChats.general[count-1].link !== \"\"){\r\n          window.open(allChats.general[count-1].link);\r\n        }\r\n      }\r\n      \r\n    }, [sendChatAction]);\r\n  \r\n    useEffect(()=>{\r\n      if (finalTranscript !== '') {\r\n        console.log('Got final result:', finalTranscript);\r\n        sendChatAction({from: user, msg: finalTranscript, img:'', topic: activeTopic, sessionId: cookies.rememberChatToken});\r\n      }\r\n    }, [interimTranscript, finalTranscript])\r\n  \r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n      return null\r\n    }\r\n  \r\n      return (\r\n        <div>\r\n          <Grid container justify=\"center\" style={{marginTop: '50px'}}>\r\n          <Paper className={classes.root}>\r\n          <Grid item xs={12}>\r\n          <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n            인공지능채팅APP\r\n          </Typography>\r\n          <div className={classes.flex}>\r\n              <div className={classes.chatWindow}>\r\n                  {\r\n                    allChats[activeTopic].map((chat, i)=>(\r\n                      <div className={classes.flex} key={i}>\r\n                        <Chip avatar={<Avatar alt=\"비전\" src={dog}/>} variant=\"outlined\" size=\"small\" label={chat.from}/> \r\n                        <Linkify>\r\n                          <Typography style={{fontSize:'20px', padding: '5px'}}>{chat.msg}<br/>\r\n                        \r\n                          {chat.img !== '' ? (\r\n                            <img src={chat.img} style={{width:'300px'}}/>\r\n                          ) : (\r\n                            <div/>\r\n                          )}\r\n                         </Typography>\r\n                         </Linkify>\r\n                        </div>\r\n                    ))\r\n                  }\r\n                  <div ref={messagesEndRef}/>\r\n              </div>\r\n          </div>\r\n          <div className={classes.flex}>\r\n          <TextField \r\n            id=\"standard-basic\" \r\n            label=\"채팅 입력창\" \r\n            className={classes.chatBox}\r\n            value={textValue}\r\n            onChange={e => changeTextValue(e.target.value)}\r\n            onKeyPress = {(ev) => {\r\n              if(ev.key=='Enter'){\r\n                if(textValue!== ''){\r\n                  sendChatAction({from: user, msg: textValue, img: '', topic: activeTopic, sessionId: cookies.rememberChatToken});\r\n                  changeTextValue('');\r\n                  ev.preventDefault();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <MicIcon className={classes.micIcon}\r\n          onClick={SpeechRecognition.startListening}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\"\r\n          onClick={()=> {\r\n            if(textValue!== ''){\r\n              sendChatAction({from: user, msg: textValue, img:'', topic: activeTopic, sessionId: cookies.rememberChatToken});\r\n              changeTextValue('');\r\n            }\r\n          }}>\r\n          전송\r\n          </Button>\r\n          <FormControlLabel\r\n            defaultChecked\r\n            value=\"start\"\r\n            control={<Checkbox color=\"primary\" checked={checked} onChange={handleChange}/>}\r\n            label=\"voice\"\r\n            labelPlacement=\"start\"\r\n          />\r\n          </div>\r\n          </Grid>\r\n        </Paper>\r\n        </Grid>\r\n        </div>\r\n      );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js",["263","264","265"],"import { Grid, Paper, makeStyles, TextField, ButtonBase, Button, CircularProgress } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        textAlign: \"center\"\r\n    },\r\n    img: {\r\n        width: \"200px\",\r\n        height: \"60px\",\r\n        padding : theme.spacing(1)\r\n    },\r\n    imgDiv : {\r\n        padding : theme.spacing(1)\r\n    },\r\n    accountImg: {\r\n        width: \"20%\",\r\n        padding: theme.spacing(3),\r\n        justifyContent: \"center\",\r\n        verticalAlign : \"middle\"\r\n    },\r\n    divBox : {\r\n        [theme.breakpoints.up('md')] : {\r\n            width : \"70%\"\r\n        },\r\n        width : \"100%\",\r\n        padding : theme.spacing(2),\r\n        justifyContent: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    boxColor : {\r\n        backgroundColor : \"#eeeeee\"\r\n    }\r\n\r\n}))\r\n\r\nfunction CreditCash(props) {\r\n\r\n    const classes = useStyle()\r\n\r\n    const [Banks, setBanks] = useState(props.banks)\r\n\r\n    const [loading, setloading] = useState(true)\r\n\r\n    const [InputAccount, setInputAccount] = useState(false)\r\n\r\n    const [BankSelected, setBankSelected] = useState()\r\n    const [BankNameSelected, setBankNameSelected] = useState()\r\n\r\n    const [BankNumber, setBankNumber] = useState()\r\n\r\n    const BankHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setBankSelected(e.target.src)\r\n        setBankNameSelected(e.target.alt)\r\n        setInputAccount(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setloading(false)\r\n        }, 1500)\r\n    }, [])\r\n\r\n    const BankComponent = Banks.map((bank, index) => {\r\n\r\n        return (\r\n            <ButtonBase className={classes.imgDiv} style={{width : \"100%\"}} type=\"submit\" onClick={BankHandler}>\r\n                <Paper style={{width : \"100%\"}} variant=\"outlined\">\r\n                    <img className={classes.img} src={bank.logo} alt={bank.name} defaultValue={bank.name} />\r\n                </Paper>\r\n            </ButtonBase>\r\n        )\r\n    })\r\n\r\n\r\n    if(loading) {\r\n        return (<Grid container className={classes.root} style={{paddingTop : \"4rem\"}}>\r\n        <CircularProgress />\r\n        </Grid>)\r\n    }\r\n    else if (InputAccount) {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <p><h2 style={{ display: \"inline\" }}>계좌번호 입력</h2> (최초 1회만)</p>\r\n\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div className={classes.divBox} >\r\n                            <form>\r\n                                <Paper variant=\"outlined\">\r\n                                    <div >\r\n                                        <img className={classes.accountImg} src={BankSelected} alt={BankNameSelected} />\r\n                                        <NumberFormat customInput={TextField} name=\"AccountNumber\" style={{ fontSize: \"1.5rem\", width: \"60%\", textAlign: \"center\", verticalAlign : \"middle\" }} format=\"####-####-####-####\" mask=\"_\" />\r\n                                        </div>\r\n                                </Paper>\r\n                            </form>\r\n                        </div>\r\n                        <div  className={classes.divBox}>\r\n                        <Paper className={classes.boxColor} variant=\"outlined\">\r\n                                    <div >\r\n                                        <p><h4 >이름 </h4>\r\n                                            <h2 >고영빈</h2>\r\n                                        </p>\r\n                                    </div>\r\n                            </Paper>\r\n                        </div>\r\n                        {/* 버튼부분 수정 요망 */}\r\n                        <Button href=\"/loading\" type=\"submit\" variant=\"outlined\" style={{fontSize : \"2rem\"}}>\r\n                            등록\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <h2>은행 선택</h2>\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div style={{ width: \"450px\", justifyContent: \"center\", margin: \"auto\" }}>\r\n                            {BankComponent}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreditCash\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewableCard.js",["266"],"import {  Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 200,\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        minWidth: 160,\r\n        left: 10,\r\n        bottom: -20\r\n    },\r\n  });\r\n\r\nexport default function CancelCard(){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    // 모달창\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Card className={classes.root} elevation={3}>\r\n        <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                2021.04.27 배송\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                    \r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                \r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button} onClick={() => history.push('/myPage/review&productId=1')}>리뷰 쓰기</Button> \r\n                </CardActions>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}\r\n                    onClick={handleClickOpen}>\r\n                        숨기기</Button>\r\n                </CardActions>\r\n                    \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        \r\n        </div>\r\n    )\r\n}",["267","268"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js",["269","270","271","272","273","274"],"import { Button, Card, CardActions, CardContent, ButtonGroup, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport { CancelScheduleSend } from '@material-ui/icons';\r\nimport React, { useState } from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      marginBottom: 10,\r\n    },\r\n  });\r\n\r\nexport default function ReviewedCard(props){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n    const review = props.review;\r\n    // const [content, setContent] =useState(review.content)\r\n    // const [title, setTitle] = useState(review.title)\r\n\r\n    return(\r\n        <Card className={classes.root} elevation={3}>\r\n        <CardContent>\r\n                <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Grid container justify='center'>   \r\n                    <Grid item xs={4} sm={2}>\r\n                        <img src={props.image} />\r\n                    </Grid>\r\n                    <Grid item xs={8} sm={10}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                              {props.title}\r\n                            </Typography>\r\n                            <Typography >\r\n                                {\r\n                                    props.content ?\r\n                                    props.content:\r\n                                    \"음성리뷰\"\r\n                                }\r\n                            </Typography>\r\n                    </Grid> \r\n                    </Grid>     \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                <CardActions >\r\n                <ButtonGroup\r\n                    orientation=\"vertical\"\r\n                    fullWidth\r\n                >\r\n                    <Button style={{fontSize:'1rem'}}>수정</Button>\r\n                    <Button style={{fontSize:'1rem'}}>삭제</Button>\r\n                </ButtonGroup>\r\n                </CardActions>\r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js",["275","276","277","278","279","280","281","282"],"import {  Button, Card, CardActions, CardContent, CardHeader ,ButtonGroup, Grid, IconButton, makeStyles, Typography } from '@material-ui/core'\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      marginBottom: 10,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        minWidth: 160,\r\n        left: 10,\r\n        bottom: 5,\r\n    },\r\n  });\r\n\r\nexport default function BuyCard(props){\r\n    const moment = require('moment');\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [purchase, setPurchase] = useState({});\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n   const deletePurchaseHandler = () => {\r\n\r\n    if(window.confirm(\"해당 상품 주문을 취소 하시겠습니까??\") == true) {\r\n    let body = {\r\n        purchaseId:props._id,\r\n        quantity:props.quantity\r\n    }\r\n    axios.post('api/purchase/delete', body)\r\n    .then(response => {\r\n        if(response.data.success) {\r\n            props.deletePurchaseItem(body.purchaseId);\r\n          }\r\n    });\r\n}\r\n}\r\n    console.log(props)\r\n\r\n    return(\r\n        <div>\r\n        <Card className={classes.root} elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <CardHeader\r\n                        title={\r\n                            <Typography variant= \"h6\" color=\"#000000\" style={{marginBottom: '12px'}}>\r\n                       주문일: {moment(props.purchaseDate).format(\"YYYY년M월DD일\")} / {moment(props.purchaseDate).add(3, 'days') > moment() ? \"배송중\":\"배송완료\"}\r\n                            </Typography>\r\n                        }\r\n                    />\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src= {props.post.image[0]}  style ={{width:350,height:300}}/>\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginLeft: '180px',marginBottom: '12px'}}>\r\n                              {props.post.content}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} style={{marginLeft: '180px'}}>\r\n                                {props.quantity}개, {props.total}원\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>         \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                <CardActions>\r\n                <ButtonGroup\r\n                    orientation=\"vertical\"\r\n                    fullWidth\r\n                >  \r\n                <Button onClick = {deletePurchaseHandler}style={{fontSize:'1rem'}}>주문취소</Button>\r\n                    <Button style={{fontSize:'1rem'}}>배송조회</Button>\r\n                    <Button style={{fontSize:'1rem'}} href={`/reviewVoiceWrite/${post}`} >음성리뷰작성</Button>\r\n                    <Button style={{fontSize:'1rem'}} href={`/reviewWrite/${post}`} >일반리뷰작성</Button>\r\n                    <Button style={{fontSize:'1rem'}} href='/qnaPage'>문의하기</Button>\r\n                </ButtonGroup>\r\n                </CardActions>\r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\types.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Content.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyContent.jsx",["283"],"import React,{useState,useEffect }  from 'react';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst MyContent = props => {\r\n\r\n    const [NextPage, setNextPage] = useState(1);\r\n\r\n    //나의 정보 -> 리뷰관리하기, 개인정보수정, 배송지 변경, 카드 및 계좌등록\r\n    const ButtonHandlerA = (e) => {\r\n        e.preventDefault()\r\n        setNextPage(2)\r\n       \r\n    }\r\n\r\n    const ButtonHandler = (e) => {\r\n        if(NextPage !== 1){\r\n            e.preventDefault()\r\n            setNextPage(1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n        }\r\n    }\r\n    \r\n    if(NextPage === 1){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <br />\r\n            <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={10} sm = {3} >\r\n                <Button \r\n                fullWidth\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                type=\"submit\"\r\n                href='order'>\r\n                나의 쇼핑\r\n                </Button>\r\n                </Grid>\r\n                <Grid item xs={10} sm = {3} >\r\n                <Button \r\n                fullWidth \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                type=\"submit\"\r\n                href='pointPage'\r\n                >\r\n                나의 혜택\r\n                </Button>\r\n                </Grid>\r\n                <Grid item xs={10} sm = {3} >\r\n                <form onSubmit = {ButtonHandlerA}>\r\n                <Button \r\n                fullWidth \r\n                variant=\"contained\" \r\n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                type=\"submit\"\r\n                >\r\n                나의 정보\r\n                </Button>\r\n                </form>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n        )} else if(NextPage === 2) {\r\n            return (\r\n                <div>\r\n                <br />\r\n                <br />\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth\r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='reviewPage'\r\n                    >\r\n                    리뷰관리\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='privacy'\r\n                    >\r\n                    개인정보수정\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='DeliveryCard'\r\n                    >\r\n                    배송정보변경\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='card'\r\n                    >\r\n                    카드/계좌등록\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <form onSubmit = {ButtonHandler}>\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    type=\"submit\"\r\n                    >\r\n                    뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid> \r\n                </Grid>\r\n                </div>\r\n                )} else {\r\n                    return(\r\n                    <div>error</div>)}}\r\n                                            \r\nexport default MyContent;","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\Config.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostCard.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\QnaPage.js",["284","285","286","287","288","289","290"],"import { Box, Button, Card, CardContent, Container, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Phone } from '@material-ui/icons';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    BoxComponent:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex',\r\n        margin:'auto'\r\n    },\r\n    InputBoxComponent:{\r\n        height:'240px',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    }\r\n  });\r\n\r\nexport default function QnaPage(props){\r\n    const classes = useStyles();\r\n\r\n    const [content, setContent] = useState(\"\");//문의내용\r\n    const [phone, setPhone] = useState(\"\");//핸드폰번호\r\n    const [user, setUser] = useState({});\r\n    const userId=localStorage.getItem('userId');\r\n\r\n    const handleChangeContent = (event) => {\r\n        setContent(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangePhone = (event) => {\r\n        setPhone(event.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`api/users/auth`)\r\n        .then(response =>{\r\n            setUser(response.data);\r\n            console.log(user.email);\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (content === \"\" || phone === \"\") {\r\n            return alert('문의내용 및 안내받을 휴대폰 번호를 입력해주세요.')\r\n        }\r\n\r\n        const variables = {\r\n            email: user.email,\r\n            content: content,\r\n            phone: phone\r\n        }\r\n\r\n        axios.post('/api/purchase/qnaRequest', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('문의가 정상적으로 완료되었습니다.')\r\n                    props.history.push('/order')\r\n                } else {\r\n                    alert('문의에 실패하였습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div>\r\n        <Container style={{paddingTop:'2%'}}>\r\n        <Divider/>\r\n        <br/>\r\n        <form>\r\n        <Divider/>\r\n        <Box className={classes.InputBoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                <Box style={{display:'flex'}}>\r\n                    <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"문의내용\"\r\n                    multiline\r\n                    rows={8}\r\n                    variant=\"outlined\"\r\n                    style={{ width:'1200px'}}\r\n                    onChange={handleChangeContent}\r\n                    value={content}\r\n                />\r\n\r\n                    </Box>\r\n                    <br/>\r\n\r\n                    <Box style={{display:'flex'}}>\r\n                    <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"전화번호\"\r\n                    multiline\r\n                    rows={1}\r\n                    variant=\"outlined\"\r\n                    style={{ width:'1200px'}}\r\n                    onChange={handleChangePhone}\r\n                    value={phone}\r\n                />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n\r\n        <Box className={classes.BoxComponent}>\r\n            <Button onClick={onSubmit}variant=\"outlined\" style={{fontSize:'1.2rem', width:'120px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\r\n        </Box>\r\n        </form>\r\n        </Container>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewVoiceWrite.js",["291","292","293","294","295"],"import { Box, Button, Card, CardContent, Container, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport axios from 'axios'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    BoxComponent:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex',\r\n        margin:'auto'\r\n    },\r\n    InputBoxComponent:{\r\n        height:'240px',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    }\r\n  });\r\n\r\nexport default function ReviewVoiceWrite(props){\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = React.useState(2); //별점\r\n    const [FilePath, setFilePath] = useState(\"\");\r\n    const [post, setPost] = useState({});\r\n    const userId=localStorage.getItem('userId');\r\n    const postId = props.match.params.postId;\r\n\r\n    const handleChangeFilePath = (event) => {\r\n        setFilePath(event.currentTarget.value)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.post('/api/post/getPost', {postId:postId})\r\n        .then(response => {\r\n            console.log(response.data.post)\r\n            setPost(response.data.post)\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (post === null || FilePath === \"\") {\r\n            return alert('Please first fill all the fields')\r\n        }\r\n\r\n        const variables = {\r\n            author: userId,\r\n            post: post._id,\r\n            filepath: FilePath,\r\n            voice: true,\r\n            star: value\r\n        }\r\n\r\n        axios.post('/api/review/uploadReview', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('Review Uploaded Successfully')\r\n                    props.history.push('/order')\r\n                } else {\r\n                    alert('Failed to upload review')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    //음성녹음용\r\n    const [stream, setStream] = useState();\r\n    const [media, setMedia] = useState();\r\n    const [onRec, setOnRec] = useState(true);\r\n    const [source, setSource] = useState();\r\n    const [analyser, setAnalyser] = useState();\r\n    const [audioUrl, setAudioUrl] = useState();\r\n    const [file, setFile] = useState();\r\n    const onRecAudio = () => {\r\n        // 음원정보를 담은 노드를 생성하거나 음원을 실행또는 디코딩 시키는 일을 한다\r\n        const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n        \r\n        // 자바스크립트를 통해 음원의 진행상태에 직접접근에 사용된다.\r\n        const analyser = audioCtx.createScriptProcessor(0, 1, 1);\r\n        setAnalyser(analyser);\r\n    \r\n        function makeSound(stream) {\r\n          // 내 컴퓨터의 마이크나 다른 소스를 통해 발생한 오디오 스트림의 정보를 보여준다.\r\n          const source = audioCtx.createMediaStreamSource(stream);\r\n          setSource(source);\r\n          \r\n          // AudioBufferSourceNode 연결\r\n          source.connect(analyser);\r\n          analyser.connect(audioCtx.destination);\r\n        }\r\n        \r\n        // 마이크 사용 권한 획득 후 녹음 시작\r\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\r\n          const mediaRecorder = new MediaRecorder(stream);\r\n          mediaRecorder.start();\r\n          setStream(stream);\r\n          setMedia(mediaRecorder);\r\n          makeSound(stream);\r\n        \r\n        analyser.onaudioprocess = function (e) {\r\n            // 10초) 지나면 자동으로 음성 저장 및 녹음 중지\r\n            if (e.playbackTime > 10) {\r\n              stream.getAudioTracks().forEach(function (track) {\r\n                track.stop();\r\n              });\r\n              mediaRecorder.stop();\r\n              // 메서드가 호출 된 노드 연결 해제\r\n              analyser.disconnect();\r\n              audioCtx.createMediaStreamSource(stream).disconnect();\r\n    \r\n              mediaRecorder.ondataavailable = function (e) {\r\n                setAudioUrl(e.data);\r\n                setOnRec(true);\r\n              };\r\n            } else {// 음성 녹음이 시작됐을 때 onRec state값을 false로 변경\r\n              setOnRec(false);\r\n            }\r\n          };\r\n        });\r\n      };\r\n\r\n    const offRecAudio = () => {\r\n        // dataavailable 이벤트로 Blob 데이터에 대한 응답을 받을 수 있음\r\n        media.ondataavailable = function (e) {\r\n          setAudioUrl(e.data);\r\n          setOnRec(true);\r\n        };\r\n    \r\n        // 모든 트랙에서 stop()을 호출해 오디오 스트림을 정지\r\n        stream.getAudioTracks().forEach(function (track) {\r\n          track.stop();\r\n        });\r\n    \r\n        // 미디어 캡처 중지\r\n        media.stop();\r\n        \r\n        // 메서드가 호출 된 노드 연결 해제\r\n        analyser.disconnect();\r\n        source.disconnect();\r\n      };\r\n\r\n      const onSubmitAudioFile = useCallback(() => {\r\n        if (audioUrl) {\r\n          console.log(URL.createObjectURL(audioUrl)); // 출력된 링크에서 녹음된 오디오 확인 가능\r\n        }\r\n        // File 생성자를 사용해 파일로 변환\r\n        const sound = new File([audioUrl], \"soundBlob.m4a\", { lastModified: new Date().getTime(), type: \"audio/mpeg\" });\r\n        console.log(sound); // File 정보 출력\r\n        setFile(sound);\r\n\r\n\r\n        //곧바로 multer로 저장시키고 filepath잡아주기\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", sound)\r\n        \r\n        axios.post('/api/review/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data);\r\n\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n\r\n                } else{\r\n                    alert('음성 업로드를 실패하였습니다.');\r\n                }\r\n            })\r\n\r\n    }, [audioUrl]);\r\n        \r\n    return(\r\n        <div>\r\n        <Container style={{paddingTop:'2%'}}>\r\n        <Card className={classes.root} elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src={post.image}/>\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                {post.title}\r\n                            </Typography>\r\n                            <Typography className={classes.pos}>\r\n                                2021년 04월 27일 배송완료\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        <br/>\r\n        <Divider/>\r\n        <br/>\r\n        <form encType='multipart/form-data'>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" className={classes.BoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"legend\">[ 별점 ]</Typography>\r\n                    <Rating\r\n                    name=\"simple-controlled\"\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.InputBoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Box style={{display:'flex'}}>\r\n                    <Button onClick={onRec ? onRecAudio : offRecAudio}>녹음하기</Button>\r\n                    <Button onClick={onSubmitAudioFile}>음성 확인</Button>\r\n                   \r\n                    <Input\r\n                    onChange={handleChangeFilePath}\r\n                    value={FilePath}\r\n                    />\r\n\r\n                  </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.BoxComponent}>\r\n            <Button onClick={onSubmit}variant=\"outlined\" style={{fontSize:'1.2rem', width:'120px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\r\n        </Box>\r\n        </form>\r\n        </Container>\r\n        \r\n        </div>\r\n    )\r\n}",{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","severity":1,"message":"301","line":1,"column":10,"nodeType":"302","messageId":"303","endLine":1,"endColumn":15},{"ruleId":"300","severity":1,"message":"304","line":11,"column":7,"nodeType":"302","messageId":"303","endLine":11,"endColumn":15},{"ruleId":"300","severity":1,"message":"305","line":19,"column":7,"nodeType":"302","messageId":"303","endLine":19,"endColumn":12},{"ruleId":"300","severity":1,"message":"306","line":1,"column":27,"nodeType":"302","messageId":"303","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"307","line":2,"column":39,"nodeType":"302","messageId":"303","endLine":2,"endColumn":43},{"ruleId":"300","severity":1,"message":"308","line":2,"column":67,"nodeType":"302","messageId":"303","endLine":2,"endColumn":83},{"ruleId":"300","severity":1,"message":"309","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":15},{"ruleId":"300","severity":1,"message":"310","line":2,"column":47,"nodeType":"302","messageId":"303","endLine":2,"endColumn":57},{"ruleId":"300","severity":1,"message":"311","line":36,"column":12,"nodeType":"302","messageId":"303","endLine":36,"endColumn":21},{"ruleId":"300","severity":1,"message":"312","line":36,"column":23,"nodeType":"302","messageId":"303","endLine":36,"endColumn":35},{"ruleId":"300","severity":1,"message":"313","line":14,"column":8,"nodeType":"302","messageId":"303","endLine":14,"endColumn":17},{"ruleId":"300","severity":1,"message":"314","line":48,"column":12,"nodeType":"302","messageId":"303","endLine":48,"endColumn":25},{"ruleId":"300","severity":1,"message":"315","line":50,"column":11,"nodeType":"302","messageId":"303","endLine":50,"endColumn":23},{"ruleId":"300","severity":1,"message":"316","line":55,"column":12,"nodeType":"302","messageId":"303","endLine":55,"endColumn":19},{"ruleId":"300","severity":1,"message":"317","line":57,"column":11,"nodeType":"302","messageId":"303","endLine":57,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":38,"column":8,"nodeType":"320","endLine":38,"endColumn":10,"suggestions":"321"},{"ruleId":"300","severity":1,"message":"322","line":2,"column":128,"nodeType":"302","messageId":"303","endLine":2,"endColumn":142},{"ruleId":"300","severity":1,"message":"323","line":98,"column":9,"nodeType":"302","messageId":"303","endLine":98,"endColumn":17},{"ruleId":"318","severity":1,"message":"324","line":136,"column":7,"nodeType":"320","endLine":136,"endColumn":9,"suggestions":"325"},{"ruleId":"300","severity":1,"message":"326","line":1,"column":15,"nodeType":"302","messageId":"303","endLine":1,"endColumn":23},{"ruleId":"300","severity":1,"message":"327","line":5,"column":44,"nodeType":"302","messageId":"303","endLine":5,"endColumn":52},{"ruleId":"300","severity":1,"message":"328","line":5,"column":54,"nodeType":"302","messageId":"303","endLine":5,"endColumn":65},{"ruleId":"300","severity":1,"message":"329","line":5,"column":92,"nodeType":"302","messageId":"303","endLine":5,"endColumn":103},{"ruleId":"300","severity":1,"message":"330","line":108,"column":14,"nodeType":"302","messageId":"303","endLine":108,"endColumn":22},{"ruleId":"300","severity":1,"message":"331","line":1,"column":22,"nodeType":"302","messageId":"303","endLine":1,"endColumn":25},{"ruleId":"300","severity":1,"message":"332","line":1,"column":27,"nodeType":"302","messageId":"303","endLine":1,"endColumn":31},{"ruleId":"300","severity":1,"message":"333","line":43,"column":12,"nodeType":"302","messageId":"303","endLine":43,"endColumn":17},{"ruleId":"300","severity":1,"message":"315","line":45,"column":11,"nodeType":"302","messageId":"303","endLine":45,"endColumn":23},{"ruleId":"300","severity":1,"message":"334","line":1,"column":68,"nodeType":"302","messageId":"303","endLine":1,"endColumn":73},{"ruleId":"300","severity":1,"message":"335","line":31,"column":12,"nodeType":"302","messageId":"303","endLine":31,"endColumn":16},{"ruleId":"300","severity":1,"message":"336","line":33,"column":11,"nodeType":"302","messageId":"303","endLine":33,"endColumn":26},{"ruleId":"300","severity":1,"message":"337","line":37,"column":11,"nodeType":"302","messageId":"303","endLine":37,"endColumn":22},{"ruleId":"318","severity":1,"message":"324","line":60,"column":8,"nodeType":"320","endLine":60,"endColumn":10,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":118,"column":25,"nodeType":"341","endLine":118,"endColumn":48},{"ruleId":"300","severity":1,"message":"342","line":1,"column":51,"nodeType":"302","messageId":"303","endLine":1,"endColumn":55},{"ruleId":"300","severity":1,"message":"343","line":66,"column":11,"nodeType":"302","messageId":"303","endLine":66,"endColumn":22},{"ruleId":"300","severity":1,"message":"344","line":43,"column":9,"nodeType":"302","messageId":"303","endLine":43,"endColumn":20},{"ruleId":"300","severity":1,"message":"333","line":45,"column":12,"nodeType":"302","messageId":"303","endLine":45,"endColumn":17},{"ruleId":"300","severity":1,"message":"315","line":47,"column":11,"nodeType":"302","messageId":"303","endLine":47,"endColumn":23},{"ruleId":"318","severity":1,"message":"345","line":61,"column":8,"nodeType":"320","endLine":61,"endColumn":10,"suggestions":"346"},{"ruleId":"300","severity":1,"message":"347","line":10,"column":10,"nodeType":"302","messageId":"303","endLine":10,"endColumn":21},{"ruleId":"348","severity":1,"message":"349","line":99,"column":44,"nodeType":"350","messageId":"351","endLine":99,"endColumn":46},{"ruleId":"300","severity":1,"message":"352","line":19,"column":10,"nodeType":"302","messageId":"303","endLine":19,"endColumn":15},{"ruleId":"300","severity":1,"message":"353","line":76,"column":25,"nodeType":"302","messageId":"303","endLine":76,"endColumn":42},{"ruleId":"300","severity":1,"message":"354","line":80,"column":12,"nodeType":"302","messageId":"303","endLine":80,"endColumn":22},{"ruleId":"300","severity":1,"message":"355","line":82,"column":32,"nodeType":"302","messageId":"303","endLine":82,"endColumn":44},{"ruleId":"318","severity":1,"message":"356","line":104,"column":8,"nodeType":"320","endLine":104,"endColumn":10,"suggestions":"357"},{"ruleId":"318","severity":1,"message":"358","line":122,"column":8,"nodeType":"320","endLine":122,"endColumn":24,"suggestions":"359"},{"ruleId":"318","severity":1,"message":"360","line":129,"column":8,"nodeType":"320","endLine":129,"endColumn":44,"suggestions":"361"},{"ruleId":"339","severity":1,"message":"340","line":153,"column":29,"nodeType":"341","endLine":153,"endColumn":74},{"ruleId":"348","severity":1,"message":"349","line":173,"column":24,"nodeType":"350","messageId":"351","endLine":173,"endColumn":26},{"ruleId":"300","severity":1,"message":"362","line":45,"column":19,"nodeType":"302","messageId":"303","endLine":45,"endColumn":27},{"ruleId":"300","severity":1,"message":"363","line":54,"column":12,"nodeType":"302","messageId":"303","endLine":54,"endColumn":22},{"ruleId":"300","severity":1,"message":"364","line":54,"column":24,"nodeType":"302","messageId":"303","endLine":54,"endColumn":37},{"ruleId":"339","severity":1,"message":"340","line":71,"column":25,"nodeType":"341","endLine":71,"endColumn":177},{"ruleId":"296","replacedBy":"365"},{"ruleId":"298","replacedBy":"366"},{"ruleId":"300","severity":1,"message":"367","line":2,"column":10,"nodeType":"302","messageId":"303","endLine":2,"endColumn":28},{"ruleId":"300","severity":1,"message":"335","line":13,"column":12,"nodeType":"302","messageId":"303","endLine":13,"endColumn":16},{"ruleId":"300","severity":1,"message":"336","line":15,"column":11,"nodeType":"302","messageId":"303","endLine":15,"endColumn":26},{"ruleId":"300","severity":1,"message":"337","line":19,"column":11,"nodeType":"302","messageId":"303","endLine":19,"endColumn":22},{"ruleId":"300","severity":1,"message":"368","line":23,"column":11,"nodeType":"302","messageId":"303","endLine":23,"endColumn":17},{"ruleId":"339","severity":1,"message":"340","line":34,"column":25,"nodeType":"341","endLine":34,"endColumn":50},{"ruleId":"300","severity":1,"message":"369","line":1,"column":82,"nodeType":"302","messageId":"303","endLine":1,"endColumn":92},{"ruleId":"300","severity":1,"message":"370","line":2,"column":10,"nodeType":"302","messageId":"303","endLine":2,"endColumn":24},{"ruleId":"300","severity":1,"message":"306","line":4,"column":26,"nodeType":"302","messageId":"303","endLine":4,"endColumn":35},{"ruleId":"300","severity":1,"message":"335","line":29,"column":12,"nodeType":"302","messageId":"303","endLine":29,"endColumn":16},{"ruleId":"300","severity":1,"message":"336","line":32,"column":11,"nodeType":"302","messageId":"303","endLine":32,"endColumn":26},{"ruleId":"300","severity":1,"message":"337","line":36,"column":11,"nodeType":"302","messageId":"303","endLine":36,"endColumn":22},{"ruleId":"348","severity":1,"message":"349","line":43,"column":48,"nodeType":"350","messageId":"351","endLine":43,"endColumn":50},{"ruleId":"339","severity":1,"message":"340","line":73,"column":25,"nodeType":"341","endLine":73,"endColumn":91},{"ruleId":"300","severity":1,"message":"306","line":1,"column":24,"nodeType":"302","messageId":"303","endLine":1,"endColumn":33},{"ruleId":"300","severity":1,"message":"307","line":1,"column":23,"nodeType":"302","messageId":"303","endLine":1,"endColumn":27},{"ruleId":"300","severity":1,"message":"371","line":1,"column":29,"nodeType":"302","messageId":"303","endLine":1,"endColumn":40},{"ruleId":"300","severity":1,"message":"334","line":1,"column":68,"nodeType":"302","messageId":"303","endLine":1,"endColumn":73},{"ruleId":"300","severity":1,"message":"310","line":1,"column":98,"nodeType":"302","messageId":"303","endLine":1,"endColumn":108},{"ruleId":"300","severity":1,"message":"372","line":4,"column":10,"nodeType":"302","messageId":"303","endLine":4,"endColumn":15},{"ruleId":"300","severity":1,"message":"373","line":34,"column":11,"nodeType":"302","messageId":"303","endLine":34,"endColumn":17},{"ruleId":"318","severity":1,"message":"374","line":50,"column":8,"nodeType":"320","endLine":50,"endColumn":10,"suggestions":"375"},{"ruleId":"300","severity":1,"message":"376","line":1,"column":87,"nodeType":"302","messageId":"303","endLine":1,"endColumn":96},{"ruleId":"318","severity":1,"message":"324","line":48,"column":8,"nodeType":"320","endLine":48,"endColumn":10,"suggestions":"377"},{"ruleId":"300","severity":1,"message":"378","line":84,"column":12,"nodeType":"302","messageId":"303","endLine":84,"endColumn":16},{"ruleId":"300","severity":1,"message":"379","line":177,"column":25,"nodeType":"302","messageId":"303","endLine":177,"endColumn":33},{"ruleId":"339","severity":1,"message":"340","line":198,"column":25,"nodeType":"341","endLine":198,"endColumn":48},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'newsPost' is assigned a value but never used.","'theme' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'CircularProgress' is defined but never used.","'Check' is defined but never used.","'Typography' is defined but never used.","'CreditNum' is assigned a value but never used.","'setCreditNum' is assigned a value but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleChange2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["382"],"'FormHelperText' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["383"],"'useState' is defined but never used.","'Exposure' is defined but never used.","'Brightness6' is defined but never used.","'ZoomInSharp' is defined but never used.","'zomReset' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'value' is assigned a value but never used.","'Input' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["384"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","'cancelCount' is assigned a value but never used.","'reviewCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["385"],"'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Route' is defined but never used.","'changeActiveTopic' is assigned a value but never used.","'isRemember' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.rememberChatToken', 'setCookie', and 'token'. Either include them or remove the dependency array. You can also do a functional update 'setToken(t => ...)' if you only need 'token' in the 'setToken' call.",["386"],"React Hook useEffect has missing dependencies: 'allChats.general', 'checked', and 'count'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["387"],"React Hook useEffect has missing dependencies: 'activeTopic', 'cookies.rememberChatToken', 'sendChatAction', and 'user'. Either include them or remove the dependency array.",["388"],"'setBanks' is assigned a value but never used.","'BankNumber' is assigned a value but never used.","'setBankNumber' is assigned a value but never used.",["380"],["381"],"'CancelScheduleSend' is defined but never used.","'review' is assigned a value but never used.","'IconButton' is defined but never used.","'DeleteOutlined' is defined but never used.","'CardContent' is defined but never used.","'Phone' is defined but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["389"],"'TextField' is defined but never used.",["390"],"'file' is assigned a value but never used.","'variable' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"393","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"393","fix":"406"},"Update the dependencies array to be: [category]",{"range":"407","text":"408"},"Update the dependencies array to be: [postId]",{"range":"409","text":"410"},{"range":"411","text":"410"},"Update the dependencies array to be: [userId]",{"range":"412","text":"413"},"Update the dependencies array to be: [cookies.rememberChatToken, setCookie, token]",{"range":"414","text":"415"},"Update the dependencies array to be: [allChats.general, checked, count, sendChatAction]",{"range":"416","text":"417"},"Update the dependencies array to be: [interimTranscript, finalTranscript, sendChatAction, user, activeTopic, cookies.rememberChatToken]",{"range":"418","text":"419"},"Update the dependencies array to be: [user.email]",{"range":"420","text":"421"},{"range":"422","text":"410"},[1114,1116],"[category]",[3735,3737],"[postId]",[1626,1628],[1660,1662],"[userId]",[2934,2936],"[cookies.rememberChatToken, setCookie, token]",[3482,3498],"[allChats.general, checked, count, sendChatAction]",[3767,3803],"[interimTranscript, finalTranscript, sendChatAction, user, activeTopic, cookies.rememberChatToken]",[1381,1383],"[user.email]",[1394,1396]]