
[{"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\index.js":"1","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\serviceWorker.js":"2","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\App.js":"3","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_reducer\\index.js":"4","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\hoc\\auth.js":"5","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"6","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\PayPage.js":"7","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\MainPage.js":"8","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js":"9","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Navbar.js":"10","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js":"11","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Sidebar\\Sidebar.js":"12","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Category\\Category.js":"13","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\AIChat\\Chat.js":"14","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Introduce\\Introduce.js":"15","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"16","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Nav.js":"17","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\PostPage\\PostDetailPage.js":"18","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js":"19","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_reducer\\user_reducer.js":"20","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_reducer\\adminPost_reducer.js":"21","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx":"22","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\AIChat\\Dashboard.js":"23","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\AIChat\\Store.js":"24","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_action\\user_actions.js":"25","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js":"26","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\PostPage\\PostCard.js":"27","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_action\\types.js":"28","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Category\\Content.jsx":"29","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx":"30","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\Config.js":"31","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js":"32","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js":"33","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Sidebar\\RightMenu.js":"34","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js":"35","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js":"36","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js":"37","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js":"38","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Cancel.js":"39","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js":"40","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js":"41","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js":"42","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js":"43","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewableCard.js":"44","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js":"45","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx":"46","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyCategory.js":"47","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyContent.jsx":"48","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Privacy.js":"49"},{"size":1595,"mtime":1621143353216,"results":"50","hashOfConfig":"51"},{"size":5086,"mtime":1621143353219,"results":"52","hashOfConfig":"51"},{"size":3930,"mtime":1621518057851,"results":"53","hashOfConfig":"51"},{"size":226,"mtime":1621262114033,"results":"54","hashOfConfig":"51"},{"size":1584,"mtime":1621143353215,"results":"55","hashOfConfig":"51"},{"size":8021,"mtime":1621143353098,"results":"56","hashOfConfig":"51"},{"size":3324,"mtime":1621143353132,"results":"57","hashOfConfig":"51"},{"size":5097,"mtime":1621262114041,"results":"58","hashOfConfig":"51"},{"size":1231,"mtime":1621143353131,"results":"59","hashOfConfig":"51"},{"size":1236,"mtime":1621143353120,"results":"60","hashOfConfig":"51"},{"size":4097,"mtime":1621143353130,"results":"61","hashOfConfig":"51"},{"size":3866,"mtime":1621143353123,"results":"62","hashOfConfig":"51"},{"size":399,"mtime":1621143353078,"results":"63","hashOfConfig":"51"},{"size":224,"mtime":1621143353075,"results":"64","hashOfConfig":"51"},{"size":2271,"mtime":1621143353082,"results":"65","hashOfConfig":"51"},{"size":30655,"mtime":1621143353192,"results":"66","hashOfConfig":"51"},{"size":7290,"mtime":1621514814967,"results":"67","hashOfConfig":"51"},{"size":10968,"mtime":1621474789822,"results":"68","hashOfConfig":"51"},{"size":2378,"mtime":1621479244013,"results":"69","hashOfConfig":"51"},{"size":623,"mtime":1621262114035,"results":"70","hashOfConfig":"51"},{"size":453,"mtime":1621143353065,"results":"71","hashOfConfig":"51"},{"size":3515,"mtime":1621475042478,"results":"72","hashOfConfig":"51"},{"size":2501,"mtime":1621143353076,"results":"73","hashOfConfig":"51"},{"size":878,"mtime":1621143353077,"results":"74","hashOfConfig":"51"},{"size":1102,"mtime":1621262114031,"results":"75","hashOfConfig":"51"},{"size":476,"mtime":1621143353081,"results":"76","hashOfConfig":"51"},{"size":2099,"mtime":1621508636075,"results":"77","hashOfConfig":"51"},{"size":274,"mtime":1621262114029,"results":"78","hashOfConfig":"51"},{"size":18158,"mtime":1621474461545,"results":"79","hashOfConfig":"51"},{"size":3342,"mtime":1621463390529,"results":"80","hashOfConfig":"51"},{"size":96,"mtime":1621463390516,"results":"81","hashOfConfig":"51"},{"size":4830,"mtime":1621143353129,"results":"82","hashOfConfig":"51"},{"size":3602,"mtime":1621143353126,"results":"83","hashOfConfig":"51"},{"size":1425,"mtime":1621143353122,"results":"84","hashOfConfig":"51"},{"size":685,"mtime":1621143353089,"results":"85","hashOfConfig":"51"},{"size":772,"mtime":1621143353085,"results":"86","hashOfConfig":"51"},{"size":1606,"mtime":1621509060043,"results":"87","hashOfConfig":"51"},{"size":1504,"mtime":1621515727117,"results":"88","hashOfConfig":"51"},{"size":2461,"mtime":1621512819900,"results":"89","hashOfConfig":"51"},{"size":1203,"mtime":1621517826923,"results":"90","hashOfConfig":"51"},{"size":5103,"mtime":1621514717601,"results":"91","hashOfConfig":"51"},{"size":5053,"mtime":1621512407369,"results":"92","hashOfConfig":"51"},{"size":2304,"mtime":1621517578290,"results":"93","hashOfConfig":"51"},{"size":4091,"mtime":1621143353116,"results":"94","hashOfConfig":"51"},{"size":3241,"mtime":1621512450206,"results":"95","hashOfConfig":"51"},{"size":1211,"mtime":1621474732991,"results":"96","hashOfConfig":"51"},{"size":409,"mtime":1621475339420,"results":"97","hashOfConfig":"51"},{"size":4929,"mtime":1621517849482,"results":"98","hashOfConfig":"51"},{"size":1203,"mtime":1621517824008,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1gi24p4",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\index.js",[],["209","210"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\serviceWorker.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\App.js",["211"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_reducer\\index.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\hoc\\auth.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\PayPage.js",["212","213","214","215"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, Container, makeStyles, Card, Input, Paper, Button, CircularProgress } from '@material-ui/core'\r\nimport NumberFormat from 'react-number-format'\r\nimport { Check } from '@material-ui/icons'\r\nimport LoadingAndSuccess from './LoadingAndSuccess'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        // paddingTop : theme.spacing(12)\r\n        backgroundColor : \"white\"\r\n    },\r\n    creditCard: {\r\n        paddingTop: theme.spacing(4),\r\n        margin: 'auto',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        width: \"100%\"\r\n    },\r\n    cardPadding: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    cardForm: {\r\n        width: \"100%\",\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"320px\"\r\n        }\r\n    },\r\n    card: {\r\n        border: '1px solid #dddddd',\r\n        padding: '0 0.8rem',\r\n        fontSize: '1rem',\r\n        lineHeight: '2rem',\r\n        margin: '0.2rem',\r\n        color: '#666666',\r\n        backgroundColor: '#f8f8f8'\r\n    },\r\n    cardBtn: {\r\n        marginTop: '1.5rem',\r\n        marginBottom: \"0\",\r\n        backgroundColor : theme.palette.primary\r\n    }\r\n}))\r\n\r\n\r\nfunction PayPage() {\r\n    const classes = useStyle()\r\n\r\n    const [Success, setSuccess] = useState(false)\r\n\r\n\r\n    const SuccessHandle = (e) => {\r\n        e.preventDefault()\r\n\r\n        setSuccess(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container component=\"body\" className={classes.root}>\r\n            <Grid className={classes.creditCard} component=\"h4\" container>\r\n\r\n                {Success ? \r\n                <LoadingAndSuccess />  :\r\n                <div>\r\n                <Grid item md={12}>\r\n                    <h3 >내 카드 정보</h3>\r\n                </Grid>\r\n                    <Grid item style={{margin : 'auto'}} className={classes.cardPadding} sm={6}>\r\n                        <Paper component=\"body\" className={classes.cardForm} variant=\"outlined\" >\r\n                            <form noValidate autoComplete=\"off\">\r\n\r\n                                <div >\r\n                                    <NumberFormat disabled value=\"4321431243214321\" format=\"####-####-####-####\" className={classes.card} style={{ width: '68%' }} placeholder=\"카드 번호\" />\r\n                                    <img style={{ width: \"12%\", verticalAlign: \"middle\" }} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Visa.svg/1024px-Visa.svg.png\" alt=\"VISA\" />\r\n                                    <Input disabled className={classes.card} value=\"KO YEONG BIN\" style={{ width: '80%' }} placeholder=\"이름\" />\r\n                                </div>\r\n\r\n                                <div>\r\n                                </div>\r\n                                {/* 버튼 부분 수정해야함 */}\r\n                                <Button onClick={SuccessHandle} className={classes.cardBtn} variant=\"contained\" color=\"primary\" type=\"submit\" >결제</Button>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                </div>\r\n            }\r\n\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PayPage\r\n","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\MainPage.js",["216","217"],"import React from \"react\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport {  Typography ,Grid, Container, Paper, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport SubContent from './LandContents/SubContent'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nconst newsPost = {\r\n  title: \"Title Sample\",\r\n  description: \"description Sample, which codes is best code? can you choice that?\",\r\n  linkText: \"LinkText Sample\",\r\n  linkURL: \"http://localhost:3000/\",\r\n  image: \"https://source.unsplash.com/random\"\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n \r\n    h6: {\r\n      fontSize:13\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flex: {\r\n    display: 'flex',\r\n    padding: '20px',\r\n  },\r\n  AppbarContainer: {\r\n    maxWidth: '100%',\r\n    margin: theme.spacing(0, 0, 0, 0),\r\n    padding: theme.spacing(0, 0, 0, 0),\r\n    position: \"relative\",\r\n    zIndex: \"2\"\r\n },\r\n  productToolbar: {\r\n    top:\"10%\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n appbar2: {\r\n  position: \"relative\",\r\n  display: \"relative\",\r\n  alignItems: \"center\",\r\n},\r\n  }))\r\n\r\n  function MainPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n  <div>\r\n    <div className={classes.flex}>\r\n      <Container>\r\n      <React.Fragment>\r\n      <CssBaseline />\r\n      <Paper elevation={3}>\r\n      <Typography\r\n      variant=\"h5\" \r\n      style={{textAlign:'center'}}>\r\n      <br/>\r\n      당신의 Vision을 들려주세요.\r\n      <br />\r\n      </Typography>\r\n      <Typography\r\n      variant=\"subtitle1\" \r\n      style={{textAlign:'center'}}\r\n      >\r\n      저희 Vision Market은 사용자들의 리뷰를 바탕으로\r\n      <br />\r\n      시각 장애인들에게 상품을 들려줍니다.\r\n      </Typography>\r\n      <br />\r\n      </Paper>\r\n    </React.Fragment>\r\n    </Container>\r\n    </div>\r\n    <div>\r\n    <Container className={classes.AppbarContainer} >\r\n    <AppBar className={classes.appbar2} style={{ backgroundColor: \"#505050\" }}>\r\n                <Toolbar >\r\n                    <Button color=\"inherit\" aria-label=\"모든 카테고리\" href=\"/category\" style={{ fontSize: '1.2rem' }}>\r\n                            모든 카테고리\r\n                    </Button>\r\n                    <Button color=\"inherit\" aria-label=\"소개 및 안내\" href=\"/introduce\" style={{ fontSize: '1.2rem' }}>\r\n                            소개 및 안내\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            </Container>\r\n            </div>\r\n            <Container>\r\n          <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 인기상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 신상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 추천상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n            </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default MainPage;","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Navbar.js",["218"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js",["219","220","221"],"import React, { useState } from 'react'\r\nimport { Grid, Container,  makeStyles, Paper, Typography, ButtonBase} from '@material-ui/core'\r\nimport CreditCard from './CreditCard/CreditCard'\r\nimport CreditCash from './CreditCash/CreditCash'\r\nimport Banks from './BankInformation.json'\r\n\r\nconst useStyle = makeStyles((theme => ({\r\n    root: {\r\n        paddingTop: theme.spacing(30),\r\n        backgroundColor : theme.palette.action.hover,\r\n        height : '100%',\r\n        paddingBottom : \"30%\"\r\n    },\r\n    mainTitle: {\r\n        padding : theme.spacing(3),\r\n        borderColor : theme.palette.action.selected,\r\n        margin : theme.spacing(3)\r\n    },\r\n    creditTitle: {\r\n        width: '100%',\r\n        borderColor : theme.palette.action.selected\r\n    },\r\n    enrollement: {\r\n        padding : theme.spacing(3),\r\n    },\r\n\r\n})))\r\n\r\n\r\nfunction EnrollmentCreditPage(props) {\r\n    const classes = useStyle();\r\n\r\n    const [SelectCredit, setSelectCredit] = useState(false)\r\n    const [SelectCash, setSelectCash] = useState(false)\r\n\r\n    const [CreditNum, setCreditNum] = useState()\r\n\r\n    const HandlingCredit = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCredit === true || SelectCash === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCredit(true)\r\n        }\r\n    }\r\n    const HandlingCash = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCash === true || SelectCredit === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCash(true)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const CreditCardComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n               <CreditCard />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n    const CreditCashComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n                <CreditCash banks={Banks.banks} />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root} component=\"body\">\r\n            <Grid container>\r\n                <Grid item component=\"h2\" xs={12}>\r\n                    <Paper variant=\"outlined\" className={classes.mainTitle} >결제 수단 등록</Paper>\r\n\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCardComponent} onSubmit={HandlingCredit}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        신용카드\r\n                        </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCashComponent} onSubmit={HandlingCash}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        계좌번호\r\n                                    </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                {CreditCardComponent(SelectCredit)}\r\n                {CreditCashComponent(SelectCash)}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default EnrollmentCreditPage\r\n","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Sidebar\\Sidebar.js",["222","223"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Category\\Category.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\AIChat\\Chat.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Introduce\\Introduce.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["224","225","226","227","228"],"import { Container, CssBaseline, Grid, makeStyles, Typography, Button, Box, Link } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\nimport { registerUser } from '../../../_action/user_actions'\r\nimport HearingIcon from '@material-ui/icons/Hearing';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root : {\r\n    //     // paddingTop : theme.spacing(25)\r\n    // },\r\n    paper: {\r\n        paddingTop : theme.spacing(23),\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems : 'center'\r\n    },\r\n    avatar: {\r\n        marginTop : theme.spacing(1),\r\n        backgroundColor : theme.palette.primary.dark\r\n    },\r\n    form : {\r\n        marginTop : theme.spacing(1),\r\n        width : \"100%\"\r\n    },\r\n    onSubmit : {\r\n        margin : theme.spacing(3, 0, 2)\r\n    }\r\n}))\r\n\r\nexport default function RegisterPage(props) {\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch();\r\n    const [FormErrorMessage, setFormErrorMessage] = useState(\"\")\r\n\r\n\r\n    // 라디오\r\n    const [selectedValue, setSelectedValue] = React.useState(\"10대\");\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n      \r\n    // 체크박스 \r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChange2 = (event) => {\r\n          setChecked(event.target.checked);\r\n    };\r\n\r\n    // 페이지 넘어가는 부분\r\n    const [NextPage, setNextPage] = useState(1);\r\n\r\n    const ButtonHandler = (e) => {\r\n        if(NextPage !== 4){\r\n            e.preventDefault()\r\n            setNextPage(NextPage+1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지가 4일 경우(===메인으로 돌아가기, 쇼핑창)\r\n        }\r\n    }\r\n\r\n    const ButtonHandler2 = (e) => {\r\n        if(NextPage !== 1){\r\n            e.preventDefault()\r\n            setNextPage(NextPage-1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지 1일 경우 뒤로(===메인으로돌아가기, 로그인창) \r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        name : Yup.string().required(\"이름을 입력해주세요.\"),\r\n        birth : Yup.string().min(8, \"생년월일은 8자로 입력해주세요.\").required(\"생년월일이 필요합니다.\"),\r\n        id : Yup.string().required('아이디가 필요합니다.'),\r\n        password : Yup.string().min(4, \"Password는 최소 4자 이상이여야 합니다.\").required('password가 필요합니다.'),\r\n        confirmPassword : Yup.string().oneOf([Yup.ref('password'), null], 'Password는 서로 일치해야합니다.').required('Password 확인란에 Password를 입력해주세요.')   \r\n    })\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues : {\r\n            name : \"\",\r\n            birth : \"\",\r\n            id : \"\",\r\n            password : \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validationSchema : validationSchema,\r\n        onSubmit : ((values, {setSubmitting}) => {\r\n            setTimeout(() => {\r\n                let dataToSubmit = {\r\n                    name : values.name,\r\n                    birth : values.birth,\r\n                    id : values.id,\r\n                    password : values.password,\r\n                }\r\n                \r\n                dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if(response.payload.success) {\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    }\r\n                }).catch((err) => {\r\n                    setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    setTimeout(() => {\r\n                        setFormErrorMessage('')\r\n                    }, 3000);\r\n                })\r\n                setSubmitting(false)\r\n            }, 500)\r\n        })\r\n    })\r\n\r\n    if(NextPage === 1) {\r\n        return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12}> \r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"name\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"이름\"\r\n                                autoFocus\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText= {formik.touched.name && formik.errors.name}\r\n                                alt=\"이름입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"birth\"\r\n                                name=\"birth\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"birth\"\r\n                                label=\"생년월일(8자리)\"\r\n                                type='birth'\r\n                                value={formik.values.birth}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.birth && Boolean(formik.errors.birth)}\r\n                                helperText = {formik.touched.birth && formik.errors.birth}\r\n                                alt=\"생년월일8자리입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        메인으로돌아가기\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 2){\r\n            return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"id\"\r\n                                name=\"id\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"id\"\r\n                                label=\"ID\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"아이디입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"current-password\"\r\n                                name=\"password\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type='password'\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText = {formik.touched.password && formik.errors.password}\r\n                                alt=\"비밀번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField \r\n                                autoComplete=\"confirm-password\"\r\n                                name=\"confirmPassword\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type='password'\r\n                                value={formik.values.confirmPassword}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                                helperText = {formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                                alt=\"비밀번호확인입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 3){\r\n            return(\r\n        <Container component='main' maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={9} sm={10}>\r\n                            <TextField\r\n                                autoComplete=\"address\"\r\n                                name=\"address\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"주소입력창\"\r\n                            /> </Grid>\r\n                            <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>검색</Button>\r\n                        </Grid>\r\n                        <Grid item xs={5} sm={6} >\r\n                            <TextField\r\n                                autoComplete=\"ph\"\r\n                                name=\"ph\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"ph\"\r\n                                label=\"PH\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"전화번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={4} >\r\n                            <TextField\r\n                                autoComplete=\"CertifiNumber\"\r\n                                name=\"CertifiNumber\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"CertifiNumber\"\r\n                                label=\"인증번호\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"인증번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>인증</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n            )} else if (NextPage === 4) {\r\n            return(\r\n                <Container component='main' maxWidth=\"xs\" >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                <br />\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p style={{fontSize: '1.0rem'}} >\r\n                    당신의 취향과 프로필을 선택해주세요.<br />\r\n                    스타일의 경우 중복으로 선택할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>\r\n                        <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 나이 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"10대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>10대</p>}\r\n                    labelPlacement=\"10대\"\r\n                    alt=\"10대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"20대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>20대</p>}\r\n                    labelPlacement=\"20대\"\r\n                    alt=\"20대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"30대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>30대</p>}\r\n                    labelPlacement=\"30대\"\r\n                    alt=\"30대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"40대이상\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>40대이상</p>}\r\n                    labelPlacement=\"40대이상\"\r\n                    alt=\"40대이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 성별 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"남자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>남자</p>}\r\n                    labelPlacement=\"남자\"\r\n                    alt=\"남자\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"여자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>여자</p>}\r\n                    labelPlacement=\"여자\"\r\n                    alt=\"여자\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />                    \r\n                    <div style={{fontSize: '1.0rem'}}>[ 키 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"140\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm 이하</p>}\r\n                    labelPlacement=\"140\"\r\n                    alt=\"150센티미터이하\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"150\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm</p>}\r\n                    labelPlacement=\"150\"\r\n                    alt=\"150센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"160\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>160cm</p>}\r\n                    labelPlacement=\"160\"\r\n                    alt=\"160센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"170\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>170cm</p>}\r\n                    labelPlacement=\"170\"\r\n                    alt=\"170센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"180\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>180cm</p>}\r\n                    labelPlacement=\"180\"\r\n                    alt=\"180센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"190\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>190cm 이상</p>}\r\n                    labelPlacement=\"190\"\r\n                    alt=\"190센티미터이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 스타일 ]</div>\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"심플\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />심플\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"캐주얼\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />캐주얼\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"시크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />시크\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"유니크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />유니크\r\n                    <br />\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"오피스\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />오피스\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"스트릿\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />스트릿\r\n                    <br />\r\n                    </fieldset>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        // onSubmit={ButtonHandler}\r\n                        href=\"/\"\r\n                    >\r\n                        가입완료\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n            </Container>\r\n            )} else {\r\n            return(\r\n                <div> hi </div>\r\n                // 자동 로그인 후 메인 페이지로 이동\r\n            )\r\n        }\r\n}","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Nav.js",["229","230","231","232","233"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\PostPage\\PostDetailPage.js",["234","235","236"],"\r\nimport { Container, CssBaseline, Grid, makeStyles, Typography, ButtonBase, Box, Button, List, ListItem, ListItemText, Divider, FormHelperText, FormControl, ButtonGroup } from '@material-ui/core'\r\n\r\n\r\nimport React, { useState,useEffect } from 'react'\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport PropTypes from 'prop-types'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport axios from 'axios'\r\n//image json파일로 만들어서 코드 map 사용, 빼서 사용하면 일일이 하나씩 import할필요없음\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `full-width-tab-${index}`,\r\n      'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n  };\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop : theme.spacing(8),\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems : 'center'\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        padding: theme.spacing(10),\r\n        paddingTop : theme.spacing(10),\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100vh',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nexport default function PostDetailPage(props) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch();\r\n    const theme = useTheme();\r\n\r\n    const [image,setImage] =useState([])\r\n    const [post, setPost] = useState({}) //sh 214\r\n    const postId = props.match.params.postId\r\n     useEffect(() => {\r\n \r\n         axios.get(`/api/post/id?id=${postId}`)\r\n         .then(response => {\r\n             console.log(response.data.post[0])\r\n              setPost(response.data.post[0])\r\n              setImage(response.data.post[0].image) //sh 214  // 281~284\r\n         })\r\n     }, [])\r\n   \r\n \r\n     \r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n      };\r\n\r\n    const history = useHistory();\r\n    \r\n    //sh-254 장바구니 누르면 해당 데이터를 Cart에 넣고 해당 유저의 장바구니 페이지로 이동\r\n    const clickCartHandler = () => {\r\n      \r\n      let user = props.user\r\n            let body = {\r\n                post: postId,\r\n                size: size,\r\n                quantity: quantity\r\n            }\r\n            console.log(body)\r\n            axios.post('/api/cart/create',body)\r\n            .then(response => {\r\n                if(response.data.status) {\r\n                  history.push({\r\n                    pathname: '/shoppingbascket',\r\n                    state:{user:user}\r\n                  })\r\n                }\r\n            })\r\n    }\r\n    \r\n    //sh\r\n//이거 일단 보류.. 구매하는 코드임. 근데 사실 여기서는 의미없는데, 나중에 구매할때 사용할 것.\r\n  // const  clickPurchaseHandler = () => {\r\n    \r\n  //   if(props.user.userData.isAuth) {\r\n  //           let body = {\r\n  //               post: postId,\r\n  //               size: size,\r\n  //               quantity: quantity,\r\n  //               price: post.pprice\r\n  //           }\r\n  //          // console.log(body)\r\n  //           axios.post('/api/purchase/create',body)\r\n  //           .then(response => {\r\n  //               if(response.data.success) {\r\n  //                 //결제 페이지로 이동.\r\n  //               }\r\n  //           })\r\n  //       }else {\r\n  //           alert('로그인이 필요합니다.')\r\n  //           history.push('/login')   \r\n  //           }\r\n  // }\r\n    \r\n\r\n\r\n\r\n    //sh (Quantity , Size  175-201 해당 기능 232-238 // 244-246)   ( 상품 추가 이미지 280 ) (대표이미지 수정)\r\n    const[quantity,setQuantity] = useState(1)\r\n \r\n    const handleMinusQuantityChange = (event) => {\r\n      if(quantity >1) {\r\n        setQuantity(quantity - 1)\r\n      }\r\n    }\r\n\r\n    const handlePlusQuantityChange =(event) => {\r\n      setQuantity(quantity+1)\r\n    }\r\n\r\n    const [size, setSize] = React.useState('M');\r\n    const handleSizeChange = (event) => {\r\n        setSize(event.target.value);\r\n    };\r\n\r\n    const [value, setValue] = React.useState(1);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n\r\n      \r\n    <Container component='main' maxWidth=\"lg\" className={classes.container}>\r\n        <CssBaseline />\r\n        <Typography component=\"div\" style={{height: '100vh' }}>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <ButtonBase className={classes.image}>\r\n                <img className={classes.img} alt=\"complex\" src= {image[0]} />\r\n              </ButtonBase>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <Typography component=\"h1\" variant =\"h4\" > \r\n                 {post.title}\r\n                </Typography>\r\n                별점 4.5점 / 총 13개의 상품 리뷰가 있습니다.\r\n                <Divider />\r\n                <List component=\"nav\" >\r\n                <ListItem><ListItemText primary=\r\n                {post.pprice}원 />\r\n                </ListItem>\r\n                </List>\r\n\r\n                <FormControl required className={classes.formControl}>\r\n                <Typography variant =\"h6\" > \r\n                사이즈\r\n                </Typography>\r\n                <ToggleButtonGroup value={size} exclusive onChange={handleSizeChange}>\r\n                <ToggleButton variant=\"outlined\"  value = \"S\" style={{fontSize:'1rem'}} aria-label=\"S사이즈\">S</ToggleButton>\r\n                <ToggleButton variant=\"outlined\"  value = \"M\" style={{fontSize:'1rem'}} aria-label=\"S사이즈\">M</ToggleButton>\r\n                <ToggleButton variant=\"outlined\"  value = \"L\" style={{fontSize:'1rem'}} aria-label=\"L사이즈\">L</ToggleButton>\r\n                <ToggleButton variant=\"outlined\"  value = \"XL\" style={{fontSize:'1rem'}} aria-label=\"XL사이즈\">XL</ToggleButton>\r\n                <ToggleButton variant=\"outlined\"  value = \"XXL\" style={{fontSize:'1rem'}} aria-label=\"XXL사이즈\">XXL</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <br />\r\n                <Typography variant =\"h6\" > \r\n                수량\r\n                </Typography>\r\n                <ButtonGroup>\r\n                <Button variant=\"outlined\" style={{fontSize:'1rem'}} onClick= {handlePlusQuantityChange} aria-label=\"더하기\">+</Button>\r\n                <Button variant=\"outlined\" style={{fontSize:'1rem'}}  aria-label=\"1개\">{quantity}</Button>\r\n                <Button variant=\"outlined\" style={{fontSize:'1rem'}} onClick= {handleMinusQuantityChange} aria-label=\"빼기\">-</Button>\r\n                </ButtonGroup>\r\n                <br />\r\n            </FormControl>\r\n            <ButtonGroup variant=\"text\" fullWidth=\"true\">\r\n                <Button variant=\"outlined\" style={{fontSize:'1.2rem'}} aria-label=\"장바구니\" onClick={clickCartHandler}>장바구니</Button>\r\n                <Button variant=\"outlined\" style={{fontSize:'1.2rem'}}  aria-label=\"바로구매\">바로구매</Button>\r\n                </ButtonGroup>\r\n            </Grid>\r\n        </Grid> <br />\r\n        <Divider />\r\n        <br />\r\n        <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                centered\r\n                variant=\"fullWidth\"\r\n          >\r\n          <Tab style={{fontSize:'0.9rem'}} label=\"상세보기\" {...a11yProps(0)} />\r\n          <Tab style={{fontSize:'0.9rem'}} label=\"음성리뷰\" {...a11yProps(1)} />\r\n          <Tab style={{fontSize:'0.9rem'}} label=\"일반리뷰\" {...a11yProps(2)} />\r\n          </Tabs>\r\n          </AppBar>\r\n        <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n        <Box component=\"span\" m={1}><Button /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[1]} /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[2]} /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[3]} /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[4]} /></Box>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          음성리뷰창\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n        <Typography variant=\"h6\" style={{padding:'10px'}}>\r\n        리뷰는 추천순으로 노출됩니다. 총 1개의 리뷰가 있습니다. <br />\r\n        </Typography>\r\n          <Card  variant=\"outlined\">\r\n        <CardContent>\r\n        <Typography gutterBottom variant=\"h6\">\r\n          별점 5점 <br/> \r\n        </Typography>\r\n        <Typography >\r\n          키 170 / 몸무게 65 <br />\r\n          옵션 : 라지 사이즈 [ 사이즈가 적당해요. ]<br />\r\n          소재가 얇아서 더운 여름에도 가볍게 입고 다닐 것 같아요.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button aria-label=\"리뷰추천하기\" variant=\"outlined\" style={{fontSize:'1.1rem'}}>추천</Button>\r\n        <Button aria-label=\"리뷰비추천하기\" variant=\"outlined\" style={{fontSize:'1.1rem'}}>비추천</Button>\r\n        </CardActions>\r\n        </Card>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n          </div>\r\n        </Typography>\r\n    </Container>\r\n\r\n\r\n    )\r\n}","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js",["237"],"import React, { useState,useEffect } from 'react'\r\nimport { useLocation } from \"react-router\";\r\nimport { Grid, makeStyles, Typography} from '@material-ui/core'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PostCard from './PostCard';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: theme.spacing(2),\r\n        justifyContent: 'center',\r\n        justifyItems: 'center',\r\n        align: 'center',\r\n        justify: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n}))\r\n\r\nexport default function PostSearchListPage(props) {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n  console.log(location.state.category) //0여기 0이 들어온다.\r\n\r\n     const [posts,setPosts] = useState([])\r\n\r\nconst category = location.state.category\r\n     //sh url만 변경 server post.js에서 상품 카테고리에 맞는거 조회에 해당.\r\n    useEffect(() => {\r\n\r\n        axios.post(`/api/post/posts_by_category`,category)\r\n        .then(response => {\r\n         console.log(\"실행\")\r\n            if(response.data.success){\r\n              console.log(response)\r\n              setPosts(response.data.post)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const [page, setPage] = React.useState(1);\r\n    \r\n    const handleChange = (event, value) => {\r\n      setPage(value);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid item container direction=\"column\" style={{margin : \"auto\"}} spacing={1}>\r\n            <Grid container spacing={2} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}} >\r\n                {posts.map((post) => (\r\n                <Grid\r\n                    item\r\n                    key={post.id}\r\n                    lg={3}\r\n                >\r\n                <PostCard post={post} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}} />\r\n                </Grid>\r\n                ))}\r\n            </Grid>\r\n          <Grid container spacing={2} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}}>\r\n          <Typography>Page: {page}</Typography>\r\n          <Pagination \r\n          shape=\"rounded\"\r\n          count={10}\r\n          size=\"large\"\r\n          page={page} \r\n          onChange={handleChange}\r\n          /> \r\n          </Grid>\r\n      </Grid>\r\n      </div>\r\n    )}","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_reducer\\user_reducer.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_reducer\\adminPost_reducer.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx",["238"],"import React, { useState,useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ShoppingCard from './ShoppingCard';\r\nimport PayPage from '../Paymovement/PayPage';\r\nimport { useLocation } from 'react-router';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(12, 2),\r\n    },\r\n    window: {\r\n        width: '100%',\r\n        padding: '5px',\r\n    },\r\n    windowDummy: {\r\n        height: '5px'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        padding: '2px',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function ShoppingBascket(props) {\r\n    \r\n    const getShoppingList = (ShoppingListObj) => {\r\n        return (\r\n            <List>\r\n                <ShoppingCard {...ShoppingListObj}  deleteShoppingItem={e => deleteShoppingItem(e)}/>\r\n            </List>\r\n        );\r\n    }\r\n\r\n    //sh 44~60 => 38\r\n    const[ShoppingList,setShoppingList] = useState([])\r\n\r\n    useEffect(() => {\r\n \r\n        axios.post(`/api/cart/cartList`)\r\n        .then(response => {\r\n\r\n            if(response.data.success) {\r\n                console.log(response)\r\n                setShoppingList(response.data.shoppingList)\r\n            }\r\n        })\r\n    }, [])\r\n  \r\n    function deleteShoppingItem(cartId){ \r\n        setShoppingList(ShoppingList.filter(item => item._id !== cartId))\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const [Paynow, setPaynow] = useState(false)\r\n\r\n    const Payhandle = (e) => {\r\n        e.preventDefault()\r\n\r\n        setPaynow(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid item container >\r\n                <Grid item xs={1} sm={2} />\r\n                <Grid item xs={10} sm={8} justify=\"center\" >\r\n                    <br />\r\n                    <Card className={classes.root}>\r\n                        <ShoppingCartIcon fontSize=\"Large\" />\r\n                        <hr />\r\n                        <div className={classes.flex}>\r\n                            <div className={classes.window}>\r\n                                {ShoppingList.map(ShoppingListObj => getShoppingList(ShoppingListObj))}\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className={classes.flex} style={{ fontSize: '0.9rem' }}>\r\n                            상품가격 45000원 + 배송비 0원 = 총 주문금액 45000원\r\n                        </div>\r\n                        <hr />\r\n                        <div className={classes.flex}>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                장바구니비우기\r\n                            </Button>\r\n                            <Grid item xs={1} />\r\n                            <Button onClick={Payhandle} variant=\"contained\" color=\"primary\">\r\n                                구매하기\r\n                             </Button>\r\n                        </div>\r\n                        {\r\n                            Paynow && <PayPage />\r\n                        }\r\n                    </Card>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={1} sm={2} />\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\AIChat\\Dashboard.js",["239"],"import dog from './1.jpg';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nimport {CTX} from './Store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: '50px',\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    flex : {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justify: 'center',\r\n      padding: '2px'\r\n    },\r\n    chatWindow: {\r\n      width: '100%',\r\n      height: '300px',\r\n      padding: '20px',\r\n    },\r\n    chatBox: {\r\n      width: '85%'\r\n    },\r\n    button: {\r\n      width: '15%'\r\n    },\r\n  }));\r\n\r\nexport default function Dashboard(){\r\n    const classes = useStyles();\r\n\r\n  // CTX store\r\n  const [allChats] = React.useContext(CTX);\r\n  const topics = Object.keys(allChats);\r\n\r\n  // local state\r\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n  const [ textValue, changeTextValue ] = React.useState('');\r\n    \r\n    return (\r\n      <div>\r\n        <Grid container justify=\"center\">\r\n        <Paper className={classes.root}>\r\n        <Grid item xs={12}>\r\n        <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n          인공지능채팅APP\r\n        </Typography>\r\n        <div className={classes.flex}>\r\n            <div className={classes.chatWindow}>\r\n                {\r\n                  allChats[activeTopic].map((chat, i)=>(\r\n                    <div className={classes.flex} key={i}>\r\n                      <Chip avatar={<Avatar alt=\"비전\" src={dog} />} variant=\"outlined\" size=\"small\" label=\"비전\"/> \r\n                       <Typography style={{fontSize:'15px'}}>{chat.msg}</Typography>\r\n                      </div>\r\n                  ))\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={classes.flex}>\r\n        <TextField \r\n        id=\"standard-basic\" \r\n        label=\"채팅 입력창\" \r\n        className={classes.chatBox}\r\n        value={textValue}\r\n        onChange={e => changeTextValue(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n        전송\r\n        </Button>\r\n        </div>\r\n        </Grid>\r\n      </Paper>\r\n      </Grid>\r\n      </div>\r\n    );\r\n}","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\AIChat\\Store.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_action\\user_actions.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\PostPage\\PostCard.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\_action\\types.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Category\\Content.jsx",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\Config.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js",["240","241","242"],"import { Grid, Paper, makeStyles, TextField, ButtonBase, Button, CircularProgress } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        textAlign: \"center\"\r\n    },\r\n    img: {\r\n        width: \"200px\",\r\n        height: \"60px\",\r\n        padding : theme.spacing(1)\r\n    },\r\n    imgDiv : {\r\n        padding : theme.spacing(1)\r\n    },\r\n    accountImg: {\r\n        width: \"20%\",\r\n        padding: theme.spacing(3),\r\n        justifyContent: \"center\",\r\n        verticalAlign : \"middle\"\r\n    },\r\n    divBox : {\r\n        [theme.breakpoints.up('md')] : {\r\n            width : \"70%\"\r\n        },\r\n        width : \"100%\",\r\n        padding : theme.spacing(2),\r\n        justifyContent: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    boxColor : {\r\n        backgroundColor : \"#eeeeee\"\r\n    }\r\n\r\n}))\r\n\r\nfunction CreditCash(props) {\r\n\r\n    const classes = useStyle()\r\n\r\n    const [Banks, setBanks] = useState(props.banks)\r\n\r\n    const [loading, setloading] = useState(true)\r\n\r\n    const [InputAccount, setInputAccount] = useState(false)\r\n\r\n    const [BankSelected, setBankSelected] = useState()\r\n    const [BankNameSelected, setBankNameSelected] = useState()\r\n\r\n    const [BankNumber, setBankNumber] = useState()\r\n\r\n    const BankHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setBankSelected(e.target.src)\r\n        setBankNameSelected(e.target.alt)\r\n        setInputAccount(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setloading(false)\r\n        }, 1500)\r\n    }, [])\r\n\r\n    const BankComponent = Banks.map((bank, index) => {\r\n\r\n        return (\r\n            <ButtonBase className={classes.imgDiv} style={{width : \"100%\"}} type=\"submit\" onClick={BankHandler}>\r\n                <Paper style={{width : \"100%\"}} variant=\"outlined\">\r\n                    <img className={classes.img} src={bank.logo} alt={bank.name} defaultValue={bank.name} />\r\n                </Paper>\r\n            </ButtonBase>\r\n        )\r\n    })\r\n\r\n\r\n    if(loading) {\r\n        return (<Grid container className={classes.root} style={{paddingTop : \"4rem\"}}>\r\n        <CircularProgress />\r\n        </Grid>)\r\n    }\r\n    else if (InputAccount) {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <p><h2 style={{ display: \"inline\" }}>계좌번호 입력</h2> (최초 1회만)</p>\r\n\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div className={classes.divBox} >\r\n                            <form>\r\n                                <Paper variant=\"outlined\">\r\n                                    <div >\r\n                                        <img className={classes.accountImg} src={BankSelected} alt={BankNameSelected} />\r\n                                        <NumberFormat customInput={TextField} name=\"AccountNumber\" style={{ fontSize: \"1.5rem\", width: \"60%\", textAlign: \"center\", verticalAlign : \"middle\" }} format=\"####-####-####-####\" mask=\"_\" />\r\n                                        </div>\r\n                                </Paper>\r\n                            </form>\r\n                        </div>\r\n                        <div  className={classes.divBox}>\r\n                        <Paper className={classes.boxColor} variant=\"outlined\">\r\n                                    <div >\r\n                                        <p><h4 >이름 </h4>\r\n                                            <h2 >고영빈</h2>\r\n                                        </p>\r\n                                    </div>\r\n                            </Paper>\r\n                        </div>\r\n                        {/* 버튼부분 수정 요망 */}\r\n                        <Button href=\"/loading\" type=\"submit\" variant=\"outlined\" style={{fontSize : \"2rem\"}}>\r\n                            등록\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <h2>은행 선택</h2>\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div style={{ width: \"450px\", justifyContent: \"center\", margin: \"auto\" }}>\r\n                            {BankComponent}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreditCash\r\n","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\Navbar\\Sidebar\\RightMenu.js",["243"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js",["244","245","246","247"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js",["248","249","250","251"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Cancel.js",["252"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js",["253","254"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js",["255","256","257","258","259"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js",["260","261","262","263","264"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewableCard.js",["265"],"import {  Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 200,\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        minWidth: 160,\r\n        left: 10,\r\n        bottom: -20\r\n    },\r\n  });\r\n\r\nexport default function CancelCard(){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    // 모달창\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Card className={classes.root} elevation={3}>\r\n        <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                2021.04.27 배송\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                    \r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                \r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button} onClick={() => history.push('/myPage/review&productId=1')}>리뷰 쓰기</Button> \r\n                </CardActions>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}\r\n                    onClick={handleClickOpen}>\r\n                        숨기기</Button>\r\n                </CardActions>\r\n                    \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js",["266","267","268","269","270","271","272","273","274","275","276"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyCategory.js",[],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyContent.jsx",["277"],"C:\\Users\\yumi.choi\\Desktop\\VisionMarket\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Privacy.js",[],{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":15},{"ruleId":"282","severity":1,"message":"286","line":1,"column":27,"nodeType":"284","messageId":"285","endLine":1,"endColumn":36},{"ruleId":"282","severity":1,"message":"287","line":2,"column":39,"nodeType":"284","messageId":"285","endLine":2,"endColumn":43},{"ruleId":"282","severity":1,"message":"288","line":2,"column":67,"nodeType":"284","messageId":"285","endLine":2,"endColumn":83},{"ruleId":"282","severity":1,"message":"289","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":15},{"ruleId":"282","severity":1,"message":"290","line":11,"column":7,"nodeType":"284","messageId":"285","endLine":11,"endColumn":15},{"ruleId":"282","severity":1,"message":"291","line":19,"column":7,"nodeType":"284","messageId":"285","endLine":19,"endColumn":12},{"ruleId":"282","severity":1,"message":"292","line":22,"column":11,"nodeType":"284","messageId":"285","endLine":22,"endColumn":19},{"ruleId":"282","severity":1,"message":"293","line":2,"column":47,"nodeType":"284","messageId":"285","endLine":2,"endColumn":57},{"ruleId":"282","severity":1,"message":"294","line":36,"column":12,"nodeType":"284","messageId":"285","endLine":36,"endColumn":21},{"ruleId":"282","severity":1,"message":"295","line":36,"column":23,"nodeType":"284","messageId":"285","endLine":36,"endColumn":35},{"ruleId":"282","severity":1,"message":"286","line":1,"column":17,"nodeType":"284","messageId":"285","endLine":1,"endColumn":26},{"ruleId":"282","severity":1,"message":"296","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":14},{"ruleId":"282","severity":1,"message":"297","line":14,"column":8,"nodeType":"284","messageId":"285","endLine":14,"endColumn":17},{"ruleId":"282","severity":1,"message":"298","line":48,"column":12,"nodeType":"284","messageId":"285","endLine":48,"endColumn":25},{"ruleId":"282","severity":1,"message":"299","line":50,"column":11,"nodeType":"284","messageId":"285","endLine":50,"endColumn":23},{"ruleId":"282","severity":1,"message":"300","line":55,"column":12,"nodeType":"284","messageId":"285","endLine":55,"endColumn":19},{"ruleId":"282","severity":1,"message":"301","line":57,"column":11,"nodeType":"284","messageId":"285","endLine":57,"endColumn":24},{"ruleId":"282","severity":1,"message":"302","line":1,"column":15,"nodeType":"284","messageId":"285","endLine":1,"endColumn":23},{"ruleId":"282","severity":1,"message":"303","line":5,"column":44,"nodeType":"284","messageId":"285","endLine":5,"endColumn":52},{"ruleId":"282","severity":1,"message":"304","line":5,"column":54,"nodeType":"284","messageId":"285","endLine":5,"endColumn":65},{"ruleId":"282","severity":1,"message":"305","line":5,"column":92,"nodeType":"284","messageId":"285","endLine":5,"endColumn":103},{"ruleId":"282","severity":1,"message":"306","line":108,"column":14,"nodeType":"284","messageId":"285","endLine":108,"endColumn":22},{"ruleId":"282","severity":1,"message":"307","line":2,"column":128,"nodeType":"284","messageId":"285","endLine":2,"endColumn":142},{"ruleId":"282","severity":1,"message":"292","line":98,"column":11,"nodeType":"284","messageId":"285","endLine":98,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":112,"column":9,"nodeType":"310","endLine":112,"endColumn":11,"suggestions":"311"},{"ruleId":"308","severity":1,"message":"312","line":39,"column":8,"nodeType":"310","endLine":39,"endColumn":10,"suggestions":"313"},{"ruleId":"282","severity":1,"message":"314","line":10,"column":10,"nodeType":"284","messageId":"285","endLine":10,"endColumn":21},{"ruleId":"282","severity":1,"message":"315","line":47,"column":23,"nodeType":"284","messageId":"285","endLine":47,"endColumn":40},{"ruleId":"282","severity":1,"message":"316","line":45,"column":19,"nodeType":"284","messageId":"285","endLine":45,"endColumn":27},{"ruleId":"282","severity":1,"message":"317","line":54,"column":12,"nodeType":"284","messageId":"285","endLine":54,"endColumn":22},{"ruleId":"282","severity":1,"message":"318","line":54,"column":24,"nodeType":"284","messageId":"285","endLine":54,"endColumn":37},{"ruleId":"282","severity":1,"message":"319","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":13},{"ruleId":"282","severity":1,"message":"320","line":1,"column":22,"nodeType":"284","messageId":"285","endLine":1,"endColumn":25},{"ruleId":"282","severity":1,"message":"321","line":1,"column":27,"nodeType":"284","messageId":"285","endLine":1,"endColumn":31},{"ruleId":"282","severity":1,"message":"322","line":42,"column":12,"nodeType":"284","messageId":"285","endLine":42,"endColumn":17},{"ruleId":"282","severity":1,"message":"299","line":44,"column":11,"nodeType":"284","messageId":"285","endLine":44,"endColumn":23},{"ruleId":"282","severity":1,"message":"323","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":22},{"ruleId":"282","severity":1,"message":"324","line":44,"column":11,"nodeType":"284","messageId":"285","endLine":44,"endColumn":22},{"ruleId":"282","severity":1,"message":"322","line":46,"column":12,"nodeType":"284","messageId":"285","endLine":46,"endColumn":17},{"ruleId":"282","severity":1,"message":"299","line":48,"column":11,"nodeType":"284","messageId":"285","endLine":48,"endColumn":23},{"ruleId":"325","severity":1,"message":"326","line":75,"column":22,"nodeType":"327","messageId":"328","endLine":75,"endColumn":24},{"ruleId":"282","severity":1,"message":"329","line":1,"column":51,"nodeType":"284","messageId":"285","endLine":1,"endColumn":55},{"ruleId":"282","severity":1,"message":"324","line":64,"column":11,"nodeType":"284","messageId":"285","endLine":64,"endColumn":22},{"ruleId":"282","severity":1,"message":"330","line":1,"column":68,"nodeType":"284","messageId":"285","endLine":1,"endColumn":73},{"ruleId":"282","severity":1,"message":"331","line":31,"column":12,"nodeType":"284","messageId":"285","endLine":31,"endColumn":16},{"ruleId":"282","severity":1,"message":"332","line":33,"column":11,"nodeType":"284","messageId":"285","endLine":33,"endColumn":26},{"ruleId":"282","severity":1,"message":"333","line":37,"column":11,"nodeType":"284","messageId":"285","endLine":37,"endColumn":22},{"ruleId":"334","severity":1,"message":"335","line":74,"column":25,"nodeType":"336","endLine":74,"endColumn":177},{"ruleId":"282","severity":1,"message":"337","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":28},{"ruleId":"282","severity":1,"message":"331","line":13,"column":12,"nodeType":"284","messageId":"285","endLine":13,"endColumn":16},{"ruleId":"282","severity":1,"message":"332","line":15,"column":11,"nodeType":"284","messageId":"285","endLine":15,"endColumn":26},{"ruleId":"282","severity":1,"message":"333","line":19,"column":11,"nodeType":"284","messageId":"285","endLine":19,"endColumn":22},{"ruleId":"334","severity":1,"message":"335","line":31,"column":25,"nodeType":"336","endLine":31,"endColumn":177},{"ruleId":"334","severity":1,"message":"335","line":71,"column":25,"nodeType":"336","endLine":71,"endColumn":177},{"ruleId":"282","severity":1,"message":"338","line":1,"column":82,"nodeType":"284","messageId":"285","endLine":1,"endColumn":92},{"ruleId":"282","severity":1,"message":"339","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":24},{"ruleId":"282","severity":1,"message":"319","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":13},{"ruleId":"282","severity":1,"message":"286","line":4,"column":26,"nodeType":"284","messageId":"285","endLine":4,"endColumn":35},{"ruleId":"282","severity":1,"message":"340","line":29,"column":11,"nodeType":"284","messageId":"285","endLine":29,"endColumn":17},{"ruleId":"282","severity":1,"message":"292","line":32,"column":11,"nodeType":"284","messageId":"285","endLine":32,"endColumn":19},{"ruleId":"282","severity":1,"message":"341","line":33,"column":11,"nodeType":"284","messageId":"285","endLine":33,"endColumn":18},{"ruleId":"282","severity":1,"message":"331","line":35,"column":12,"nodeType":"284","messageId":"285","endLine":35,"endColumn":16},{"ruleId":"282","severity":1,"message":"332","line":38,"column":11,"nodeType":"284","messageId":"285","endLine":38,"endColumn":26},{"ruleId":"282","severity":1,"message":"333","line":42,"column":11,"nodeType":"284","messageId":"285","endLine":42,"endColumn":22},{"ruleId":"334","severity":1,"message":"335","line":62,"column":25,"nodeType":"336","endLine":62,"endColumn":177},{"ruleId":"282","severity":1,"message":"286","line":1,"column":24,"nodeType":"284","messageId":"285","endLine":1,"endColumn":33},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Card' is defined but never used.","'CircularProgress' is defined but never used.","'Check' is defined but never used.","'newsPost' is assigned a value but never used.","'theme' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Typography' is defined but never used.","'CreditNum' is assigned a value but never used.","'setCreditNum' is assigned a value but never used.","'Button' is defined but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleChange2' is assigned a value but never used.","'useState' is defined but never used.","'Exposure' is defined but never used.","'Brightness6' is defined but never used.","'ZoomInSharp' is defined but never used.","'zomReset' is defined but never used.","'FormHelperText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["344"],"React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["345"],"'useLocation' is defined but never used.","'changeActiveTopic' is assigned a value but never used.","'setBanks' is assigned a value but never used.","'BankNumber' is assigned a value but never used.","'setBankNumber' is assigned a value but never used.","'axios' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'value' is assigned a value but never used.","'ReviewableCard' is defined but never used.","'cancelCount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","'Input' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CancelScheduleSend' is defined but never used.","'IconButton' is defined but never used.","'DeleteOutlined' is defined but never used.","'postId' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [postId]",{"range":"350","text":"351"},"Update the dependencies array to be: [category]",{"range":"352","text":"353"},[3146,3148],"[postId]",[1169,1171],"[category]"]
