[{"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/index.js":"1","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/serviceWorker.js":"2","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/App.js":"3","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_reducer/index.js":"4","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/hoc/auth.js":"5","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/MainPage.js":"6","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/LoadingAndSuccess.js":"7","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LoginPage/LoginPage.js":"8","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/PayPage.js":"9","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/EnrollmentCreditPage.js":"10","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/AIChat/Chat.js":"11","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Category/Category.js":"12","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Introduce/Introduce.js":"13","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/RegisterPage/RegisterPage.js":"14","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostSearchListPage.js":"15","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostDetailPage.js":"16","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Navbar/Nav.js":"17","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyCategory.js":"18","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/Order.js":"19","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/DeliveryCard.js":"20","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/Privacy.js":"21","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/PointPage.js":"22","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewWrite.js":"23","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewPage.js":"24","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_reducer/user_reducer.js":"25","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_reducer/adminPost_reducer.js":"26","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/ShoppingBaskcet/ShoppingBascket.jsx":"27","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_action/user_actions.js":"28","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/AIChat/Store.js":"29","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/AIChat/Dashboard.js":"30","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/LandContents/SubContent.js":"31","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewableCard.js":"32","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/CopyrightFooter/CopyrightFooter.js":"33","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/CreditCard/CreditCard.js":"34","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/CreditCash/CreditCash.js":"35","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewedCard.js":"36","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/BuyCard.js":"37","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_action/types.js":"38","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Category/Content.jsx":"39","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyContent.jsx":"40","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/ShoppingBaskcet/ShoppingCard.jsx":"41","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/Config.js":"42","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/LandContents/Content.js":"43","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/LandContents/ShoppingCard.jsx":"44","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostCard.js":"45","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/OCRpage/OCRpage.js":"46","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostingPage.js":"47","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/OCRkey.js":"48"},{"size":1545,"mtime":1621143254884,"results":"49","hashOfConfig":"50"},{"size":4951,"mtime":1616035113750,"results":"51","hashOfConfig":"50"},{"size":4112,"mtime":1621942305754,"results":"52","hashOfConfig":"50"},{"size":215,"mtime":1621304719323,"results":"53","hashOfConfig":"50"},{"size":1542,"mtime":1616035113751,"results":"54","hashOfConfig":"50"},{"size":4934,"mtime":1621304719327,"results":"55","hashOfConfig":"50"},{"size":1182,"mtime":1621143254845,"results":"56","hashOfConfig":"50"},{"size":7854,"mtime":1621942305756,"results":"57","hashOfConfig":"50"},{"size":3227,"mtime":1621143254845,"results":"58","hashOfConfig":"50"},{"size":3972,"mtime":1621143254845,"results":"59","hashOfConfig":"50"},{"size":211,"mtime":1621143277183,"results":"60","hashOfConfig":"50"},{"size":380,"mtime":1621143277184,"results":"61","hashOfConfig":"50"},{"size":2216,"mtime":1621143277184,"results":"62","hashOfConfig":"50"},{"size":29971,"mtime":1621143259947,"results":"63","hashOfConfig":"50"},{"size":2130,"mtime":1621942305758,"results":"64","hashOfConfig":"50"},{"size":10665,"mtime":1621941463110,"results":"65","hashOfConfig":"50"},{"size":7091,"mtime":1621942305757,"results":"66","hashOfConfig":"50"},{"size":390,"mtime":1621675336970,"results":"67","hashOfConfig":"50"},{"size":1546,"mtime":1621941463109,"results":"68","hashOfConfig":"50"},{"size":1170,"mtime":1621675336000,"results":"69","hashOfConfig":"50"},{"size":1170,"mtime":1621675336972,"results":"70","hashOfConfig":"50"},{"size":4954,"mtime":1621675336000,"results":"71","hashOfConfig":"50"},{"size":4922,"mtime":1621941463110,"results":"72","hashOfConfig":"50"},{"size":1445,"mtime":1621941463109,"results":"73","hashOfConfig":"50"},{"size":600,"mtime":1621304719326,"results":"74","hashOfConfig":"50"},{"size":438,"mtime":1616035113754,"results":"75","hashOfConfig":"50"},{"size":3404,"mtime":1621675336000,"results":"76","hashOfConfig":"50"},{"size":1052,"mtime":1621304719322,"results":"77","hashOfConfig":"50"},{"size":841,"mtime":1621942305756,"results":"78","hashOfConfig":"50"},{"size":2415,"mtime":1621942305755,"results":"79","hashOfConfig":"50"},{"size":666,"mtime":1621143259945,"results":"80","hashOfConfig":"50"},{"size":3989,"mtime":1621143254842,"results":"81","hashOfConfig":"50"},{"size":459,"mtime":1616035113753,"results":"82","hashOfConfig":"50"},{"size":3495,"mtime":1621143254844,"results":"83","hashOfConfig":"50"},{"size":4688,"mtime":1621143254845,"results":"84","hashOfConfig":"50"},{"size":2245,"mtime":1621941463110,"results":"85","hashOfConfig":"50"},{"size":3146,"mtime":1621941463109,"results":"86","hashOfConfig":"50"},{"size":264,"mtime":1621304719322,"results":"87","hashOfConfig":"50"},{"size":17763,"mtime":1621675336000,"results":"88","hashOfConfig":"50"},{"size":4793,"mtime":1621675336971,"results":"89","hashOfConfig":"50"},{"size":3229,"mtime":1621434377000,"results":"90","hashOfConfig":"50"},{"size":93,"mtime":1621942305755,"results":"91","hashOfConfig":"50"},{"size":753,"mtime":1621143277185,"results":"92","hashOfConfig":"50"},{"size":1175,"mtime":1621675336000,"results":"93","hashOfConfig":"50"},{"size":2042,"mtime":1621675336000,"results":"94","hashOfConfig":"50"},{"size":2078,"mtime":1621942305758,"results":"95","hashOfConfig":"50"},{"size":5585,"mtime":1622207594754,"results":"96","hashOfConfig":"50"},{"size":167380,"mtime":1621942305755,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"yiqgof",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/index.js",[],["215","216"],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/serviceWorker.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/App.js",["217"],"import { react, Suspense } from 'react'\nimport { CssBaseline } from '@material-ui/core';\n\n// react에서 가장 중요한 개념인 dom에 router 개념을 더해 선택할 수 있게 만들어준다.\nimport { Switch, Route } from \"react-router-dom\"\nimport './App.css';\nimport Auth from '../hoc/auth';\n\n// 페이지에 대한 import 값\n//import LandingPage from './views/LandingPage/LandingPage'\nimport MainPage from './views/LandingPage/MainPage';\nimport LoginPage from './views/LoginPage/LoginPage';\nimport RegisterPage from './views/RegisterPage/RegisterPage';\nimport EnrollmentCreditPage from './views/Paymovement/EnrollmentCreditPage';\nimport PayPage from './views/Paymovement/PayPage';\nimport LoadingAndSuccess from './views/Paymovement/LoadingAndSuccess';\n\nimport PostDetailPage from './views/PostPage/PostDetailPage';\nimport PostSearchListPage from './views/PostPage/PostSearchListPage';\nimport ShoppingBascket from './views/ShoppingBaskcet/ShoppingBascket';\nimport Nav from './views/Navbar/Nav';\nimport Chat from './views/AIChat/Chat';\nimport Category from './views/Category/Category';\nimport Introduce from './views/Introduce/Introduce';\nimport MyCategory from './views/MyPage/MyCategory';\nimport DeliveryCard from './views/MyPage/MyPageComponent/DeliveryCard';\nimport Privacy from './views/MyPage/MyPageComponent/Privacy';\nimport Order from './views/MyPage/MyPageComponent/Order';\nimport ReviewWrite from './views/MyPage/MyPageComponent/ReviewWrite';\nimport PointPage from './views/MyPage/MyPageComponent/PointPage';\nimport ReviewPage from './views/MyPage/MyPageComponent/ReviewPage';\nimport OCRpage from './views/PostPage/OCRpage/OCRpage';\nimport PostingPage from './views/PostPage/PostingPage';\n\nfunction App() {\n  return (\n    <CssBaseline>\n    {/* // Suspense는 Suspense안에 있는 태그 값에 접근하기 전에 선행 후에 접근하게 된다.\n    // fallback 이라는 속성을 통해서 아직 데이터가 불러와지지 않았을 경우에 보여지는 화면을 만들어준다. */}\n    <Suspense fallback={(<div>...Loding Now</div>)}>\n      <Nav/>\n      <Switch>\n        {/* Switch & case 문과 비슷하게 해석하면 쉽게 접근 가능\n            Route는 내가 원하는 URL 경로를 만들어줌\n            속성 값의 path는 해당하는 URL 경로를 의미함, /는 빈 경로, 계속해서 경로를 이어서 만들어 줄 수 있음\n            쉽게 말하면 이 곳에서 URL 경로를 관리함 ( Front로 보여주는 경로만 )\n        */}\n\n        {/* sh- 본래 취지에 맞게 속성 재설정 */}\n        <Route exact path=\"/\" component={Auth(MainPage, null)} />\n        <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n        <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        <Route exact path=\"/card\" component={EnrollmentCreditPage} />\n        <Route exact path=\"/dopay\" component={PayPage} />\n        <Route exact path=\"/myCategory\" component={Auth(MyCategory, true)} />\n        <Route exact path=\"/postDetail/:postId\" component={Auth(PostDetailPage, null)} />\n        <Route exact path=\"/postsearchlist\" component={Auth(PostSearchListPage, null)} />\n\n        <Route exact path=\"/shoppingBascket\" component={ShoppingBascket} />\n        <Route exact path=\"/chat\" component={Chat} />\n        <Route exact path=\"/category\" component={Category} />\n        <Route exact path=\"/introduce\" component={Introduce} />\n\n        <Route exact path=\"/deliveryCard\" component={DeliveryCard} />\n        <Route exact path=\"/privacy\" component={Privacy} />\n        <Route exact path=\"/order\" component={Order} />\n        <Route exact path=\"/reviewWrite\" component={ReviewWrite} />\n        <Route exact path=\"/reviewPage\" component={ReviewPage} />\n        <Route exact path=\"/pointPage\" component={PointPage} />\n\n        <Route exact path=\"/ocrpage\" component={Auth(OCRpage, true)} />\n        <Route exact path=\"/posting\" component={Auth(PostingPage, true)} />\n\n        <Route exact paht=\"/loading\" component={LoadingAndSuccess} />\n\n      </Switch>\n    </Suspense>\n    </CssBaseline>\n  );\n}\n\nexport default App;\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_reducer/index.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/hoc/auth.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/MainPage.js",["218","219"],"import React from \"react\"\nimport AppBar from '@material-ui/core/AppBar';\nimport {  Typography ,Grid, Container, Paper, Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport SubContent from './LandContents/SubContent'\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nconst newsPost = {\n  title: \"Title Sample\",\n  description: \"description Sample, which codes is best code? can you choice that?\",\n  linkText: \"LinkText Sample\",\n  linkURL: \"http://localhost:3000/\",\n  image: \"https://source.unsplash.com/random\"\n}\n\nconst theme = createMuiTheme({\n  typography: {\n \n    h6: {\n      fontSize:13\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  flex: {\n    display: 'flex',\n    padding: '20px',\n  },\n  AppbarContainer: {\n    maxWidth: '100%',\n    margin: theme.spacing(0, 0, 0, 0),\n    padding: theme.spacing(0, 0, 0, 0),\n    position: \"relative\",\n    zIndex: \"2\"\n },\n  productToolbar: {\n    top:\"10%\",\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n appbar2: {\n  position: \"relative\",\n  display: \"relative\",\n  alignItems: \"center\",\n},\n  }))\n\n  function MainPage() {\n    const classes = useStyles();\n\n    return (\n  <div>\n    <div className={classes.flex}>\n      <Container>\n      <React.Fragment>\n      <CssBaseline />\n      <Paper elevation={3}>\n      <Typography\n      variant=\"h5\" \n      style={{textAlign:'center'}}>\n      <br/>\n      당신의 Vision을 들려주세요.\n      <br />\n      </Typography>\n      <Typography\n      variant=\"subtitle1\" \n      style={{textAlign:'center'}}\n      >\n      저희 Vision Market은 사용자들의 리뷰를 바탕으로\n      <br />\n      시각 장애인들에게 상품을 들려줍니다.\n      </Typography>\n      <br />\n      </Paper>\n    </React.Fragment>\n    </Container>\n    </div>\n    <div>\n    <Container className={classes.AppbarContainer} >\n    <AppBar className={classes.appbar2} style={{ backgroundColor: \"#505050\" }}>\n                <Toolbar >\n                    <Button color=\"inherit\" aria-label=\"모든 카테고리\" href=\"/category\" style={{ fontSize: '1.2rem' }}>\n                            모든 카테고리\n                    </Button>\n                    <Button color=\"inherit\" aria-label=\"소개 및 안내\" href=\"/introduce\" style={{ fontSize: '1.2rem' }}>\n                            소개 및 안내\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            </Container>\n            </div>\n            <Container>\n          <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Toolbar className={classes.productToolbar}>\n                        <Typography\n                            variant=\"h5\">\n                              오늘의 인기상품\n                        </Typography>\n                    </Toolbar>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12}>\n                    <Toolbar className={classes.productToolbar}>\n                        <Typography\n                            variant=\"h5\">\n                              오늘의 신상품\n                        </Typography>\n                    </Toolbar>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12}>\n                    <Toolbar className={classes.productToolbar}>\n                        <Typography\n                            variant=\"h5\">\n                              오늘의 추천상품\n                        </Typography>\n                    </Toolbar>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <SubContent />\n                </Grid>\n            </Grid>\n            </Container>\n            </div>\n    );\n  }\n  \n\nexport default MainPage;","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/LoadingAndSuccess.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LoginPage/LoginPage.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/PayPage.js",["220","221","222","223"],"import React, { useState, useEffect } from 'react'\nimport { Grid, Container, makeStyles, Card, Input, Paper, Button, CircularProgress } from '@material-ui/core'\nimport NumberFormat from 'react-number-format'\nimport { Check } from '@material-ui/icons'\nimport LoadingAndSuccess from './LoadingAndSuccess'\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        // paddingTop : theme.spacing(12)\n        backgroundColor : \"white\"\n    },\n    creditCard: {\n        paddingTop: theme.spacing(4),\n        margin: 'auto',\n        alignContent: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        width: \"100%\"\n    },\n    cardPadding: {\n        padding: theme.spacing(2)\n    },\n    cardForm: {\n        width: \"100%\",\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"320px\"\n        }\n    },\n    card: {\n        border: '1px solid #dddddd',\n        padding: '0 0.8rem',\n        fontSize: '1rem',\n        lineHeight: '2rem',\n        margin: '0.2rem',\n        color: '#666666',\n        backgroundColor: '#f8f8f8'\n    },\n    cardBtn: {\n        marginTop: '1.5rem',\n        marginBottom: \"0\",\n        backgroundColor : theme.palette.primary\n    }\n}))\n\n\nfunction PayPage() {\n    const classes = useStyle()\n\n    const [Success, setSuccess] = useState(false)\n\n\n    const SuccessHandle = (e) => {\n        e.preventDefault()\n\n        setSuccess(true)\n    }\n\n\n    return (\n        <Container component=\"body\" className={classes.root}>\n            <Grid className={classes.creditCard} component=\"h4\" container>\n\n                {Success ? \n                <LoadingAndSuccess />  :\n                <div>\n                <Grid item md={12}>\n                    <h3 >내 카드 정보</h3>\n                </Grid>\n                    <Grid item style={{margin : 'auto'}} className={classes.cardPadding} sm={6}>\n                        <Paper component=\"body\" className={classes.cardForm} variant=\"outlined\" >\n                            <form noValidate autoComplete=\"off\">\n\n                                <div >\n                                    <NumberFormat disabled value=\"4321431243214321\" format=\"####-####-####-####\" className={classes.card} style={{ width: '68%' }} placeholder=\"카드 번호\" />\n                                    <img style={{ width: \"12%\", verticalAlign: \"middle\" }} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Visa.svg/1024px-Visa.svg.png\" alt=\"VISA\" />\n                                    <Input disabled className={classes.card} value=\"KO YEONG BIN\" style={{ width: '80%' }} placeholder=\"이름\" />\n                                </div>\n\n                                <div>\n                                </div>\n                                {/* 버튼 부분 수정해야함 */}\n                                <Button onClick={SuccessHandle} className={classes.cardBtn} variant=\"contained\" color=\"primary\" type=\"submit\" >결제</Button>\n                            </form>\n                        </Paper>\n                    </Grid>\n                </div>\n            }\n\n                \n            </Grid>\n        </Container>\n    )\n}\n\nexport default PayPage\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/EnrollmentCreditPage.js",["224","225","226"],"import React, { useState } from 'react'\nimport { Grid, Container,  makeStyles, Paper, Typography, ButtonBase} from '@material-ui/core'\nimport CreditCard from './CreditCard/CreditCard'\nimport CreditCash from './CreditCash/CreditCash'\nimport Banks from './BankInformation.json'\n\nconst useStyle = makeStyles((theme => ({\n    root: {\n        paddingTop: theme.spacing(30),\n        backgroundColor : theme.palette.action.hover,\n        height : '100%',\n        paddingBottom : \"30%\"\n    },\n    mainTitle: {\n        padding : theme.spacing(3),\n        borderColor : theme.palette.action.selected,\n        margin : theme.spacing(3)\n    },\n    creditTitle: {\n        width: '100%',\n        borderColor : theme.palette.action.selected\n    },\n    enrollement: {\n        padding : theme.spacing(3),\n    },\n\n})))\n\n\nfunction EnrollmentCreditPage(props) {\n    const classes = useStyle();\n\n    const [SelectCredit, setSelectCredit] = useState(false)\n    const [SelectCash, setSelectCash] = useState(false)\n\n    const [CreditNum, setCreditNum] = useState()\n\n    const HandlingCredit = (e) => {\n        e.preventDefault()\n        if (SelectCredit === true || SelectCash === true) {\n            setSelectCredit(false)\n            setSelectCash(false)\n        }\n        else {\n            setSelectCredit(true)\n        }\n    }\n    const HandlingCash = (e) => {\n        e.preventDefault()\n        if (SelectCash === true || SelectCredit === true) {\n            setSelectCredit(false)\n            setSelectCash(false)\n        }\n        else {\n            setSelectCash(true)\n        }\n    }\n\n\n\n    const CreditCardComponent = (Action) => {\n        if (Action) {\n            return (\n               <CreditCard />\n            )\n        }\n        else {\n            return null\n        }\n    }\n\n\n    const CreditCashComponent = (Action) => {\n        if (Action) {\n            return (\n                <CreditCash banks={Banks.banks} />\n            )\n        }\n        else {\n            return null\n        }\n    }\n\n    return (\n        <Container className={classes.root} component=\"body\">\n            <Grid container>\n                <Grid item component=\"h2\" xs={12}>\n                    <Paper variant=\"outlined\" className={classes.mainTitle} >결제 수단 등록</Paper>\n\n                </Grid>\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\n                    <form target={CreditCardComponent} onSubmit={HandlingCredit}>\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\n                                {/* <Typography component=\"h2\"> */}\n                                    <h1>\n                                        신용카드\n                        </h1>\n                                {/* </Typography> */}\n                            </Paper>\n                        </ButtonBase>\n                    </form>\n                </Grid>\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\n                    <form target={CreditCashComponent} onSubmit={HandlingCash}>\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\n                                {/* <Typography component=\"h2\"> */}\n                                    <h1>\n                                        계좌번호\n                                    </h1>\n                                {/* </Typography> */}\n                            </Paper>\n                        </ButtonBase>\n                    </form>\n                </Grid>\n                {CreditCardComponent(SelectCredit)}\n                {CreditCashComponent(SelectCash)}\n            </Grid>\n        </Container>\n    )\n\n}\n\nexport default EnrollmentCreditPage\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/AIChat/Chat.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Category/Category.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Introduce/Introduce.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/RegisterPage/RegisterPage.js",["227","228","229","230","231"],"import { Container, CssBaseline, Grid, makeStyles, Typography, Button, Box, Link } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport React, { useState } from 'react'\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\nimport { useDispatch } from 'react-redux'\nimport * as Yup from 'yup'\nimport { useFormik } from 'formik'\nimport { registerUser } from '../../../_action/user_actions'\nimport HearingIcon from '@material-ui/icons/Hearing';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    // root : {\n    //     // paddingTop : theme.spacing(25)\n    // },\n    paper: {\n        paddingTop : theme.spacing(23),\n        display : 'flex',\n        flexDirection : 'column',\n        alignItems : 'center'\n    },\n    avatar: {\n        marginTop : theme.spacing(1),\n        backgroundColor : theme.palette.primary.dark\n    },\n    form : {\n        marginTop : theme.spacing(1),\n        width : \"100%\"\n    },\n    onSubmit : {\n        margin : theme.spacing(3, 0, 2)\n    }\n}))\n\nexport default function RegisterPage(props) {\n    const classes = useStyles()\n\n    const dispatch = useDispatch();\n    const [FormErrorMessage, setFormErrorMessage] = useState(\"\")\n\n\n    // 라디오\n    const [selectedValue, setSelectedValue] = React.useState(\"10대\");\n\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n      \n    // 체크박스 \n    const [checked, setChecked] = React.useState(true);\n\n    const handleChange2 = (event) => {\n          setChecked(event.target.checked);\n    };\n\n    // 페이지 넘어가는 부분\n    const [NextPage, setNextPage] = useState(1);\n\n    const ButtonHandler = (e) => {\n        if(NextPage !== 4){\n            e.preventDefault()\n            setNextPage(NextPage+1)\n        } else {\n            setNextPage(NextPage)\n            // 페이지가 4일 경우(===메인으로 돌아가기, 쇼핑창)\n        }\n    }\n\n    const ButtonHandler2 = (e) => {\n        if(NextPage !== 1){\n            e.preventDefault()\n            setNextPage(NextPage-1)\n        } else {\n            setNextPage(NextPage)\n            // 페이지 1일 경우 뒤로(===메인으로돌아가기, 로그인창) \n        }\n    }\n\n    const validationSchema = Yup.object({\n        name : Yup.string().required(\"이름을 입력해주세요.\"),\n        birth : Yup.string().min(8, \"생년월일은 8자로 입력해주세요.\").required(\"생년월일이 필요합니다.\"),\n        id : Yup.string().required('아이디가 필요합니다.'),\n        password : Yup.string().min(4, \"Password는 최소 4자 이상이여야 합니다.\").required('password가 필요합니다.'),\n        confirmPassword : Yup.string().oneOf([Yup.ref('password'), null], 'Password는 서로 일치해야합니다.').required('Password 확인란에 Password를 입력해주세요.')   \n    })\n\n    const formik = useFormik({\n\n        initialValues : {\n            name : \"\",\n            birth : \"\",\n            id : \"\",\n            password : \"\",\n            confirmPassword : \"\"\n        },\n        validationSchema : validationSchema,\n        onSubmit : ((values, {setSubmitting}) => {\n            setTimeout(() => {\n                let dataToSubmit = {\n                    name : values.name,\n                    birth : values.birth,\n                    id : values.id,\n                    password : values.password,\n                }\n                \n                dispatch(registerUser(dataToSubmit))\n                .then(response => {\n                    if(response.payload.success) {\n                        props.history.push('/')\n                    }\n                    else {\n                        setFormErrorMessage(\"잘못된 형식입니다.\")\n                    }\n                }).catch((err) => {\n                    setFormErrorMessage(\"잘못된 형식입니다.\")\n                    setTimeout(() => {\n                        setFormErrorMessage('')\n                    }, 3000);\n                })\n                setSubmitting(false)\n            }, 500)\n        })\n    })\n\n    if(NextPage === 1) {\n        return (\n            <Container component='main' maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n            <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}>\n                    <Grid item xs={12}> \n                    <fieldset>    \n                    <p>\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"name\"\n                                name=\"name\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"이름\"\n                                autoFocus\n                                value={formik.values.name}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.name && Boolean(formik.errors.name)}\n                                helperText= {formik.touched.name && formik.errors.name}\n                                alt=\"이름입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} >\n                            <TextField\n                                autoComplete=\"birth\"\n                                name=\"birth\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"birth\"\n                                label=\"생년월일(8자리)\"\n                                type='birth'\n                                value={formik.values.birth}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.birth && Boolean(formik.errors.birth)}\n                                helperText = {formik.touched.birth && formik.errors.birth}\n                                alt=\"생년월일8자리입력창\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                이미 가입하셨나요? 로그인하기\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {FormErrorMessage && (\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\n\n                    )}\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        메인으로돌아가기\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler}\n                    >\n                        다음\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n        </Container>\n        )} else if(NextPage === 2){\n            return (\n            <Container component='main' maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n            <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}>\n                    <Grid item xs={12} >\n                    <fieldset>    \n                    <p>\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"id\"\n                                name=\"id\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"id\"\n                                label=\"ID\"\n                                autoFocus\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\n                                helperText= {formik.touched.email && formik.errors.email}\n                                alt=\"아이디입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} >\n                            <TextField\n                                autoComplete=\"current-password\"\n                                name=\"password\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"password\"\n                                label=\"Password\"\n                                type='password'\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\n                                helperText = {formik.touched.password && formik.errors.password}\n                                alt=\"비밀번호입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField \n                                autoComplete=\"confirm-password\"\n                                name=\"confirmPassword\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"confirmPassword\"\n                                label=\"Confirm Password\"\n                                type='password'\n                                value={formik.values.confirmPassword}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n                                helperText = {formik.touched.confirmPassword && formik.errors.confirmPassword}\n                                alt=\"비밀번호확인입력창\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                이미 가입하셨나요? 로그인하기\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {FormErrorMessage && (\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\n\n                    )}\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        뒤로\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler}\n                    >\n                        다음\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n        </Container>\n        )} else if(NextPage === 3){\n            return(\n        <Container component='main' maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n            <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={12} >\n                    <fieldset>    \n                    <p>\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                        <Grid item xs={9} sm={10}>\n                            <TextField\n                                autoComplete=\"address\"\n                                name=\"address\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"address\"\n                                label=\"Address\"\n                                autoFocus\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\n                                helperText= {formik.touched.email && formik.errors.email}\n                                alt=\"주소입력창\"\n                            /> </Grid>\n                            <Grid item xs={2} sm={2}>\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>검색</Button>\n                        </Grid>\n                        <Grid item xs={5} sm={6} >\n                            <TextField\n                                autoComplete=\"ph\"\n                                name=\"ph\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"ph\"\n                                label=\"PH\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                alt=\"전화번호입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={4} sm={4} >\n                            <TextField\n                                autoComplete=\"CertifiNumber\"\n                                name=\"CertifiNumber\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"CertifiNumber\"\n                                label=\"인증번호\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                alt=\"인증번호입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={2} sm={2}>\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>인증</Button>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                이미 가입하셨나요? 로그인하기\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {FormErrorMessage && (\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\n\n                    )}\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        뒤로\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler}\n                    >\n                        다음\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n        </Container>\n            )} else if (NextPage === 4) {\n            return(\n                <Container component='main' maxWidth=\"xs\" >\n                <CssBaseline />\n                <div className={classes.paper}>\n                <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                <br />\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={12} >\n                    <fieldset>    \n                    <p style={{fontSize: '1.0rem'}} >\n                    당신의 취향과 프로필을 선택해주세요.<br />\n                    스타일의 경우 중복으로 선택할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                    <Grid item xs={12} >\n                    <fieldset>\n                        <br />\n                    <div style={{fontSize: '1.0rem'}}>[ 나이 ]</div>\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\n                    <FormControlLabel\n                    value=\"10대\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>10대</p>}\n                    labelPlacement=\"10대\"\n                    alt=\"10대\"\n                    />\n                    <FormControlLabel\n                    value=\"20대\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>20대</p>}\n                    labelPlacement=\"20대\"\n                    alt=\"20대\"\n                    />\n                    <FormControlLabel\n                    value=\"30대\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>30대</p>}\n                    labelPlacement=\"30대\"\n                    alt=\"30대\"\n                    />\n                    <FormControlLabel\n                    value=\"40대이상\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>40대이상</p>}\n                    labelPlacement=\"40대이상\"\n                    alt=\"40대이상\"\n                    />\n                    </RadioGroup>\n                    <hr />\n                    <br />\n                    <div style={{fontSize: '1.0rem'}}>[ 성별 ]</div>\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\n                    <FormControlLabel\n                    value=\"남자\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>남자</p>}\n                    labelPlacement=\"남자\"\n                    alt=\"남자\"\n                    />\n                    <FormControlLabel\n                    value=\"여자\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>여자</p>}\n                    labelPlacement=\"여자\"\n                    alt=\"여자\"\n                    />\n                    </RadioGroup>\n                    <hr />\n                    <br />                    \n                    <div style={{fontSize: '1.0rem'}}>[ 키 ]</div>\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\n                    <FormControlLabel\n                    value=\"140\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>150cm 이하</p>}\n                    labelPlacement=\"140\"\n                    alt=\"150센티미터이하\"\n                    />\n                    <FormControlLabel\n                    value=\"150\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>150cm</p>}\n                    labelPlacement=\"150\"\n                    alt=\"150센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"160\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>160cm</p>}\n                    labelPlacement=\"160\"\n                    alt=\"160센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"170\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>170cm</p>}\n                    labelPlacement=\"170\"\n                    alt=\"170센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"180\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>180cm</p>}\n                    labelPlacement=\"180\"\n                    alt=\"180센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"190\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>190cm 이상</p>}\n                    labelPlacement=\"190\"\n                    alt=\"190센티미터이상\"\n                    />\n                    </RadioGroup>\n                    <hr />\n                    <br />\n                    <div style={{fontSize: '1.0rem'}}>[ 스타일 ]</div>\n                    <Checkbox \n                    color=\"primary\" alt=\"심플\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />심플\n                    <Checkbox \n                    color=\"primary\" alt=\"캐주얼\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />캐주얼\n                    <Checkbox \n                    color=\"primary\" alt=\"시크\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />시크\n                    <Checkbox \n                    color=\"primary\" alt=\"유니크\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />유니크\n                    <br />\n                    <Checkbox \n                    color=\"primary\" alt=\"오피스\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />오피스\n                    <Checkbox \n                    color=\"primary\" alt=\"스트릿\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />스트릿\n                    <br />\n                    </fieldset>\n                    </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        뒤로\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        // onSubmit={ButtonHandler}\n                        href=\"/\"\n                    >\n                        가입완료\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n            </Container>\n            )} else {\n            return(\n                <div> hi </div>\n                // 자동 로그인 후 메인 페이지로 이동\n            )\n        }\n}","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostSearchListPage.js",["232"],"import React, { useState, useEffect } from 'react'\nimport { useLocation } from \"react-router\";\nimport { Grid, makeStyles, Typography } from '@material-ui/core'\nimport Pagination from '@material-ui/lab/Pagination';\nimport PostCard from './PostCard';\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    justifyContent: 'center',\n    justifyItems: 'center',\n    align: 'center',\n    justify: \"center\",\n    alignItems: \"center\"\n  },\n}))\n\nexport default function PostSearchListPage(props) {\n  const classes = useStyles();\n  const location = useLocation();\n\n\n  const [posts, setPosts] = useState([])\n  console.log(location)\n  const category = location.state.category\n  //sh url만 변경 server post.js에서 상품 카테고리에 맞는거 조회에 해당.\n  useEffect(() => {\n\n    axios.post(`/api/post/posts_by_category`, category)\n      .then(response => {\n        console.log(\"실행\")\n        if (response.data.success) {\n          console.log(response)\n          setPosts(response.data.post)\n        }\n      })\n  }, [])\n\n  const [page, setPage] = React.useState(1);\n\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid item container direction=\"column\" style={{ margin: \"auto\" }} spacing={1}>\n        <Grid container spacing={2} style={{ margin: \"auto\", justifyContent: 'center', alignContent: \"center\" }} >\n          {posts.map((post) => (\n            <Grid\n              item\n              key={post.id}\n              lg={3}\n            >\n              <PostCard post={post} style={{ margin: \"auto\", justifyContent: 'center', alignContent: \"center\" }} />\n            </Grid>\n          ))}\n        </Grid>\n        <Grid container spacing={2} style={{ margin: \"auto\", justifyContent: 'center', alignContent: \"center\" }}>\n          <Typography>Page: {page}</Typography>\n          <Pagination\n            shape=\"rounded\"\n            count={10}\n            size=\"large\"\n            page={page}\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostDetailPage.js",["233","234","235"],"\nimport { Container, CssBaseline, Grid, makeStyles, Typography, ButtonBase, Box, Button, List, ListItem, ListItemText, Divider, FormHelperText, FormControl, ButtonGroup } from '@material-ui/core'\n\n\nimport React, { useState,useEffect } from 'react'\n\n\nimport { useDispatch } from 'react-redux';\nimport SwipeableViews from 'react-swipeable-views';\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { useHistory } from 'react-router';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport axios from 'axios'\n//image json파일로 만들어서 코드 map 사용, 빼서 사용하면 일일이 하나씩 import할필요없음\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  };\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop : theme.spacing(8),\n        display : 'flex',\n        flexDirection : 'column',\n        alignItems : 'center'\n    },\n\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    container: {\n        padding: theme.spacing(10),\n        paddingTop : theme.spacing(10),\n        justifyContent: 'center',\n        alignContent: 'center'\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100vh',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nexport default function PostDetailPage(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const theme = useTheme();\n\n    const [image,setImage] =useState([])\n    const [post, setPost] = useState({}) //sh 214\n    const postId = props.match.params.postId\n     useEffect(() => {\n \n         axios.get(`/api/post/id?id=${postId}`)\n         .then(response => {\n             console.log(response.data.post[0])\n              setPost(response.data.post[0])\n              setImage(response.data.post[0].image) //sh 214  // 281~284\n         })\n     }, [])\n   \n \n     \n    const handleChangeIndex = (index) => {\n        setValue(index);\n      };\n\n    const history = useHistory();\n    \n    //sh-254 장바구니 누르면 해당 데이터를 Cart에 넣고 해당 유저의 장바구니 페이지로 이동\n    const clickCartHandler = () => {\n      \n      let user = props.user\n            let body = {\n                post: postId,\n                size: size,\n                quantity: quantity\n            }\n            console.log(body)\n            axios.post('/api/cart/create',body)\n            .then(response => {\n                if(response.data.status) {\n                  history.push({\n                    pathname: '/shoppingbascket',\n                    state:{user:user}\n                  })\n                }\n            })\n    }\n    \n    //sh\n//이거 일단 보류.. 구매하는 코드임. 근데 사실 여기서는 의미없는데, 나중에 구매할때 사용할 것.\n  // const  clickPurchaseHandler = () => {\n    \n  //   if(props.user.userData.isAuth) {\n  //           let body = {\n  //               post: postId,\n  //               size: size,\n  //               quantity: quantity,\n  //               price: post.pprice\n  //           }\n  //          // console.log(body)\n  //           axios.post('/api/purchase/create',body)\n  //           .then(response => {\n  //               if(response.data.success) {\n  //                 //결제 페이지로 이동.\n  //               }\n  //           })\n  //       }else {\n  //           alert('로그인이 필요합니다.')\n  //           history.push('/login')   \n  //           }\n  // }\n    \n\n\n\n    //sh (Quantity , Size  175-201 해당 기능 232-238 // 244-246)   ( 상품 추가 이미지 280 ) (대표이미지 수정)\n    const[quantity,setQuantity] = useState(1)\n \n    const handleMinusQuantityChange = (event) => {\n      if(quantity >1) {\n        setQuantity(quantity - 1)\n      }\n    }\n\n    const handlePlusQuantityChange =(event) => {\n      setQuantity(quantity+1)\n    }\n\n    const [size, setSize] = React.useState('M');\n    const handleSizeChange = (event) => {\n        setSize(event.target.value);\n    };\n\n    const [value, setValue] = React.useState(1);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n\n      \n    <Container component='main' maxWidth=\"lg\" className={classes.container}>\n        <CssBaseline />\n        <Typography component=\"div\" style={{height: '100vh' }}>\n        <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <ButtonBase className={classes.image}>\n                <img className={classes.img} alt=\"complex\" src= {image[0]} />\n              </ButtonBase>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Typography component=\"h1\" variant =\"h4\" > \n                 {post.title}\n                </Typography>\n                별점 4.5점 / 총 13개의 상품 리뷰가 있습니다.\n                <Divider />\n                <List component=\"nav\" >\n                <ListItem><ListItemText primary=\n                {post.pprice}원 />\n                </ListItem>\n                </List>\n\n                <FormControl required className={classes.formControl}>\n                <Typography variant =\"h6\" > \n                사이즈\n                </Typography>\n                <ToggleButtonGroup value={size} exclusive onChange={handleSizeChange}>\n                <ToggleButton variant=\"outlined\"  value = \"S\" style={{fontSize:'1rem'}} aria-label=\"S사이즈\">S</ToggleButton>\n                <ToggleButton variant=\"outlined\"  value = \"M\" style={{fontSize:'1rem'}} aria-label=\"S사이즈\">M</ToggleButton>\n                <ToggleButton variant=\"outlined\"  value = \"L\" style={{fontSize:'1rem'}} aria-label=\"L사이즈\">L</ToggleButton>\n                <ToggleButton variant=\"outlined\"  value = \"XL\" style={{fontSize:'1rem'}} aria-label=\"XL사이즈\">XL</ToggleButton>\n                <ToggleButton variant=\"outlined\"  value = \"XXL\" style={{fontSize:'1rem'}} aria-label=\"XXL사이즈\">XXL</ToggleButton>\n                </ToggleButtonGroup>\n                <br />\n                <Typography variant =\"h6\" > \n                수량\n                </Typography>\n                <ButtonGroup>\n                <Button variant=\"outlined\" style={{fontSize:'1rem'}} onClick= {handlePlusQuantityChange} aria-label=\"더하기\">+</Button>\n                <Button variant=\"outlined\" style={{fontSize:'1rem'}}  aria-label=\"1개\">{quantity}</Button>\n                <Button variant=\"outlined\" style={{fontSize:'1rem'}} onClick= {handleMinusQuantityChange} aria-label=\"빼기\">-</Button>\n                </ButtonGroup>\n                <br />\n            </FormControl>\n            <ButtonGroup variant=\"text\" fullWidth=\"true\">\n                <Button variant=\"outlined\" style={{fontSize:'1.2rem'}} aria-label=\"장바구니\" onClick={clickCartHandler}>장바구니</Button>\n                <Button variant=\"outlined\" style={{fontSize:'1.2rem'}}  aria-label=\"바로구매\">바로구매</Button>\n                </ButtonGroup>\n            </Grid>\n        </Grid> <br />\n        <Divider />\n        <br />\n        <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n          <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                centered\n                variant=\"fullWidth\"\n          >\n          <Tab style={{fontSize:'0.9rem'}} label=\"상세보기\" {...a11yProps(0)} />\n          <Tab style={{fontSize:'0.9rem'}} label=\"음성리뷰\" {...a11yProps(1)} />\n          <Tab style={{fontSize:'0.9rem'}} label=\"일반리뷰\" {...a11yProps(2)} />\n          </Tabs>\n          </AppBar>\n        <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <Box component=\"span\" m={1}><Button /></Box>\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[1]} /></Box>\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[2]} /></Box>\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[3]} /></Box>\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={image[4]} /></Box>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          음성리뷰창\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n        <Typography variant=\"h6\" style={{padding:'10px'}}>\n        리뷰는 추천순으로 노출됩니다. 총 1개의 리뷰가 있습니다. <br />\n        </Typography>\n          <Card  variant=\"outlined\">\n        <CardContent>\n        <Typography gutterBottom variant=\"h6\">\n          별점 5점 <br/> \n        </Typography>\n        <Typography >\n          키 170 / 몸무게 65 <br />\n          옵션 : 라지 사이즈 [ 사이즈가 적당해요. ]<br />\n          소재가 얇아서 더운 여름에도 가볍게 입고 다닐 것 같아요.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button aria-label=\"리뷰추천하기\" variant=\"outlined\" style={{fontSize:'1.1rem'}}>추천</Button>\n        <Button aria-label=\"리뷰비추천하기\" variant=\"outlined\" style={{fontSize:'1.1rem'}}>비추천</Button>\n        </CardActions>\n        </Card>\n        </TabPanel>\n      </SwipeableViews>\n          </div>\n        </Typography>\n    </Container>\n\n\n    )\n}","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Navbar/Nav.js",["236","237","238","239","240"],"import React,{useState} from 'react'\nimport { Box, Grid, makeStyles,  AppBar, Toolbar, InputBase, Container } from '@material-ui/core'\n\nimport axios from \"axios\";\nimport { ZoomOut, ZoomIn, RecordVoiceOver, Exposure, Brightness6, ShoppingCart, ExitToApp, ZoomInSharp } from '@material-ui/icons'\n\nimport { fade } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n          margin: theme.spacing(1),\n        },\n    },\n    BoxComponent2: {\n        minWidth: '230px',\n        textAlign: 'center',\n        height: '20px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        color: \"#ffffff\",\n        borderColor: '#B6B5B5'\n        \n    },\n    appbar: {\n        display: \"flex\",\n        position: \"relative\",\n    },\n    toolbar: {\n        display: \"flex\",\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    iconComponent: {\n        margin: '0', padding: '0',\n        color: '#ffffff'\n    },\n    searchIcon: {\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        right: \"-2%\",\n        padding: theme.spacing(0, 2),\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.35)\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          width: 'auto',\n        },\n      },\n    appbarContainer: {\n        maxWidth: '100%',\n        margin: theme.spacing(0, 0, 0, 0),\n        padding: theme.spacing(0, 0, 0, 0),\n        position: \"relative\",\n        zIndex: \"2\"\n    },\n    orderButton: {\n        position: \"relative\",\n        margin: 0,\n        padding: 0\n    },\n    BoxComponent: {\n        minWidth: '200px',\n        height: '20px',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        display: 'flex',\n    },\n}))\n\n\nfunction Nav(props) {\n    const classes = useStyle();\n    \n    // 확대, 축소 기능\n    var nowZoom = 100;\n    function zoomOut() {\n        nowZoom = nowZoom - 20;\n        if(nowZoom <= 100) nowZoom = 100;\n        zooms();\n    }\n\n    function zoomIn() {\n        nowZoom = nowZoom + 20;\n        if(nowZoom >= 200) nowZoom = 200;\n        zooms();\n    }\n\n    function zomReset(){\n        nowZoom = 100;\n        zooms();\n    }\n\n    function zooms(){\n        document.body.style.zoom = nowZoom + '%';\n    }\n\n\n    //sh-119 로그아웃기능 193\n    const clickLogoutHandler = () => {\n      \n        axios.get(`/api/users/logout`)\n        .then(response => {\n            console.log(\"로그아웃\")\n        })\n      }\n  \n\n\n    return (\n        <Container className={classes.appbarContainer} component='main' maxWidth='xl' >\n            <AppBar className={classes.appbar} style={{ backgroundColor: \"#303030\" }}>\n                <Toolbar className={classes.toolbar} p={1} >\n                    <Grid container spacing={1}>\n\n                        {/* 아이콘모음  F-146 고대비 버튼 삭제 */}\n                        <Grid item xs={12} sm={4}>\n                            <Box color=\"#000000\" className={classes.BoxComponent2} p={4} >\n                            <div className={classes.root}>\n                            <ButtonGroup variant=\"text\" color=\"inherit\">\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"비전마켓\" href=\"/\">\n                            메인\n                            </Button>\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"챗봇\" href=\"/chat\">\n                            Chat\n                            </Button>\n                            <Button size=\"small\" aria-label=\"음성검색\">\n                                <RecordVoiceOver className={classes.iconComponent} />\n                            </Button>\n                            <Button size=\"small\" aria-label=\"확대\" onClick={zoomIn}>\n                                <ZoomIn className={classes.iconComponent} />\n                            </Button>\n                            <Button size=\"small\" aria-label=\"축소\" onClick={zoomOut}>\n                                <ZoomOut className={classes.iconComponent} />\n                            </Button>\n                            </ButtonGroup>\n                            </div>\n                            </Box>\n                        </Grid>\n\n                        {/* 검색창 */}\n                        <Grid item xs={12} sm={4} >\n                            <Box p={2}>\n                            <div className={classes.search}>\n                                <div className={classes.searchIcon}>\n                                <SearchIcon />\n                                </div>\n                                <InputBase\n                                placeholder=\" 검색창...\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{ 'aria-label': '검색창' }}\n                                />\n                            </div>\n                            </Box>\n                        </Grid>\n\n                        {/* 주버튼 */}\n                        <Grid item xs={12} sm={4}>\n                            <Box className={classes.BoxComponent} p={4} >\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"마이페이지\" href=\"/myCategory\" >\n                                        마이페이지\n                                </Button>\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} aria-label=\"장바구니\" aria-details=\"장바구니 링크\" href=\"/shoppingbascket\" color=\"inherit\" >\n                                <ShoppingCart  style={{ fontSize: '30' }} />\n                                        장바구니\n                                </Button>\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"로그아웃\" onClick ={clickLogoutHandler}>\n                                    <ExitToApp />\n                                        로그아웃\n                                </Button>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </Container>\n    )\n}\n\nexport default Nav\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyCategory.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/Order.js",["241","242","243","244"],"import { makeStyles, Tab, Tabs, Typography, Box, Paper, Container} from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from 'prop-types'\nimport BuyCard from \"./BuyCard\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-auto-tabpanel-${index}`}\n        aria-labelledby={`scrollable-auto-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\nconst useStyles = makeStyles((theme) => ({\n    panel: {\n        backgroundColor: '#fefefe',\n    }\n  }));\n  \n  export default function Order() {\n\n    const orderCount = 3;\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n  \n    return (\n        <Container style={{paddingTop:'2%'}}>\n            <Paper className={classes.panel}>\n              {\n                    orderCount < 1 ? '최근 6개월간 주문하신 내역이 없습니다.' : \n                    <div>\n                        <BuyCard></BuyCard>\n                        <BuyCard></BuyCard>\n                    </div>\n                }\n            </Paper>\n      </Container>\n    );\n  }","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/DeliveryCard.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/Privacy.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/PointPage.js",["245","246"],"import { Button, Box, Card, Tabs, Tab, Container, Grid, makeStyles, Paper, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CardActions } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from 'prop-types'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-auto-tabpanel-${index}`}\n        aria-labelledby={`scrollable-auto-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography component=\"div\">{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n}\n  \nTabPanel.propTypes = {\nchildren: PropTypes.node,\nindex: PropTypes.any.isRequired,\nvalue: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: '#fefefe',\n    },\n    panel: {\n        backgroundColor: '#fefefe',\n    },\n    card: {\n        margin: 'auto',\n        padding: '1% 1%',\n    },\n    button: {\n        justifyContent: 'center',\n    }\n}));\n\nfunction createData(point, usage, deadline) {\n    return { point, usage, deadline };\n}\n\nconst rows = [\n    createData(1000, '회원가입 이벤트', '7일후 소멸'),\n];\n\nconst rows2 = [\n    createData(500, '마우스 구매', '21년 4월 21일'),\n    createData(500, '헤드폰 구매', '21년 3월 19일'),\n]\n\nexport default function PointPage(){\n\n    const cancelCount = 1\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n    return(\n        <Container style={{paddingTop:'2%'}}>\n            <Card className={classes.card}>\n                    <Typography variant=\"h6\" align='center'>\n                        사용가능 적립금은 총 1000원 입니다.\n                    </Typography>\n                    <CardActions className={classes.button}>\n                    <Button \n                    variant='outlined' \n                    style={{fontSize:'1rem'}} \n                    size=\"large\"\n                    href=\"http://www.kbuwel.or.kr/Assistance/Info\">\n                        기부하기</Button>\n                    </CardActions>\n                </Card>\n            <br/>\n            <Paper className={classes.root}>\n                <Tabs\n                value={value}\n                variant=\"fullWidth\"\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                centered\n                >\n                <Tab style={{fontSize:'1rem'}} label=\"적립내역\" />\n                <Tab style={{fontSize:'1rem'}} label=\"사용내역\" />\n                </Tabs>\n\n            <TabPanel value={value} index={0} className={classes.panel}>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">적립금</TableCell>\n                        <TableCell align=\"center\">비고</TableCell>\n                        <TableCell align=\"center\">유효기간</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.date}>\n                        <TableCell align=\"center\">{row.point}</TableCell>\n                        <TableCell align=\"center\">{row.usage}</TableCell>\n                        <TableCell align=\"center\">{row.deadline}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n                \n            </TabPanel>\n            <TabPanel value={value} index={1} className={classes.panel}>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">사용금액</TableCell>\n                        <TableCell align=\"center\">사용처</TableCell>\n                        <TableCell align=\"center\">사용날짜</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {rows2.map((row) => (\n                        <TableRow key={row.date}>\n                        <TableCell align=\"center\">{row.point}</TableCell>\n                        <TableCell align=\"center\">{row.usage}</TableCell>\n                        <TableCell align=\"center\">{row.deadline}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            </TabPanel>\n            </Paper>\n        </Container>\n    )\n\n}\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewWrite.js",["247","248","249","250","251"],"import { Box, Button, Card, CardContent, Container, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport Rating from '@material-ui/lab/Rating';\n\nconst useStyles = makeStyles({\n    root: {\n      height: 180,\n      minHeight: 180,\n      marginBottom: 10,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    BoxComponent:{\n        justifyContent:'center',\n        alignItems:'center',\n        display:'flex',\n        margin:'auto'\n    },\n    InputBoxComponent:{\n        height:'240px',\n        justifyContent:'center',\n        alignItems:'center',\n        display:'flex'\n    }\n  });\n\nexport default function CancelCard(){\n    const classes = useStyles();\n    // 모달창\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (e) => {\n        console.log(e.currentTarget.value)\n        setOpen(false);\n    }\n\n    const [value, setValue] = React.useState(2);\n\n    return(\n        <div>\n        <Container style={{paddingTop:'2%'}}>\n        <Card className={classes.root} elevation={3}>\n            <CardContent>\n                <Grid container>\n                <Grid item xs={12} sm={9}>\n                    {/* <Dialog\n                        open={handleClickOpen}\n                        onClose={handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    > */}\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\n                        {/* <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\n                                아니오\n                            </Button>\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\n                                네\n                            </Button>\n                        </DialogActions>\n                    </Dialog> */}\n                    <Grid container>   \n                    <Grid item xs={3} sm={3}>\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\n                    </Grid>\n                    <Grid item xs={9} sm={9}>\n                            <Typography style={{marginBottom: '12px'}}>\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\n                            </Typography>\n                            <Typography className={classes.pos}>\n                                2021년 04월 27일 배송완료\n                            </Typography>\n                    </Grid>\n                    </Grid>     \n                </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        <br/>\n        <Divider/>\n        <br/>\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" className={classes.BoxComponent}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography component=\"legend\">[ 별점 ]</Typography>\n                    <Rating\n                    name=\"simple-controlled\"\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                    }}\n                    />\n                </Grid>\n            </Grid>\n        </Box>\n        <Divider/>\n        <Box className={classes.InputBoxComponent}>\n            <Grid container>\n                <Grid item xs={12}>\n                <Box style={{display:'flex'}}>\n                    <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"구매후기\"\n                    multiline\n                    rows={8}\n                    variant=\"outlined\"\n                    style={{ width:'1200px'}}\n                />\n                    </Box>\n                </Grid>\n            </Grid>\n        </Box>\n        <Divider/>\n        <Box className={classes.BoxComponent}>\n            <Button variant=\"outlined\" style={{fontSize:'1.2rem', width:'120px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\n        </Box>\n\n        </Container>\n        \n        </div>\n    )\n}","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewPage.js",["252","253","254","255"],"import {  makeStyles, Typography, Box, Paper, Container} from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from 'prop-types'\nimport ReviewableCard from \"./ReviewableCard\"\nimport ReviewedCard from \"./ReviewedCard\"\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-auto-tabpanel-${index}`}\n        aria-labelledby={`scrollable-auto-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n    panel: {\n        backgroundColor: '#fefefe',\n    }\n  }));\n  \n  export default function ReviewPage() {\n    const cancelCount = 1\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n  \n    return (\n        <Container style={{paddingTop:'2%'}}>\n            <Paper className={classes.root}>\n              <ReviewedCard/>\n              <ReviewedCard/>\n            </Paper>\n      </Container>\n    );\n  }","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_reducer/user_reducer.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_reducer/adminPost_reducer.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/ShoppingBaskcet/ShoppingBascket.jsx",["256"],"import React, { useState,useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ShoppingCard from './ShoppingCard';\nimport PayPage from '../Paymovement/PayPage';\nimport { useLocation } from 'react-router';\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(12, 2),\n    },\n    window: {\n        width: '100%',\n        padding: '5px',\n    },\n    windowDummy: {\n        height: '5px'\n    },\n    flex: {\n        display: 'flex',\n        padding: '2px',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function ShoppingBascket(props) {\n    \n    const getShoppingList = (ShoppingListObj) => {\n        return (\n            <List>\n                <ShoppingCard {...ShoppingListObj}  deleteShoppingItem={e => deleteShoppingItem(e)}/>\n            </List>\n        );\n    }\n\n    //sh 44~60 => 38\n    const[ShoppingList,setShoppingList] = useState([])\n\n    useEffect(() => {\n \n        axios.post(`/api/cart/cartList`)\n        .then(response => {\n\n            if(response.data.success) {\n                console.log(response)\n                setShoppingList(response.data.shoppingList)\n            }\n        })\n    }, [])\n  \n    function deleteShoppingItem(cartId){ \n        setShoppingList(ShoppingList.filter(item => item._id !== cartId))\n    }\n\n    const classes = useStyles();\n\n    const [Paynow, setPaynow] = useState(false)\n\n    const Payhandle = (e) => {\n        e.preventDefault()\n\n        setPaynow(true)\n    }\n\n    return (\n        <div>\n            <Grid item container >\n                <Grid item xs={1} sm={2} />\n                <Grid item xs={10} sm={8} justify=\"center\" >\n                    <br />\n                    <Card className={classes.root}>\n                        <ShoppingCartIcon fontSize=\"Large\" />\n                        <hr />\n                        <div className={classes.flex}>\n                            <div className={classes.window}>\n                                {ShoppingList.map(ShoppingListObj => getShoppingList(ShoppingListObj))}\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={classes.flex} style={{ fontSize: '0.9rem' }}>\n                            상품가격 45000원 + 배송비 0원 = 총 주문금액 45000원\n                        </div>\n                        <hr />\n                        <div className={classes.flex}>\n                            <Button variant=\"contained\" color=\"primary\">\n                                장바구니비우기\n                            </Button>\n                            <Grid item xs={1} />\n                            <Button onClick={Payhandle} variant=\"contained\" color=\"primary\">\n                                구매하기\n                             </Button>\n                        </div>\n                        {\n                            Paynow && <PayPage />\n                        }\n                    </Card>\n\n                </Grid>\n\n                <Grid item xs={1} sm={2} />\n\n            </Grid>\n        </div>\n    );\n}\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_action/user_actions.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/AIChat/Store.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/AIChat/Dashboard.js",["257"],"import dog from './1.jpg';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Avatar } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport {CTX} from './Store';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      margin: '50px',\n      padding: theme.spacing(3, 2),\n    },\n    flex : {\n      display: 'flex',\n      alignItems: 'center',\n      justify: 'center',\n      padding: '2px'\n    },\n    chatWindow: {\n      width: '100%',\n      height: '300px',\n      padding: '20px',\n    },\n    chatBox: {\n      width: '85%'\n    },\n    button: {\n      width: '15%'\n    },\n  }));\n\nexport default function Dashboard(){\n    const classes = useStyles();\n\n  // CTX store\n  const [allChats] = React.useContext(CTX);\n  const topics = Object.keys(allChats);\n\n  // local state\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\n  const [ textValue, changeTextValue ] = React.useState('');\n    \n    return (\n      <div>\n        <Grid container justify=\"center\">\n        <Paper className={classes.root}>\n        <Grid item xs={12}>\n        <Typography variant=\"h4\" component=\"h4\" align=\"center\">\n          인공지능채팅APP\n        </Typography>\n        <div className={classes.flex}>\n            <div className={classes.chatWindow}>\n                {\n                  allChats[activeTopic].map((chat, i)=>(\n                    <div className={classes.flex} key={i}>\n                      <Chip avatar={<Avatar alt=\"비전\" src={dog} />} variant=\"outlined\" size=\"small\" label=\"비전\"/> \n                       <Typography style={{fontSize:'15px'}}>{chat.msg}</Typography>\n                      </div>\n                  ))\n                }\n            </div>\n        </div>\n        <div className={classes.flex}>\n        <TextField \n        id=\"standard-basic\" \n        label=\"채팅 입력창\" \n        className={classes.chatBox}\n        value={textValue}\n        onChange={e => changeTextValue(e.target.value)}\n        />\n        <Button variant=\"contained\" color=\"primary\">\n        전송\n        </Button>\n        </div>\n        </Grid>\n      </Paper>\n      </Grid>\n      </div>\n    );\n}","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/LandContents/SubContent.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewableCard.js",["258"],"import {  Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, Grid, makeStyles, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 200,\n      height: 180,\n      minHeight: 180,\n      marginBottom: 10,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    button: {\n        minWidth: 160,\n        left: 10,\n        bottom: -20\n    },\n  });\n\nexport default function CancelCard(){\n    const classes = useStyles();\n    const history = useHistory();\n    // 모달창\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (e) => {\n        console.log(e.currentTarget.value)\n        setOpen(false);\n    }\n\n    return(\n        <div>\n        <Card className={classes.root} elevation={3}>\n        <CardContent>\n                <Grid container>\n                <Grid item xs={12} sm={9}>\n                    <Dialog\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\n                        <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\n                                아니오\n                            </Button>\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\n                                네\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                    <Grid container>   \n                    <Grid item xs={3} sm={3}>\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\n                    </Grid>\n                    <Grid item xs={9} sm={9}>\n                            <Typography style={{marginBottom: '12px'}}>\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\n                            </Typography>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                2021.04.27 배송\n                            </Typography>\n                    </Grid>\n                    </Grid>     \n                    \n                    \n                </Grid>\n                <Grid item xs={12} sm={3}>\n                \n                <CardActions>\n                    <Button variant=\"outlined\" className={classes.button} onClick={() => history.push('/myPage/review&productId=1')}>리뷰 쓰기</Button> \n                </CardActions>\n                <CardActions>\n                    <Button variant=\"outlined\" className={classes.button}\n                    onClick={handleClickOpen}>\n                        숨기기</Button>\n                </CardActions>\n                    \n                </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        \n        </div>\n    )\n}","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/CopyrightFooter/CopyrightFooter.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/CreditCard/CreditCard.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Paymovement/CreditCash/CreditCash.js",["259","260","261"],"import { Grid, Paper, makeStyles, TextField, ButtonBase, Button, CircularProgress } from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport NumberFormat from 'react-number-format'\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        justifyContent: 'center',\n        alignContent: 'center',\n        textAlign: \"center\"\n    },\n    img: {\n        width: \"200px\",\n        height: \"60px\",\n        padding : theme.spacing(1)\n    },\n    imgDiv : {\n        padding : theme.spacing(1)\n    },\n    accountImg: {\n        width: \"20%\",\n        padding: theme.spacing(3),\n        justifyContent: \"center\",\n        verticalAlign : \"middle\"\n    },\n    divBox : {\n        [theme.breakpoints.up('md')] : {\n            width : \"70%\"\n        },\n        width : \"100%\",\n        padding : theme.spacing(2),\n        justifyContent: \"center\",\n        margin: \"auto\"\n    },\n    boxColor : {\n        backgroundColor : \"#eeeeee\"\n    }\n\n}))\n\nfunction CreditCash(props) {\n\n    const classes = useStyle()\n\n    const [Banks, setBanks] = useState(props.banks)\n\n    const [loading, setloading] = useState(true)\n\n    const [InputAccount, setInputAccount] = useState(false)\n\n    const [BankSelected, setBankSelected] = useState()\n    const [BankNameSelected, setBankNameSelected] = useState()\n\n    const [BankNumber, setBankNumber] = useState()\n\n    const BankHandler = (e) => {\n        e.preventDefault()\n\n        setBankSelected(e.target.src)\n        setBankNameSelected(e.target.alt)\n        setInputAccount(true)\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            setloading(false)\n        }, 1500)\n    }, [])\n\n    const BankComponent = Banks.map((bank, index) => {\n\n        return (\n            <ButtonBase className={classes.imgDiv} style={{width : \"100%\"}} type=\"submit\" onClick={BankHandler}>\n                <Paper style={{width : \"100%\"}} variant=\"outlined\">\n                    <img className={classes.img} src={bank.logo} alt={bank.name} defaultValue={bank.name} />\n                </Paper>\n            </ButtonBase>\n        )\n    })\n\n\n    if(loading) {\n        return (<Grid container className={classes.root} style={{paddingTop : \"4rem\"}}>\n        <CircularProgress />\n        </Grid>)\n    }\n    else if (InputAccount) {\n        return (\n            <Grid container className={classes.root}>\n                <Grid item md={12}>\n                    <p><h2 style={{ display: \"inline\" }}>계좌번호 입력</h2> (최초 1회만)</p>\n\n                </Grid>\n                <Grid container style={{ width: \"80%\" }}>\n                    <Grid item md={12}>\n                        <div className={classes.divBox} >\n                            <form>\n                                <Paper variant=\"outlined\">\n                                    <div >\n                                        <img className={classes.accountImg} src={BankSelected} alt={BankNameSelected} />\n                                        <NumberFormat customInput={TextField} name=\"AccountNumber\" style={{ fontSize: \"1.5rem\", width: \"60%\", textAlign: \"center\", verticalAlign : \"middle\" }} format=\"####-####-####-####\" mask=\"_\" />\n                                        </div>\n                                </Paper>\n                            </form>\n                        </div>\n                        <div  className={classes.divBox}>\n                        <Paper className={classes.boxColor} variant=\"outlined\">\n                                    <div >\n                                        <p><h4 >이름 </h4>\n                                            <h2 >고영빈</h2>\n                                        </p>\n                                    </div>\n                            </Paper>\n                        </div>\n                        {/* 버튼부분 수정 요망 */}\n                        <Button href=\"/loading\" type=\"submit\" variant=\"outlined\" style={{fontSize : \"2rem\"}}>\n                            등록\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n    else {\n        return (\n            <Grid container className={classes.root}>\n                <Grid item md={12}>\n                    <h2>은행 선택</h2>\n                </Grid>\n                <Grid container style={{ width: \"80%\" }}>\n                    <Grid item md={12}>\n                        <div style={{ width: \"450px\", justifyContent: \"center\", margin: \"auto\" }}>\n                            {BankComponent}\n                        </div>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default CreditCash\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/ReviewedCard.js",["262","263","264","265","266"],"import { Button, Card, CardActions, CardContent, ButtonGroup, Grid, makeStyles, Typography } from '@material-ui/core'\nimport { CancelScheduleSend } from '@material-ui/icons';\nimport React, { useState } from 'react'\n\nconst useStyles = makeStyles({\n    root: {\n      marginBottom: 10,\n    },\n  });\n\nexport default function CancelCard(){\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (e) => {\n        console.log(e.currentTarget.value)\n        setOpen(false);\n    }\n\n    return(\n        <Card className={classes.root} elevation={3}>\n        <CardContent>\n                <Grid container spacing={1}>\n                <Grid item xs={12} sm={9}>\n                    <Grid container justify='center'>   \n                    <Grid item xs={4} sm={2}>\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\n                    </Grid>\n                    <Grid item xs={8} sm={10}>\n                            <Typography style={{marginBottom: '12px'}}>\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\n                            </Typography>\n                            <Typography >\n                                리뷰 : 너무 좋아요 !! <br/>\n                                파워디지몬 파워레인저 <br/>\n                                방가방가햄토리\n                            </Typography>\n                    </Grid> \n                    </Grid>     \n                </Grid>\n                <Grid item xs={12} sm={3}>\n                <CardActions >\n                <ButtonGroup\n                    orientation=\"vertical\"\n                    fullWidth\n                >\n                    <Button style={{fontSize:'1rem'}}>수정</Button>\n                    <Button style={{fontSize:'1rem'}}>삭제</Button>\n                </ButtonGroup>\n                </CardActions>\n                </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    )\n}","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyPageComponent/BuyCard.js",["267","268","269","270","271","272","273","274","275","276","277"],"import {  Button, Card, CardActions, CardContent, CardHeader ,ButtonGroup, Grid, IconButton, makeStyles, Typography } from '@material-ui/core'\nimport { DeleteOutlined } from '@material-ui/icons';\nimport axios from 'axios';\nimport React, { useState,useEffect } from 'react'\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\n\n\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      marginBottom: 10,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    button: {\n        minWidth: 160,\n        left: 10,\n        bottom: 5,\n    },\n  });\n\nexport default function BuyCard(props){\n\n\nconsole.log(props)\n    const postId = props.postId\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory()\n\n    const [open, setOpen] = useState(false);\n\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (e) => {\n        console.log(e.currentTarget.value)\n        setOpen(false);\n    }\n\n    return(\n        <div>\n        <Card className={classes.root} elevation={3}>\n            <CardContent>\n                <Grid container>\n                <Grid item xs={12} sm={9}>\n                    <CardHeader\n                        title={\n                            <Typography variant= \"h6\" color=\"#000000\" style={{marginBottom: '12px'}}>\n                                4월 26일 월요일 / 배송완료\n                            </Typography>\n                        }\n                    />\n                    <Grid container>   \n                    <Grid item xs={3} sm={3}>\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\n                    </Grid>\n                    <Grid item xs={9} sm={9}>\n                            <Typography style={{marginBottom: '12px'}}>\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\n                            </Typography>\n                            <Typography className={classes.pos} >\n                                1개, 41500원\n                            </Typography>\n                    </Grid>\n                    </Grid>         \n                </Grid>\n                <Grid item xs={12} sm={3}>\n                <CardActions>\n                <ButtonGroup\n                    orientation=\"vertical\"\n                    fullWidth\n                >\n                    <Button style={{fontSize:'1rem'}}>주문취소</Button>\n                    <Button style={{fontSize:'1rem'}}>배송조회</Button>\n                    <Button style={{fontSize:'1rem'}}>음성리뷰작성</Button>\n                    <Button style={{fontSize:'1rem'}} href='reviewWrite'>일반리뷰작성</Button>\n                    <Button style={{fontSize:'1rem'}}>문의하기</Button>\n                </ButtonGroup>\n                </CardActions>\n                </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        </div>\n    )\n}\n\n\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/_action/types.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/Category/Content.jsx",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/MyPage/MyContent.jsx",["278"],"import React,{useState,useEffect }  from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\n\nconst MyContent = props => {\n\n    const [NextPage, setNextPage] = useState(1);\n\n    //나의 정보 -> 리뷰관리하기, 개인정보수정, 배송지 변경, 카드 및 계좌등록\n    const ButtonHandlerA = (e) => {\n        e.preventDefault()\n        setNextPage(2)\n       \n    }\n\n    const ButtonHandler = (e) => {\n        if(NextPage !== 1){\n            e.preventDefault()\n            setNextPage(1)\n        } else {\n            setNextPage(NextPage)\n        }\n    }\n    \n    if(NextPage === 1){\n        return (\n            <div>\n            <br />\n            <br />\n            <Grid container spacing={2} justify=\"center\">\n                <Grid item xs={10} sm = {3} >\n                <Button \n                fullWidth\n                variant=\"contained\" \n                color=\"primary\" \n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                type=\"submit\"\n                href='order'>\n                나의 쇼핑\n                </Button>\n                </Grid>\n                <Grid item xs={10} sm = {3} >\n                <Button \n                fullWidth \n                variant=\"contained\" \n                color=\"primary\" \n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                type=\"submit\"\n                href='pointPage'\n                >\n                나의 혜택\n                </Button>\n                </Grid>\n                <Grid item xs={10} sm = {3} >\n                <form onSubmit = {ButtonHandlerA}>\n                <Button \n                fullWidth \n                variant=\"contained\" \n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                type=\"submit\"\n                >\n                나의 정보\n                </Button>\n                </form>\n                </Grid>\n            </Grid>\n            </div>\n        )} else if(NextPage === 2) {\n            return (\n                <div>\n                <br />\n                <br />\n                <Grid container spacing={2} justify=\"center\">\n                    <Grid item xs={10} sm = {3} >\n                    <Button \n                    fullWidth\n                    variant=\"contained\" \n                    color=\"primary\" \n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                    href='reviewPage'\n                    >\n                    리뷰관리\n                    </Button>\n                    </Grid>\n                    <Grid item xs={10} sm = {3} >\n                    <Button \n                    fullWidth \n                    variant=\"contained\" \n                    color=\"primary\" \n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                    href='privacy'\n                    >\n                    개인정보수정\n                    </Button>\n                    </Grid>\n                    <Grid item xs={10} sm = {3} >\n                    <Button \n                    fullWidth \n                    variant=\"contained\" \n                    color=\"primary\" \n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                    href='DeliveryCard'\n                    >\n                    배송정보변경\n                    </Button>\n                    </Grid>\n                    <Grid item xs={10} sm = {3} >\n                    <Button \n                    fullWidth \n                    variant=\"contained\" \n                    color=\"primary\" \n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                    href='card'\n                    >\n                    카드/계좌등록\n                    </Button>\n                    </Grid>\n                    <Grid item xs={10} sm = {3} >\n                    <form onSubmit = {ButtonHandler}>\n                    <Button \n                    fullWidth \n                    variant=\"contained\" \n                    color=\"primary\" \n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\n                    type=\"submit\"\n                    >\n                    뒤로\n                    </Button>\n                    </form>\n                    </Grid> \n                </Grid>\n                </div>\n                )} else {\n                    return(\n                    <div>error</div>)}}\n                                            \nexport default MyContent;","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/ShoppingBaskcet/ShoppingCard.jsx",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/Config.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/LandContents/Content.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/LandingPage/LandContents/ShoppingCard.jsx",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostCard.js",[],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/OCRpage/OCRpage.js",["279","280","281","282","283","284","285"],"import React, {useState, useEffect} from 'react'\nimport {Container, Grid} from '@material-ui/core'\nimport axios from 'axios'\nimport { NaverOCR_KEY } from '../../../OCRkey'\n\nconst path = require('path')\n\n\nfunction OCRpage(props) {\n    const { ditectPost } = props\n    const { imageData } = props\n\n\n\n    /*  OCR 이미지 날리는 방식\n{\n    \"images\": [\n      {\n        \"format\": \"jpeg\",\n        \"name\": \"medium\",\n        \"data\": null,\n        \"url\": \"https://thumbnail8.coupangcdn.com/thumbnails/remote/q89/image/retail/images/615119903589168-4faaa5f6-1722-4ee1-bd1b-d210cf45d900.jpg\"\n      }\n    ],\n    \"lang\": \"ko\",\n    \"requestId\": \"string\",\n    \"resultType\": \"string\",\n    \"timestamp\": {{$timestamp}},\n    \"version\": \"V1\"\n} */\n\n    if (!ditectPost) {\n        throw Error(\"Props로 받아야할 PostID가 없습니다\")\n    }\n    if (!imageData) {\n        throw Error(\"props로 받야할 이미지가 없습니다.\")\n    }\n\n    useEffect(() => {\n        axios.get(`/api/post/${ditectPost}`)\n        .then(response => {\n            if (response.data.success) {\n                console.log(response.data)\n                setpostData(response.data.post)\n\n                var variables = {\n                    \"images\": [\n                        {\n                          \"format\": \"jpeg\",\n                          \"name\": \"medium\",\n                          \"data\": null,\n                          \"url\": `http://localhost:5000/${DitectImage}`\n                        }\n                      ],\n                      \"lang\": \"ko\",\n                      \"requestId\": \"string\",\n                      \"resultType\": \"string\",\n                      \"timestamp\": Date.now(),\n                      \"version\" : \"V1\"\n                }\n            }\n            else {\n                alert('postId를 잘못 받아왔습니다.')\n            }\n        })\n    }, [])\n\n    const [postData, setpostData] = useState()\n    const [DitectImage, setDitectImage] = useState(imageData)\n\n\n    return (\n        <Container component=\"body\">\n\n        </Container>\n    )\n}\n\nexport default OCRpage\n","/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/views/PostPage/PostingPage.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"/Users/goyeongbin/Desktop/21년도1학기/목123_컴퓨터공학캡스톤디자인/Sample/client/src/components/OCRkey.js",[],{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","severity":1,"message":"318","line":1,"column":10,"nodeType":"319","messageId":"320","endLine":1,"endColumn":15},{"ruleId":"317","severity":1,"message":"321","line":11,"column":7,"nodeType":"319","messageId":"320","endLine":11,"endColumn":15},{"ruleId":"317","severity":1,"message":"322","line":19,"column":7,"nodeType":"319","messageId":"320","endLine":19,"endColumn":12},{"ruleId":"317","severity":1,"message":"323","line":1,"column":27,"nodeType":"319","messageId":"320","endLine":1,"endColumn":36},{"ruleId":"317","severity":1,"message":"324","line":2,"column":39,"nodeType":"319","messageId":"320","endLine":2,"endColumn":43},{"ruleId":"317","severity":1,"message":"325","line":2,"column":67,"nodeType":"319","messageId":"320","endLine":2,"endColumn":83},{"ruleId":"317","severity":1,"message":"326","line":4,"column":10,"nodeType":"319","messageId":"320","endLine":4,"endColumn":15},{"ruleId":"317","severity":1,"message":"327","line":2,"column":47,"nodeType":"319","messageId":"320","endLine":2,"endColumn":57},{"ruleId":"317","severity":1,"message":"328","line":36,"column":12,"nodeType":"319","messageId":"320","endLine":36,"endColumn":21},{"ruleId":"317","severity":1,"message":"329","line":36,"column":23,"nodeType":"319","messageId":"320","endLine":36,"endColumn":35},{"ruleId":"317","severity":1,"message":"330","line":14,"column":8,"nodeType":"319","messageId":"320","endLine":14,"endColumn":17},{"ruleId":"317","severity":1,"message":"331","line":48,"column":12,"nodeType":"319","messageId":"320","endLine":48,"endColumn":25},{"ruleId":"317","severity":1,"message":"332","line":50,"column":11,"nodeType":"319","messageId":"320","endLine":50,"endColumn":23},{"ruleId":"317","severity":1,"message":"333","line":55,"column":12,"nodeType":"319","messageId":"320","endLine":55,"endColumn":19},{"ruleId":"317","severity":1,"message":"334","line":57,"column":11,"nodeType":"319","messageId":"320","endLine":57,"endColumn":24},{"ruleId":"335","severity":1,"message":"336","line":38,"column":6,"nodeType":"337","endLine":38,"endColumn":8,"suggestions":"338"},{"ruleId":"317","severity":1,"message":"339","line":2,"column":128,"nodeType":"319","messageId":"320","endLine":2,"endColumn":142},{"ruleId":"317","severity":1,"message":"340","line":98,"column":11,"nodeType":"319","messageId":"320","endLine":98,"endColumn":19},{"ruleId":"335","severity":1,"message":"341","line":112,"column":9,"nodeType":"337","endLine":112,"endColumn":11,"suggestions":"342"},{"ruleId":"317","severity":1,"message":"343","line":1,"column":15,"nodeType":"319","messageId":"320","endLine":1,"endColumn":23},{"ruleId":"317","severity":1,"message":"344","line":5,"column":44,"nodeType":"319","messageId":"320","endLine":5,"endColumn":52},{"ruleId":"317","severity":1,"message":"345","line":5,"column":54,"nodeType":"319","messageId":"320","endLine":5,"endColumn":65},{"ruleId":"317","severity":1,"message":"346","line":5,"column":92,"nodeType":"319","messageId":"320","endLine":5,"endColumn":103},{"ruleId":"317","severity":1,"message":"347","line":109,"column":14,"nodeType":"319","messageId":"320","endLine":109,"endColumn":22},{"ruleId":"317","severity":1,"message":"348","line":1,"column":22,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"349","line":1,"column":27,"nodeType":"319","messageId":"320","endLine":1,"endColumn":31},{"ruleId":"317","severity":1,"message":"350","line":42,"column":12,"nodeType":"319","messageId":"320","endLine":42,"endColumn":17},{"ruleId":"317","severity":1,"message":"332","line":44,"column":11,"nodeType":"319","messageId":"320","endLine":44,"endColumn":23},{"ruleId":"317","severity":1,"message":"351","line":1,"column":51,"nodeType":"319","messageId":"320","endLine":1,"endColumn":55},{"ruleId":"317","severity":1,"message":"352","line":64,"column":11,"nodeType":"319","messageId":"320","endLine":64,"endColumn":22},{"ruleId":"317","severity":1,"message":"353","line":1,"column":68,"nodeType":"319","messageId":"320","endLine":1,"endColumn":73},{"ruleId":"317","severity":1,"message":"354","line":31,"column":12,"nodeType":"319","messageId":"320","endLine":31,"endColumn":16},{"ruleId":"317","severity":1,"message":"355","line":33,"column":11,"nodeType":"319","messageId":"320","endLine":33,"endColumn":26},{"ruleId":"317","severity":1,"message":"356","line":37,"column":11,"nodeType":"319","messageId":"320","endLine":37,"endColumn":22},{"ruleId":"357","severity":1,"message":"358","line":74,"column":25,"nodeType":"359","endLine":74,"endColumn":177},{"ruleId":"317","severity":1,"message":"360","line":4,"column":8,"nodeType":"319","messageId":"320","endLine":4,"endColumn":22},{"ruleId":"317","severity":1,"message":"352","line":44,"column":11,"nodeType":"319","messageId":"320","endLine":44,"endColumn":22},{"ruleId":"317","severity":1,"message":"350","line":46,"column":12,"nodeType":"319","messageId":"320","endLine":46,"endColumn":17},{"ruleId":"317","severity":1,"message":"332","line":48,"column":11,"nodeType":"319","messageId":"320","endLine":48,"endColumn":23},{"ruleId":"317","severity":1,"message":"361","line":10,"column":10,"nodeType":"319","messageId":"320","endLine":10,"endColumn":21},{"ruleId":"317","severity":1,"message":"362","line":47,"column":23,"nodeType":"319","messageId":"320","endLine":47,"endColumn":40},{"ruleId":"357","severity":1,"message":"358","line":71,"column":25,"nodeType":"359","endLine":71,"endColumn":177},{"ruleId":"317","severity":1,"message":"363","line":45,"column":19,"nodeType":"319","messageId":"320","endLine":45,"endColumn":27},{"ruleId":"317","severity":1,"message":"364","line":54,"column":12,"nodeType":"319","messageId":"320","endLine":54,"endColumn":22},{"ruleId":"317","severity":1,"message":"365","line":54,"column":24,"nodeType":"319","messageId":"320","endLine":54,"endColumn":37},{"ruleId":"317","severity":1,"message":"366","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":28},{"ruleId":"317","severity":1,"message":"354","line":13,"column":12,"nodeType":"319","messageId":"320","endLine":13,"endColumn":16},{"ruleId":"317","severity":1,"message":"355","line":15,"column":11,"nodeType":"319","messageId":"320","endLine":15,"endColumn":26},{"ruleId":"317","severity":1,"message":"356","line":19,"column":11,"nodeType":"319","messageId":"320","endLine":19,"endColumn":22},{"ruleId":"357","severity":1,"message":"358","line":31,"column":25,"nodeType":"359","endLine":31,"endColumn":177},{"ruleId":"317","severity":1,"message":"367","line":1,"column":82,"nodeType":"319","messageId":"320","endLine":1,"endColumn":92},{"ruleId":"317","severity":1,"message":"368","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":24},{"ruleId":"317","severity":1,"message":"369","line":3,"column":8,"nodeType":"319","messageId":"320","endLine":3,"endColumn":13},{"ruleId":"317","severity":1,"message":"323","line":4,"column":26,"nodeType":"319","messageId":"320","endLine":4,"endColumn":35},{"ruleId":"317","severity":1,"message":"370","line":29,"column":11,"nodeType":"319","messageId":"320","endLine":29,"endColumn":17},{"ruleId":"317","severity":1,"message":"340","line":32,"column":11,"nodeType":"319","messageId":"320","endLine":32,"endColumn":19},{"ruleId":"317","severity":1,"message":"371","line":33,"column":11,"nodeType":"319","messageId":"320","endLine":33,"endColumn":18},{"ruleId":"317","severity":1,"message":"354","line":35,"column":12,"nodeType":"319","messageId":"320","endLine":35,"endColumn":16},{"ruleId":"317","severity":1,"message":"355","line":38,"column":11,"nodeType":"319","messageId":"320","endLine":38,"endColumn":26},{"ruleId":"317","severity":1,"message":"356","line":42,"column":11,"nodeType":"319","messageId":"320","endLine":42,"endColumn":22},{"ruleId":"357","severity":1,"message":"358","line":62,"column":25,"nodeType":"359","endLine":62,"endColumn":177},{"ruleId":"317","severity":1,"message":"323","line":1,"column":24,"nodeType":"319","messageId":"320","endLine":1,"endColumn":33},{"ruleId":"317","severity":1,"message":"351","line":2,"column":20,"nodeType":"319","messageId":"320","endLine":2,"endColumn":24},{"ruleId":"317","severity":1,"message":"372","line":4,"column":10,"nodeType":"319","messageId":"320","endLine":4,"endColumn":22},{"ruleId":"317","severity":1,"message":"373","line":6,"column":7,"nodeType":"319","messageId":"320","endLine":6,"endColumn":11},{"ruleId":"317","severity":1,"message":"374","line":46,"column":21,"nodeType":"319","messageId":"320","endLine":46,"endColumn":30},{"ruleId":"335","severity":1,"message":"375","line":66,"column":8,"nodeType":"337","endLine":66,"endColumn":10,"suggestions":"376"},{"ruleId":"317","severity":1,"message":"377","line":68,"column":12,"nodeType":"319","messageId":"320","endLine":68,"endColumn":20},{"ruleId":"317","severity":1,"message":"378","line":69,"column":25,"nodeType":"319","messageId":"320","endLine":69,"endColumn":39},{"ruleId":"317","severity":1,"message":"323","line":1,"column":27,"nodeType":"319","messageId":"320","endLine":1,"endColumn":36},{"ruleId":"317","severity":1,"message":"379","line":5,"column":10,"nodeType":"319","messageId":"320","endLine":5,"endColumn":15},{"ruleId":"317","severity":1,"message":"380","line":6,"column":9,"nodeType":"319","messageId":"320","endLine":6,"endColumn":20},{"ruleId":"317","severity":1,"message":"381","line":6,"column":22,"nodeType":"319","messageId":"320","endLine":6,"endColumn":29},{"ruleId":"317","severity":1,"message":"382","line":7,"column":9,"nodeType":"319","messageId":"320","endLine":7,"endColumn":18},{"ruleId":"317","severity":1,"message":"383","line":72,"column":12,"nodeType":"319","messageId":"320","endLine":72,"endColumn":20},{"ruleId":"317","severity":1,"message":"384","line":72,"column":22,"nodeType":"319","messageId":"320","endLine":72,"endColumn":33},{"ruleId":"317","severity":1,"message":"385","line":73,"column":12,"nodeType":"319","messageId":"320","endLine":73,"endColumn":19},{"ruleId":"317","severity":1,"message":"386","line":74,"column":20,"nodeType":"319","messageId":"320","endLine":74,"endColumn":29},{"ruleId":"317","severity":1,"message":"387","line":75,"column":12,"nodeType":"319","messageId":"320","endLine":75,"endColumn":21},{"ruleId":"317","severity":1,"message":"388","line":75,"column":23,"nodeType":"319","messageId":"320","endLine":75,"endColumn":35},{"ruleId":"317","severity":1,"message":"389","line":76,"column":12,"nodeType":"319","messageId":"320","endLine":76,"endColumn":19},{"ruleId":"317","severity":1,"message":"390","line":76,"column":21,"nodeType":"319","messageId":"320","endLine":76,"endColumn":31},{"ruleId":"317","severity":1,"message":"391","line":77,"column":12,"nodeType":"319","messageId":"320","endLine":77,"endColumn":18},{"ruleId":"317","severity":1,"message":"392","line":77,"column":20,"nodeType":"319","messageId":"320","endLine":77,"endColumn":29},{"ruleId":"317","severity":1,"message":"393","line":78,"column":12,"nodeType":"319","messageId":"320","endLine":78,"endColumn":18},{"ruleId":"317","severity":1,"message":"394","line":78,"column":20,"nodeType":"319","messageId":"320","endLine":78,"endColumn":29},{"ruleId":"317","severity":1,"message":"395","line":79,"column":12,"nodeType":"319","messageId":"320","endLine":79,"endColumn":20},{"ruleId":"317","severity":1,"message":"396","line":79,"column":22,"nodeType":"319","messageId":"320","endLine":79,"endColumn":33},{"ruleId":"317","severity":1,"message":"397","line":80,"column":12,"nodeType":"319","messageId":"320","endLine":80,"endColumn":17},{"ruleId":"317","severity":1,"message":"398","line":80,"column":19,"nodeType":"319","messageId":"320","endLine":80,"endColumn":27},{"ruleId":"317","severity":1,"message":"399","line":81,"column":12,"nodeType":"319","messageId":"320","endLine":81,"endColumn":17},{"ruleId":"317","severity":1,"message":"400","line":81,"column":19,"nodeType":"319","messageId":"320","endLine":81,"endColumn":27},{"ruleId":"317","severity":1,"message":"401","line":82,"column":12,"nodeType":"319","messageId":"320","endLine":82,"endColumn":16},{"ruleId":"317","severity":1,"message":"402","line":82,"column":18,"nodeType":"319","messageId":"320","endLine":82,"endColumn":25},{"ruleId":"317","severity":1,"message":"403","line":115,"column":11,"nodeType":"319","messageId":"320","endLine":115,"endColumn":19},{"ruleId":"317","severity":1,"message":"374","line":118,"column":13,"nodeType":"319","messageId":"320","endLine":118,"endColumn":22},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'newsPost' is assigned a value but never used.","'theme' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'CircularProgress' is defined but never used.","'Check' is defined but never used.","'Typography' is defined but never used.","'CreditNum' is assigned a value but never used.","'setCreditNum' is assigned a value but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleChange2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["406"],"'FormHelperText' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["407"],"'useState' is defined but never used.","'Exposure' is defined but never used.","'Brightness6' is defined but never used.","'ZoomInSharp' is defined but never used.","'zomReset' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'value' is assigned a value but never used.","'Grid' is defined but never used.","'cancelCount' is assigned a value but never used.","'Input' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReviewableCard' is defined but never used.","'useLocation' is defined but never used.","'changeActiveTopic' is assigned a value but never used.","'setBanks' is assigned a value but never used.","'BankNumber' is assigned a value but never used.","'setBankNumber' is assigned a value but never used.","'CancelScheduleSend' is defined but never used.","'IconButton' is defined but never used.","'DeleteOutlined' is defined but never used.","'axios' is defined but never used.","'postId' is assigned a value but never used.","'history' is assigned a value but never used.","'NaverOCR_KEY' is defined but never used.","'path' is assigned a value but never used.","'variables' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'DitectImage' and 'ditectPost'. Either include them or remove the dependency array.",["408"],"'postData' is assigned a value but never used.","'setDitectImage' is assigned a value but never used.","'Title' is defined but never used.","'useDispatch' is defined but never used.","'connect' is defined but never used.","'USER_AUTH' is defined but never used.","'Filename' is assigned a value but never used.","'setFilename' is assigned a value but never used.","'Content' is assigned a value but never used.","'setAuthor' is assigned a value but never used.","'Pcategory' is assigned a value but never used.","'setPcategory' is assigned a value but never used.","'Purpose' is assigned a value but never used.","'setPurpose' is assigned a value but never used.","'Pcolor' is assigned a value but never used.","'setPcolor' is assigned a value but never used.","'Psales' is assigned a value but never used.","'setPsales' is assigned a value but never used.","'Pcompany' is assigned a value but never used.","'setPcompany' is assigned a value but never used.","'Price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'Stock' is assigned a value but never used.","'setStock' is assigned a value but never used.","'Size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},"Update the dependencies array to be: [category]",{"range":"415","text":"416"},"Update the dependencies array to be: [postId]",{"range":"417","text":"418"},"Update the dependencies array to be: [DitectImage, ditectPost]",{"range":"419","text":"420"},[1041,1043],"[category]",[3035,3037],"[postId]",[1780,1782],"[DitectImage, ditectPost]"]