[{"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\index.js":"1","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\serviceWorker.js":"2","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\App.js":"3","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_reducer\\index.js":"4","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\hoc\\auth.js":"5","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"6","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\Navbar\\Navbar.js":"7","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"8","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\Navbar\\Sidebar\\Sidebar.js":"9","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"10","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_reducer\\adminPost_reducer.js":"11","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_reducer\\user_reducer.js":"12","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\Navbar\\Sidebar\\RightMenu.js":"13","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_action\\adminPost_action.js":"14","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_action\\user_actions.js":"15","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\LandContents\\NewsContent.js":"16","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js":"17","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js":"18","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_action\\types.js":"19","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\Config.js":"20","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\MainPage.js":"21"},{"size":1368,"mtime":1617856685233,"results":"22","hashOfConfig":"23"},{"size":4951,"mtime":1617156496261,"results":"24","hashOfConfig":"23"},{"size":1614,"mtime":1619427258154,"results":"25","hashOfConfig":"23"},{"size":213,"mtime":1617156496619,"results":"26","hashOfConfig":"23"},{"size":1542,"mtime":1617156497574,"results":"27","hashOfConfig":"23"},{"size":2381,"mtime":1617156496939,"results":"28","hashOfConfig":"23"},{"size":1190,"mtime":1617156497366,"results":"29","hashOfConfig":"23"},{"size":30259,"mtime":1619423143537,"results":"30","hashOfConfig":"23"},{"size":3773,"mtime":1617156497465,"results":"31","hashOfConfig":"23"},{"size":7765,"mtime":1617704400688,"results":"32","hashOfConfig":"23"},{"size":438,"mtime":1617156496577,"results":"33","hashOfConfig":"23"},{"size":596,"mtime":1617156496659,"results":"34","hashOfConfig":"23"},{"size":1263,"mtime":1617156497422,"results":"35","hashOfConfig":"23"},{"size":648,"mtime":1617156496431,"results":"36","hashOfConfig":"23"},{"size":1091,"mtime":1617156496522,"results":"37","hashOfConfig":"23"},{"size":7579,"mtime":1617156497051,"results":"38","hashOfConfig":"23"},{"size":1109,"mtime":1617156497090,"results":"39","hashOfConfig":"23"},{"size":459,"mtime":1617156496886,"results":"40","hashOfConfig":"23"},{"size":260,"mtime":1617156496478,"results":"41","hashOfConfig":"23"},{"size":93,"mtime":1617156496810,"results":"42","hashOfConfig":"23"},{"size":9944,"mtime":1619427193740,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"10xszgw",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\index.js",[],["94","95"],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\serviceWorker.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\App.js",["96","97"],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_reducer\\index.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\hoc\\auth.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["98","99","100","101","102"],"import { Container, CssBaseline, Grid, makeStyles, Toolbar, Typography } from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport NewsContent from './LandContents/NewsContent'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { searchAdminPost } from \"../../../_action/adminPost_action\"\nimport SubContent from './LandContents/SubContent'\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(12)\n    },\n\n    toolbar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    }\n\n}))\n\n\nconst newsPost = {\n    title: \"Title Sample\",\n    description: \"description Sample, which codes is best code? can you choice that?\",\n    linkText: \"LinkText Sample\",\n    linkURL: \"http://localhost:3000/\",\n    image: \"https://source.unsplash.com/random\"\n}\n\nfunction LandingPage() {\n\n    const classes = useStyles();\n    return (\n        <Container className={classes.paper} component='main' maxWidth='lg'>\n            <CssBaseline />\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography\n                            variant=\"h5\"\n                            component=\"h2\"\n\n                        >\n                            Hot Item\n                        </Typography>\n                    </Toolbar>\n                    <br/>\n                    <NewsContent post={newsPost} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <SubContent />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default LandingPage\n","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\Navbar\\Navbar.js",["103"],"import React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {makeStyles} from '@material-ui/core/styles'\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core'\nimport Sidebar from './Sidebar/Sidebar'\nimport RightMenu from './Sidebar/RightMenu'\n\n\nconst useStyle = makeStyles((theme) => ({\n    root : {\n        flexGrow : 1\n    },\n    menuButton : {\n        marginRight : theme.spacing(2),\n    },\n    title : {\n        flexGrow : 1\n    }\n}))\n\nfunction Navbar() {\n    const dispatch = useDispatch();\n    const classes = useStyle();\n    \n    \n\n    return (\n        <div className={classes.root}>\n        <AppBar color=\"inherit\" position=\"fixed\" >\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <Sidebar name=\"left\"/>\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    <a style={{textDecoration : 'none', color : '#000000'}} href=\"/\">Home</a>\n                </Typography>\n                <RightMenu />\n            </Toolbar>\n        </AppBar>\n        </div>\n    )\n}\n\nexport default Navbar\n\n\n","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["104","105","106","107","108"],"import { Container, CssBaseline, Grid, makeStyles, Typography, Button, Box, Link } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport React, { useState } from 'react'\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\nimport { useDispatch } from 'react-redux'\nimport * as Yup from 'yup'\nimport { useFormik } from 'formik'\nimport { registerUser } from '../../../_action/user_actions'\nimport HearingIcon from '@material-ui/icons/Hearing';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop : theme.spacing(8),\n        display : 'flex',\n        flexDirection : 'column',\n        alignItems : 'center'\n    },\n    avatar: {\n        marginTop : theme.spacing(1),\n        backgroundColor : theme.palette.primary.dark\n    },\n    form : {\n        marginTop : theme.spacing(1),\n        width : \"100%\"\n    },\n    onSubmit : {\n        margin : theme.spacing(3, 0, 2)\n    }\n}))\n\nexport default function RegisterPage(props) {\n    const classes = useStyles()\n\n    const dispatch = useDispatch();\n    const [FormErrorMessage, setFormErrorMessage] = useState(\"\")\n\n\n    // 라디오\n    const [selectedValue, setSelectedValue] = React.useState(\"10대\");\n\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n      \n    // 체크박스 \n    const [checked, setChecked] = React.useState(true);\n\n    const handleChange2 = (event) => {\n          setChecked(event.target.checked);\n    };\n\n    // 페이지 넘어가는 부분\n    const [NextPage, setNextPage] = useState(1);\n\n    const ButtonHandler = (e) => {\n        if(NextPage !== 4){\n            e.preventDefault()\n            setNextPage(NextPage+1)\n        } else {\n            setNextPage(NextPage)\n            // 페이지가 4일 경우(===메인으로 돌아가기, 쇼핑창)\n        }\n    }\n\n    const ButtonHandler2 = (e) => {\n        if(NextPage !== 1){\n            e.preventDefault()\n            setNextPage(NextPage-1)\n        } else {\n            setNextPage(NextPage)\n            // 페이지 1일 경우 뒤로(===메인으로돌아가기, 로그인창) \n        }\n    }\n\n    const validationSchema = Yup.object({\n        name : Yup.string().required(\"이름을 입력해주세요.\"),\n        birth : Yup.string().min(8, \"생년월일은 8자로 입력해주세요.\").required(\"생년월일이 필요합니다.\"),\n        id : Yup.string().required('아이디가 필요합니다.'),\n        password : Yup.string().min(4, \"Password는 최소 4자 이상이여야 합니다.\").required('password가 필요합니다.'),\n        confirmPassword : Yup.string().oneOf([Yup.ref('password'), null], 'Password는 서로 일치해야합니다.').required('Password 확인란에 Password를 입력해주세요.')   \n    })\n\n    const formik = useFormik({\n\n        initialValues : {\n            name : \"\",\n            birth : \"\",\n            id : \"\",\n            password : \"\",\n            confirmPassword : \"\"\n        },\n        validationSchema : validationSchema,\n        onSubmit : ((values, {setSubmitting}) => {\n            setTimeout(() => {\n                let dataToSubmit = {\n                    name : values.name,\n                    birth : values.birth,\n                    id : values.id,\n                    password : values.password,\n                }\n                \n                dispatch(registerUser(dataToSubmit))\n                .then(response => {\n                    if(response.payload.success) {\n                        props.history.push('/')\n                    }\n                    else {\n                        setFormErrorMessage(\"잘못된 형식입니다.\")\n                    }\n                }).catch((err) => {\n                    setFormErrorMessage(\"잘못된 형식입니다.\")\n                    setTimeout(() => {\n                        setFormErrorMessage('')\n                    }, 3000);\n                })\n                setSubmitting(false)\n            }, 500)\n        })\n    })\n\n    if(NextPage === 1) {\n        return (\n            <Container component='main' maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n            <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}>\n                    <Grid item xs={12}> \n                    <fieldset>    \n                    <p>\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"name\"\n                                name=\"name\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"이름\"\n                                autoFocus\n                                value={formik.values.name}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.name && Boolean(formik.errors.name)}\n                                helperText= {formik.touched.name && formik.errors.name}\n                                alt=\"이름입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} >\n                            <TextField\n                                autoComplete=\"birth\"\n                                name=\"birth\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"birth\"\n                                label=\"생년월일(8자리)\"\n                                type='birth'\n                                value={formik.values.birth}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.birth && Boolean(formik.errors.birth)}\n                                helperText = {formik.touched.birth && formik.errors.birth}\n                                alt=\"생년월일8자리입력창\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                이미 가입하셨나요? 로그인하기\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {FormErrorMessage && (\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\n\n                    )}\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        메인으로돌아가기\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler}\n                    >\n                        다음\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n        </Container>\n        )} else if(NextPage === 2){\n            return (\n            <Container component='main' maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n            <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}>\n                    <Grid item xs={12} >\n                    <fieldset>    \n                    <p>\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"id\"\n                                name=\"id\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"id\"\n                                label=\"ID\"\n                                autoFocus\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\n                                helperText= {formik.touched.email && formik.errors.email}\n                                alt=\"아이디입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} >\n                            <TextField\n                                autoComplete=\"current-password\"\n                                name=\"password\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"password\"\n                                label=\"Password\"\n                                type='password'\n                                value={formik.values.password}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\n                                helperText = {formik.touched.password && formik.errors.password}\n                                alt=\"비밀번호입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField \n                                autoComplete=\"confirm-password\"\n                                name=\"confirmPassword\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"confirmPassword\"\n                                label=\"Confirm Password\"\n                                type='password'\n                                value={formik.values.confirmPassword}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n                                helperText = {formik.touched.confirmPassword && formik.errors.confirmPassword}\n                                alt=\"비밀번호확인입력창\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                이미 가입하셨나요? 로그인하기\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {FormErrorMessage && (\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\n\n                    )}\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        뒤로\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler}\n                    >\n                        다음\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n        </Container>\n        )} else if(NextPage === 3){\n            return(\n        <Container component='main' maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n            <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={12} >\n                    <fieldset>    \n                    <p>\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                        <Grid item xs={9} sm={10}>\n                            <TextField\n                                autoComplete=\"address\"\n                                name=\"address\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"address\"\n                                label=\"Address\"\n                                autoFocus\n                                value={formik.values.email}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\n                                helperText= {formik.touched.email && formik.errors.email}\n                                alt=\"주소입력창\"\n                            /> </Grid>\n                            <Grid item xs={2} sm={2}>\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>검색</Button>\n                        </Grid>\n                        <Grid item xs={5} sm={6} >\n                            <TextField\n                                autoComplete=\"ph\"\n                                name=\"ph\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"ph\"\n                                label=\"PH\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\n                                helperText = {formik.touched.password && formik.errors.password}\n                                alt=\"전화번호입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={4} sm={4} >\n                            <TextField\n                                autoComplete=\"CertifiNumber\"\n                                name=\"CertifiNumber\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"CertifiNumber\"\n                                label=\"인증번호\"\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\n                                helperText = {formik.touched.password && formik.errors.password}\n                                alt=\"인증번호입력창\"\n                            />\n                        </Grid>\n                        <Grid item xs={2} sm={2}>\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>인증</Button>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                이미 가입하셨나요? 로그인하기\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    {FormErrorMessage && (\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\n\n                    )}\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        뒤로\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler}\n                    >\n                        다음\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n        </Container>\n            )} else if (NextPage === 4) {\n            return(\n                <Container component='main' maxWidth=\"xs\" >\n                <CssBaseline />\n                <div className={classes.paper}>\n                <br />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Vision Market <HearingIcon fontSize=\"large\"/>\n                </Typography>\n                <br />\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={12} >\n                    <fieldset>    \n                    <p style={{fontSize: '1.0rem'}} >\n                    당신의 취향과 프로필을 선택해주세요.<br />\n                    스타일의 경우 중복으로 선택할 수 있습니다.<br />\n                    </p>\n                    </fieldset>\n                    </Grid>\n                    <Grid item xs={12} >\n                    <fieldset>\n                        <br />\n                    <div style={{fontSize: '1.0rem'}}>[ 나이 ]</div>\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\n                    <FormControlLabel\n                    value=\"10대\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>10대</p>}\n                    labelPlacement=\"10대\"\n                    alt=\"10대\"\n                    />\n                    <FormControlLabel\n                    value=\"20대\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>20대</p>}\n                    labelPlacement=\"20대\"\n                    alt=\"20대\"\n                    />\n                    <FormControlLabel\n                    value=\"30대\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>30대</p>}\n                    labelPlacement=\"30대\"\n                    alt=\"30대\"\n                    />\n                    <FormControlLabel\n                    value=\"40대이상\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>40대이상</p>}\n                    labelPlacement=\"40대이상\"\n                    alt=\"40대이상\"\n                    />\n                    </RadioGroup>\n                    <hr />\n                    <br />\n                    <div style={{fontSize: '1.0rem'}}>[ 성별 ]</div>\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\n                    <FormControlLabel\n                    value=\"남자\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>남자</p>}\n                    labelPlacement=\"남자\"\n                    alt=\"남자\"\n                    />\n                    <FormControlLabel\n                    value=\"여자\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>여자</p>}\n                    labelPlacement=\"여자\"\n                    alt=\"여자\"\n                    />\n                    </RadioGroup>\n                    <hr />\n                    <br />                    \n                    <div style={{fontSize: '1.0rem'}}>[ 키 ]</div>\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\n                    <FormControlLabel\n                    value=\"140\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>150cm 이하</p>}\n                    labelPlacement=\"140\"\n                    alt=\"150센티미터이하\"\n                    />\n                    <FormControlLabel\n                    value=\"150\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>150cm</p>}\n                    labelPlacement=\"150\"\n                    alt=\"150센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"160\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>160cm</p>}\n                    labelPlacement=\"160\"\n                    alt=\"160센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"170\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>170cm</p>}\n                    labelPlacement=\"170\"\n                    alt=\"170센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"180\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>180cm</p>}\n                    labelPlacement=\"180\"\n                    alt=\"180센티미터\"\n                    />\n                    <FormControlLabel\n                    value=\"190\"\n                    control={<Radio color=\"primary\" />}\n                    label={<p style={{fontSize : \"15px\"}}>190cm 이상</p>}\n                    labelPlacement=\"190\"\n                    alt=\"190센티미터이상\"\n                    />\n                    </RadioGroup>\n                    <hr />\n                    <br />\n                    <div style={{fontSize: '1.0rem'}}>[ 스타일 ]</div>\n                    <Checkbox \n                    color=\"primary\" alt=\"심플\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />심플\n                    <Checkbox \n                    color=\"primary\" alt=\"캐주얼\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />캐주얼\n                    <Checkbox \n                    color=\"primary\" alt=\"시크\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />시크\n                    <Checkbox \n                    color=\"primary\" alt=\"유니크\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />유니크\n                    <br />\n                    <Checkbox \n                    color=\"primary\" alt=\"오피스\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />오피스\n                    <Checkbox \n                    color=\"primary\" alt=\"스트릿\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    />스트릿\n                    <br />\n                    </fieldset>\n                    </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler2}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler2}\n                    >\n                        뒤로\n                    </Button>\n                    </form>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <form onSubmit={ButtonHandler}>\n                    <Button\n                        className={classes.onSubmit}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={formik.isSubmitting}\n                        onSubmit={ButtonHandler}\n                    >\n                        가입완료\n                    </Button>\n                    </form>\n                    </Grid>\n                    </Grid>\n                {/* </form> */}\n            </div>\n            <Box mt={5}>\n                <CopyrightFooter />\n            </Box>\n            </Container>\n            )} else {\n            return(\n                <div> hi </div>\n                // 자동 로그인 후 메인 페이지로 이동\n            )\n        }\n}\n","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\Navbar\\Sidebar\\Sidebar.js",["109","110"],"import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n// material UI 에서 가장 중요한 요소인 Marterial UI의 CSS 값을 부여하기 위한 MakeStyles\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\n// 보통 rcfe 단축어를 통해서 함수를 만들어내면 export default는 맨 아래에 새롭게 써주나,\n// 쉽게 사용하면 바로 export를 해주면서 함수를 선언하는 방법을 쓸 수 있다.\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  const [state, setState] = useState({\n      top : false,\n      left : false,\n      right : false,\n      bottom : false\n  })\n  // 마우스를 쓰지 못하는 환경에서 선택 할 수 있도록 tap, shift키를 이용해서 메뉴 아이콘 선택 가능\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  // list 상수는 입력된 값에 따라서 메뉴를 상단, 하단, 좌 우 에 둘지 결정하게 만들어준다.\n  // 또한 결정된 메뉴의 위치에 따라서 해당 메뉴를 띄워주는 역할을 한다.\n  const list = (anchor) => (\n    // clsx는 값과 상황에 따라서 값을 선택하게 만들어주는 모듈이다.\n    // 특히나 className 을 임의로 바꾸기 어려운 react에서 유용하게 사용된다.\n\n    // classes라는 makeStyles를 통해 만든 style 중에서 보통의 경우에는 list Style을 가지게 하고\n    // 만약 anchor, 즉, 메뉴의 위치가 'top' 혹은 'bottom' 일 경우에는 fullList 값을 가지게 한다.\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      {/* List라는 Material-UI에 존재하는 태그를 사용했다.\n          그리고 map을 사용해서 Inbox, Starred 등등의 내부 값을 하나씩 꺼내서 ListItem을 반복해서 사용하게 만들어줬다.\n      */}\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      {/* 구분선 */}\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment key={props.name}>\n          <MenuIcon onClick={toggleDrawer(props.name, true)}/>\n          <Drawer anchor={props.name} open={state[props.name]} onClose={toggleDrawer(props.name, false)}>\n            {list(props.name)}\n          </Drawer>\n        </React.Fragment>\n    </div>\n  );\n}\n","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_reducer\\adminPost_reducer.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_reducer\\user_reducer.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\Navbar\\Sidebar\\RightMenu.js",["111"],"import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport axios from 'axios'\nimport { logoutUser } from '../../../../_action/user_actions'\nimport { Button, makeStyles } from '@material-ui/core'\nimport {withRouter} from 'react-router-dom'\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n}))\n\nfunction RightMenu(props) {\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.user)\n\n    const userHandler = () =>\n    {\n        dispatch(logoutUser())\n        .then(response => {\n            if (response.payload.success) {\n                props.history.push('/login')\n            }\n            else {\n                alert(\"logout fail\")\n            }\n        })\n    }\n\n\n    if (user.userData && !user.userData.isAuth){\n    return (\n        <div className={classes.root}>\n            <Button className={classes.handleButton} href=\"/register\" color=\"inherit\">Sign Up</Button>\n            <Button href=\"/login\" color=\"inherit\">Login</Button>\n        </div>\n    )}\n    else {\n        return (\n        <div className={classes.root}>\n            <Button  onClick={userHandler} color=\"inherit\" >Logout</Button>\n        </div>\n        )\n    }\n}\n\nexport default withRouter(RightMenu)\n","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_action\\adminPost_action.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_action\\user_actions.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\LandContents\\NewsContent.js",["112","113","114","115","116","117","118"],"import { Paper, makeStyles, Grid, Typography, Link, Button, Input, TextField } from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Settings, DoneAll } from '@material-ui/icons'\nimport Axios from 'axios'\nimport { ADMIN_POST_SERVER, USER_SERVER } from '../../../Config'\n\nimport { registerAdminPost, searchAdminPost } from '../../../../_action/adminPost_action'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n    newsCard: {\n        position: 'relative',\n        backgroundColor: theme.palette.grey[300],\n        color: theme.palette.common.white,\n        backgroundImage: \"url('https://source.unsplash.com/random')\",\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center'\n    },\n    overlay: {\n        position: \"absolute\",\n        bottom: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n        backgroundColor: \"rgba(0,0,.3)\"\n    },\n    mainNewsContent: {\n        position: \"relative\",\n        padding: theme.spacing(3),\n        [theme.breakpoints.up('md')]: {\n            padding: theme.spacing(6),\n            paddingRight: 0\n        }\n    },\n    authComponent: {\n        display: 'flex',\n        // 버튼 수평 오른쪽 정렬\n        justifyContent: \"flex-end\",\n        // 이모티콘 가운데 정렬\n        justifyItems: 'center',\n        // 수직 아래 정렬\n        alignItems: \"flex-end\"\n    },\n    textColor: {\n        color: 'white',\n        \n    }\n}))\n\nconst sampleText = {\n    title: \"Title Sample\",\n    description: \"description Sample, which codes is best code? can you choice that?\",\n    linkText: \"LinkText Sample\",\n    linkURL: \"http://localhost:3000/\",\n    image: \"https://source.unsplash.com/random\"\n}\n\nfunction NewsContent() {\n\n    \n    // useSelector를 이용해 state에 저장된 user에 대한 정보를 가져옴\n    const user = useSelector(state => state.user)\n    const adminPost = useSelector(state => state.adminPost)\n\n\n    const Auth = () => {\n        if(user.userData) {\n            return user.userData.isAuth\n        }\n        else {\n            return false\n        }\n    }\n\n    const [post, setpost] = useState({})\n    const [isEmpty, setisEmpty] = useState(true)\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        Axios.post(`${ADMIN_POST_SERVER}/find/correct/page`, {pagename : \"home_main\"})\n        .then(response => {\n            if(response.data.success) {\n                console.log(response.data.posts[0])\n                setpost(response.data.posts[0])\n            }\n            else {\n                setpost(sampleText)\n            }\n        })\n    }, [1])\n    \n    console.log(post.title)\n\n    const [Title, setTitle] = useState(post.title)\n    const [Description, setDescription] = useState(post.description)\n    const [LinkText, setLinkText] = useState(post.linkText)\n    const [LinkURL, setLinkURL] = useState(post.linkURL)\n\n    const [UseModify, setUseModify] = useState(false)\n\n    const ModifyHandler = (e) => {\n        setUseModify(true)\n    }\n\n\n    const LinkContent = (isAuth) => {\n        if (isAuth) {\n            return (\n                <Grid item md={6} className={classes.authComponent}>\n                    <Button color=\"inherit\" onClick={ModifyHandler}>\n                        <Settings />\n                    </Button>\n                </Grid>\n            )\n        }\n    }\n\n    const HandleSubmit = (e) => {\n        e.preventDefault()\n\n        dispatch(registerAdminPost({title : Title, description : Description, linkText : LinkText, linkURL : LinkURL, category : \"home_main_feature\"}))\n        .then(response => {\n            if (response.payload.success) {\n                console.log(response.payload.postId)\n            }\n            else {\n                alert(response.payload.err)\n            }\n        })\n\n        setUseModify(false)\n    }\n\n    const HandleTitleChange = (e) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    const HandleDescriptionChange = (e) => {\n        setDescription(e.currentTarget.value)\n    }\n\n    const HandleLinkTextChange = (e) => {\n        setLinkText(e.currentTarget.value)\n    }\n\n    const HandleLinkURLChange = (e) => {\n        setLinkURL(e.currentTarget.value)\n    }\n\n\n\n    const IsModified = (UseModify) => {\n        if (!UseModify) {\n            return (\n                <Grid container>\n                    <Grid item md={6}>\n                        <div className={classes.mainNewsContent}>\n                            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                                {post.title}\n                            </Typography>\n                            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n                                {post.description}\n                            </Typography>\n                            <Link variant=\"subtitle1\" href={post.linkURL}>\n                                {post.linkText}\n                            </Link>\n                            <br />\n                        </div>\n                    </Grid>\n                    {LinkContent(Auth())}\n                </Grid>\n            )\n        }\n        else {\n            return (\n\n                <form onSubmit={HandleSubmit}>\n                    <Grid container>\n                        <Grid item md={6}>\n                            <div className={classes.mainNewsContent} >\n                                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n                                    <TextField color=\"secondary\" label=\"Title\" value={Title} onChange={HandleTitleChange} inputProps={{ className: classes.textColor }} variant=\"filled\" />\n                                </Typography>\n                                <Typography component=\"h3\" gutterBottom>\n                                    <TextField color='secondary' label=\"Description\" value={Description} variant=\"filled\" inputProps={{ className: classes.textColor }} onChange={HandleDescriptionChange} />\n                                </Typography>\n                                <Typography component=\"h3\" gutterBottom>\n                                    <TextField color=\"secondary\" label=\"Link Text\" value={LinkText} variant=\"filled\" inputProps={{ className: classes.textColor }} onChange={HandleLinkTextChange} />\n                                </Typography>\n                                <Typography gutterBottom component=\"h3\">\n                                    <TextField color=\"secondary\" label=\"Link URL\" value={LinkURL} variant=\"filled\" inputProps={{ className: classes.textColor }} onChange={HandleLinkURLChange} />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={6} className={classes.authComponent}>\n                            <Button color=\"secondary\" type=\"submit\">\n                                <DoneAll />\n                            </Button>\n                        </Grid>\n\n                    </Grid>\n                </form>\n            )\n        }\n    }\n\n\n    const classes = useStyles();\n    return (\n        <Paper className={classes.newsCard} style={{ backgroundImage: `url(\"https://source.unsplash.com/random\")` }}>\n            {<img style={{ display: 'none' }} src=\"https://source.unsplash.com/random\" alt={post.imageText} />}\n            {IsModified(UseModify)}\n        </Paper>\n    )\n}\n\nexport default NewsContent\n\nNewsContent.propTypes = {\n    post: PropTypes.object\n}","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js",["119","120","121"],"import React, {useState, useEffect} from 'react'\nimport {Card, Grid, makeStyles, Paper} from '@material-ui/core'\n\n\nconst useStyles = makeStyles((theme) =>({\n    mainContainer : {\n        position : 'relative',\n        backgroundColor : theme.palette.common.white,\n        backgroundSize : 'cover'\n    },\n    gridSecond : {\n        backgroundImage : \"url(https://source.unsplash.com/random)\",\n        backgroundRepeat : 'no-repeat',\n        backgroundPosition : 'center',\n        padding : theme.spacing(3),\n    },\n    gridFirst : {\n        backgroundPosition : 'center',\n        padding : theme.spacing(3),\n    }\n}))\n\nfunction SubContent() {\n\n    \n\n    const classes = useStyles()\n    return (\n        <Paper>\n        <Grid container className={classes.mainContainer}>\n            \n            <Grid item md={8} className={classes.gridFirst}>\n                <h1>hello</h1>\n                <h2>is the second content, a.k.a SubContent</h2>\n            </Grid>\n            <Grid item md={4} className={classes.gridSecond}>\n            </Grid>\n        </Grid>\n        </Paper>\n    )\n}\n\nexport default SubContent\n","C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\_action\\types.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\Config.js",[],"C:\\Users\\yumi.choi\\Desktop\\capstone_project-master\\capstone_project-master\\client\\src\\components\\views\\LandingPage\\MainPage.js",["122","123","124","125","126","127","128","129","130","131","132","133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":15},{"ruleId":"139","severity":1,"message":"143","line":12,"column":8,"nodeType":"141","messageId":"142","endLine":12,"endColumn":15},{"ruleId":"139","severity":1,"message":"144","line":2,"column":17,"nodeType":"141","messageId":"142","endLine":2,"endColumn":25},{"ruleId":"139","severity":1,"message":"145","line":2,"column":27,"nodeType":"141","messageId":"142","endLine":2,"endColumn":36},{"ruleId":"139","severity":1,"message":"146","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":21},{"ruleId":"139","severity":1,"message":"147","line":4,"column":23,"nodeType":"141","messageId":"142","endLine":4,"endColumn":34},{"ruleId":"139","severity":1,"message":"148","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":25},{"ruleId":"139","severity":1,"message":"149","line":22,"column":11,"nodeType":"141","messageId":"142","endLine":22,"endColumn":19},{"ruleId":"139","severity":1,"message":"150","line":14,"column":8,"nodeType":"141","messageId":"142","endLine":14,"endColumn":17},{"ruleId":"139","severity":1,"message":"151","line":45,"column":12,"nodeType":"141","messageId":"142","endLine":45,"endColumn":25},{"ruleId":"139","severity":1,"message":"152","line":47,"column":11,"nodeType":"141","messageId":"142","endLine":47,"endColumn":23},{"ruleId":"139","severity":1,"message":"153","line":52,"column":12,"nodeType":"141","messageId":"142","endLine":52,"endColumn":19},{"ruleId":"139","severity":1,"message":"154","line":54,"column":11,"nodeType":"141","messageId":"142","endLine":54,"endColumn":24},{"ruleId":"139","severity":1,"message":"145","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"155","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":14},{"ruleId":"139","severity":1,"message":"156","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":13},{"ruleId":"139","severity":1,"message":"157","line":1,"column":61,"nodeType":"141","messageId":"142","endLine":1,"endColumn":66},{"ruleId":"139","severity":1,"message":"158","line":6,"column":29,"nodeType":"141","messageId":"142","endLine":6,"endColumn":40},{"ruleId":"139","severity":1,"message":"148","line":8,"column":29,"nodeType":"141","messageId":"142","endLine":8,"endColumn":44},{"ruleId":"139","severity":1,"message":"159","line":65,"column":11,"nodeType":"141","messageId":"142","endLine":65,"endColumn":20},{"ruleId":"139","severity":1,"message":"160","line":78,"column":12,"nodeType":"141","messageId":"142","endLine":78,"endColumn":19},{"ruleId":"139","severity":1,"message":"161","line":78,"column":21,"nodeType":"141","messageId":"142","endLine":78,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":93,"column":9,"nodeType":"164","endLine":93,"endColumn":10},{"ruleId":"139","severity":1,"message":"144","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":24},{"ruleId":"139","severity":1,"message":"145","line":1,"column":26,"nodeType":"141","messageId":"142","endLine":1,"endColumn":35},{"ruleId":"139","severity":1,"message":"165","line":2,"column":9,"nodeType":"141","messageId":"142","endLine":2,"endColumn":13},{"ruleId":"139","severity":1,"message":"166","line":3,"column":11,"nodeType":"141","messageId":"142","endLine":3,"endColumn":21},{"ruleId":"139","severity":1,"message":"167","line":3,"column":40,"nodeType":"141","messageId":"142","endLine":3,"endColumn":49},{"ruleId":"139","severity":1,"message":"168","line":3,"column":51,"nodeType":"141","messageId":"142","endLine":3,"endColumn":62},{"ruleId":"139","severity":1,"message":"169","line":3,"column":64,"nodeType":"141","messageId":"142","endLine":3,"endColumn":69},{"ruleId":"139","severity":1,"message":"170","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":18},{"ruleId":"139","severity":1,"message":"171","line":13,"column":8,"nodeType":"141","messageId":"142","endLine":13,"endColumn":24},{"ruleId":"139","severity":1,"message":"172","line":15,"column":8,"nodeType":"141","messageId":"142","endLine":15,"endColumn":19},{"ruleId":"139","severity":1,"message":"165","line":16,"column":8,"nodeType":"141","messageId":"142","endLine":16,"endColumn":12},{"ruleId":"139","severity":1,"message":"173","line":18,"column":10,"nodeType":"141","messageId":"142","endLine":18,"endColumn":23},{"ruleId":"139","severity":1,"message":"174","line":19,"column":8,"nodeType":"141","messageId":"142","endLine":19,"endColumn":18},{"ruleId":"139","severity":1,"message":"175","line":20,"column":8,"nodeType":"141","messageId":"142","endLine":20,"endColumn":19},{"ruleId":"139","severity":1,"message":"176","line":23,"column":7,"nodeType":"141","messageId":"142","endLine":23,"endColumn":15},{"ruleId":"139","severity":1,"message":"177","line":31,"column":7,"nodeType":"141","messageId":"142","endLine":31,"endColumn":12},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'searchAdminPost' is defined but never used.","'dispatch' is assigned a value but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleChange2' is assigned a value but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'Input' is defined but never used.","'USER_SERVER' is defined but never used.","'adminPost' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","'setisEmpty' is assigned a value but never used.","react-hooks/exhaustive-deps","The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'Card' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'CssBaseline' is defined but never used.","'Paper' is defined but never used.","'SearchIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'CardContent' is defined but never used.","'ThemeProvider' is defined but never used.","'SubContent' is defined but never used.","'NewsContent' is defined but never used.","'newsPost' is assigned a value but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]