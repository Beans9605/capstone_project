
[{"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\index.js":"1","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\serviceWorker.js":"2","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\App.js":"3","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\index.js":"4","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\hoc\\auth.js":"5","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js":"6","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\PayPage.js":"7","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Navbar.js":"8","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js":"9","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Sidebar\\Sidebar.js":"10","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js":"11","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostDetailPage.js":"12","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPage.js":"13","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Nav.js":"14","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\MainPage.js":"15","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"16","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Introduce\\Introduce.js":"17","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"18","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Chat.js":"19","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Category.js":"20","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\adminPost_reducer.js":"21","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\user_reducer.js":"22","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx":"23","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Sidebar\\RightMenu.js":"24","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\user_actions.js":"25","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\Grids.js":"26","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js":"27","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js":"28","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js":"29","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\types.js":"30","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Store.js":"31","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Dashboard.js":"32","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingContent.js":"33","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Content.jsx":"34","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx":"35","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js":"36","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js":"37","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewableCard.js":"38","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js":"39","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js":"40","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js":"41","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\CouponPage.js":"42","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Cancel.js":"43","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\Config.js":"44","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js":"45","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\RefundWB.js":"46","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js":"47","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\CancelCard.js":"48","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js":"49","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js":"50","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx":"51","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostCard.js":"52"},{"size":1595,"mtime":1620235167015,"results":"53","hashOfConfig":"54"},{"size":5086,"mtime":1618302477010,"results":"55","hashOfConfig":"54"},{"size":3167,"mtime":1620968624914,"results":"56","hashOfConfig":"54"},{"size":226,"mtime":1621151187169,"results":"57","hashOfConfig":"54"},{"size":1584,"mtime":1620902234366,"results":"58","hashOfConfig":"54"},{"size":2686,"mtime":1620998090315,"results":"59","hashOfConfig":"54"},{"size":3324,"mtime":1620235166892,"results":"60","hashOfConfig":"54"},{"size":1236,"mtime":1619249815741,"results":"61","hashOfConfig":"54"},{"size":4097,"mtime":1620235166891,"results":"62","hashOfConfig":"54"},{"size":3866,"mtime":1618302477000,"results":"63","hashOfConfig":"54"},{"size":1231,"mtime":1620235166891,"results":"64","hashOfConfig":"54"},{"size":7813,"mtime":1621160770739,"results":"65","hashOfConfig":"54"},{"size":626,"mtime":1621161509593,"results":"66","hashOfConfig":"54"},{"size":8561,"mtime":1620967771394,"results":"67","hashOfConfig":"54"},{"size":5097,"mtime":1620996680427,"results":"68","hashOfConfig":"54"},{"size":8021,"mtime":1621155282200,"results":"69","hashOfConfig":"54"},{"size":2271,"mtime":1620966888433,"results":"70","hashOfConfig":"54"},{"size":30655,"mtime":1620966888455,"results":"71","hashOfConfig":"54"},{"size":224,"mtime":1620966888420,"results":"72","hashOfConfig":"54"},{"size":399,"mtime":1620996564983,"results":"73","hashOfConfig":"54"},{"size":453,"mtime":1618302476970,"results":"74","hashOfConfig":"54"},{"size":623,"mtime":1621151157331,"results":"75","hashOfConfig":"54"},{"size":2876,"mtime":1620966888458,"results":"76","hashOfConfig":"54"},{"size":1425,"mtime":1620235166881,"results":"77","hashOfConfig":"54"},{"size":1102,"mtime":1621151147143,"results":"78","hashOfConfig":"54"},{"size":8652,"mtime":1621161293114,"results":"79","hashOfConfig":"54"},{"size":4830,"mtime":1620235166890,"results":"80","hashOfConfig":"54"},{"size":3602,"mtime":1620235166883,"results":"81","hashOfConfig":"54"},{"size":476,"mtime":1618302476979,"results":"82","hashOfConfig":"54"},{"size":274,"mtime":1621151172460,"results":"83","hashOfConfig":"54"},{"size":878,"mtime":1620966888425,"results":"84","hashOfConfig":"54"},{"size":2501,"mtime":1620966888423,"results":"85","hashOfConfig":"54"},{"size":449,"mtime":1620235166998,"results":"86","hashOfConfig":"54"},{"size":15682,"mtime":1620998090310,"results":"87","hashOfConfig":"54"},{"size":2438,"mtime":1620235166997,"results":"88","hashOfConfig":"54"},{"size":2137,"mtime":1620235166874,"results":"89","hashOfConfig":"54"},{"size":6070,"mtime":1620235166876,"results":"90","hashOfConfig":"54"},{"size":4091,"mtime":1620235166877,"results":"91","hashOfConfig":"54"},{"size":4230,"mtime":1620235166879,"results":"92","hashOfConfig":"54"},{"size":1043,"mtime":1620235166864,"results":"93","hashOfConfig":"54"},{"size":6119,"mtime":1621161192091,"results":"94","hashOfConfig":"54"},{"size":6381,"mtime":1620235166863,"results":"95","hashOfConfig":"54"},{"size":2624,"mtime":1620235166861,"results":"96","hashOfConfig":"54"},{"size":136,"mtime":1620815348597,"results":"97","hashOfConfig":"54"},{"size":2436,"mtime":1620996578541,"results":"98","hashOfConfig":"54"},{"size":1998,"mtime":1620235166872,"results":"99","hashOfConfig":"54"},{"size":4748,"mtime":1621151992384,"results":"100","hashOfConfig":"54"},{"size":3985,"mtime":1620235166862,"results":"101","hashOfConfig":"54"},{"size":685,"mtime":1620966888444,"results":"102","hashOfConfig":"54"},{"size":772,"mtime":1620966888435,"results":"103","hashOfConfig":"54"},{"size":1228,"mtime":1620966888442,"results":"104","hashOfConfig":"54"},{"size":2455,"mtime":1621070823345,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"paqdep",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"108"},"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\index.js",[],["235","236"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\serviceWorker.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\App.js",["237","238","239"],"import { react, Suspense } from 'react'\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\n// react에서 가장 중요한 개념인 dom에 router 개념을 더해 선택할 수 있게 만들어준다.\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport './App.css';\r\nimport Auth from '../hoc/auth';\r\n\r\n// 페이지에 대한 import 값\r\n//import LandingPage from './views/LandingPage/LandingPage'\r\nimport MainPage from './views/LandingPage/MainPage';\r\nimport LoginPage from './views/LoginPage/LoginPage';\r\nimport Navbar from './views/Navbar/Navbar';\r\nimport Sidebar from './views/Navbar/Sidebar/Sidebar';\r\nimport RegisterPage from './views/RegisterPage/RegisterPage';\r\nimport EnrollmentCreditPage from './views/Paymovement/EnrollmentCreditPage';\r\nimport PayPage from './views/Paymovement/PayPage';\r\nimport LoadingAndSuccess from './views/Paymovement/LoadingAndSuccess';\r\nimport MyPage from './views/MyPage/MyPage';\r\n\r\nimport PostDetailPage from './views/PostPage/PostDetailPage';\r\nimport PostSearchListPage from './views/PostPage/PostSearchListPage';\r\nimport ShoppingBascket from './views/ShoppingBaskcet/ShoppingBascket';\r\nimport Nav from './views/Navbar/Nav';\r\nimport Chat from './views/AIChat/Chat';\r\nimport Category from './views/Category/Category';\r\nimport Introduce from './views/Introduce/Introduce';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <CssBaseline>\r\n    {/* // Suspense는 Suspense안에 있는 태그 값에 접근하기 전에 선행 후에 접근하게 된다.\r\n    // fallback 이라는 속성을 통해서 아직 데이터가 불러와지지 않았을 경우에 보여지는 화면을 만들어준다. */}\r\n    <Suspense fallback={(<div>...Loding Now</div>)}>\r\n      <Nav/>\r\n      <Switch>\r\n        {/* Switch & case 문과 비슷하게 해석하면 쉽게 접근 가능\r\n            Route는 내가 원하는 URL 경로를 만들어줌\r\n            속성 값의 path는 해당하는 URL 경로를 의미함, /는 빈 경로, 계속해서 경로를 이어서 만들어 줄 수 있음\r\n            쉽게 말하면 이 곳에서 URL 경로를 관리함 ( Front로 보여주는 경로만 )\r\n        */}\r\n        <Route exact path=\"/\" component={Auth(MainPage, null)} />\r\n        <Route exact path=\"/login\" component={Auth(LoginPage, null)} />\r\n        <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n        <Route exact path=\"/card\" component={EnrollmentCreditPage} />\r\n        <Route exact path=\"/dopay\" component={PayPage} />\r\n        <Route exact path=\"/myPage/:PageMenu\" component={Auth(MyPage, true)} />\r\n        <Route exact path=\"/postDetail/:postId\" component={Auth(PostDetailPage, null)} />\r\n        <Route exact path=\"/postsearchlist\" component={Auth(PostSearchListPage, null)} />\r\n\r\n\r\n        <Route exact path=\"/shoppingBascket\" component={ShoppingBascket} />\r\n        <Route exact path=\"/chat\" component={Chat} />\r\n        <Route exact path=\"/category\" component={Category} />\r\n        <Route exact path=\"/introduce\" component={Introduce} />\r\n\r\n        <Route exact paht=\"/loading\" component={LoadingAndSuccess} />\r\n\r\n      </Switch>\r\n    </Suspense>\r\n    </CssBaseline>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\index.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\hoc\\auth.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js",["240","241","242","243","244","245","246","247","248","249"],"\r\n\r\nimport React, { useState,useEffect } from 'react'\r\nimport { LockOutlined } from '@material-ui/icons'\r\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\r\n\r\nimport { Grid, makeStyles, Typography, Box, Button} from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { CardMedia, CardActions, CardContent, CardHeader } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport PostCard from './PostCard';\r\n\r\nimport axios from 'axios'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        //paddingTop: theme.spacing(10),\r\n        justifyContent: 'center',\r\n        justifyItems: 'center',\r\n        align: 'center',\r\n        justify: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    number: {\r\n      justifyContent: 'center',\r\n    }\r\n}))\r\n\r\n\r\nexport default function PostSearchListPage(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n     const [posts,setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        axios.post('/api/post/get/allProducts')\r\n        .then(response => {\r\n            if(response.data.success) {\r\n              console.log(response.data)\r\n              setPosts(response.data.products)\r\n            } else {\r\n                alert(\"상품을 가져오지 못했습니다.\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    const [page, setPage] = React.useState(1);\r\n    \r\n    const handleChange = (event, value) => {\r\n      setPage(value);\r\n    };\r\n\r\n    // const [size, setSize] = React.useState('');\r\n    // const handleSizeChange = (event) => {\r\n    //     setSize(event.target.value);\r\n    // };\r\n\r\n      \r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid item container direction=\"column\" style={{margin : \"auto\"}} spacing={1}>\r\n            <Grid container spacing={2} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}} >\r\n                {posts.map((post) => (\r\n                <Grid\r\n                    item\r\n                    key={post.id}\r\n                    lg={3}\r\n                >\r\n                <PostCard post={post} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}} />\r\n                </Grid>\r\n                ))}\r\n            </Grid>\r\n          <Grid container spacing={2} style={{margin : \"auto\", justifyContent : 'center', alignContent : \"center\"}}>\r\n          <Typography>Page: {page}</Typography>\r\n          <Pagination \r\n          color=\"primary\"\r\n          count={10}\r\n          size=\"large\"\r\n          page={page} \r\n          onChange={handleChange}\r\n          /> \r\n          </Grid>\r\n      </Grid>\r\n      </div>\r\n    )}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\PayPage.js",["250","251","252","253"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, Container, makeStyles, Card, Input, Paper, Button, CircularProgress } from '@material-ui/core'\r\nimport NumberFormat from 'react-number-format'\r\nimport { Check } from '@material-ui/icons'\r\nimport LoadingAndSuccess from './LoadingAndSuccess'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        // paddingTop : theme.spacing(12)\r\n        backgroundColor : \"white\"\r\n    },\r\n    creditCard: {\r\n        paddingTop: theme.spacing(4),\r\n        margin: 'auto',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        width: \"100%\"\r\n    },\r\n    cardPadding: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    cardForm: {\r\n        width: \"100%\",\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"320px\"\r\n        }\r\n    },\r\n    card: {\r\n        border: '1px solid #dddddd',\r\n        padding: '0 0.8rem',\r\n        fontSize: '1rem',\r\n        lineHeight: '2rem',\r\n        margin: '0.2rem',\r\n        color: '#666666',\r\n        backgroundColor: '#f8f8f8'\r\n    },\r\n    cardBtn: {\r\n        marginTop: '1.5rem',\r\n        marginBottom: \"0\",\r\n        backgroundColor : theme.palette.primary\r\n    }\r\n}))\r\n\r\n\r\nfunction PayPage() {\r\n    const classes = useStyle()\r\n\r\n    const [Success, setSuccess] = useState(false)\r\n\r\n\r\n    const SuccessHandle = (e) => {\r\n        e.preventDefault()\r\n\r\n        setSuccess(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container component=\"body\" className={classes.root}>\r\n            <Grid className={classes.creditCard} component=\"h4\" container>\r\n\r\n                {Success ? \r\n                <LoadingAndSuccess />  :\r\n                <div>\r\n                <Grid item md={12}>\r\n                    <h3 >내 카드 정보</h3>\r\n                </Grid>\r\n                    <Grid item style={{margin : 'auto'}} className={classes.cardPadding} sm={6}>\r\n                        <Paper component=\"body\" className={classes.cardForm} variant=\"outlined\" >\r\n                            <form noValidate autoComplete=\"off\">\r\n\r\n                                <div >\r\n                                    <NumberFormat disabled value=\"4321431243214321\" format=\"####-####-####-####\" className={classes.card} style={{ width: '68%' }} placeholder=\"카드 번호\" />\r\n                                    <img style={{ width: \"12%\", verticalAlign: \"middle\" }} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Visa.svg/1024px-Visa.svg.png\" alt=\"VISA\" />\r\n                                    <Input disabled className={classes.card} value=\"KO YEONG BIN\" style={{ width: '80%' }} placeholder=\"이름\" />\r\n                                </div>\r\n\r\n                                <div>\r\n                                </div>\r\n                                {/* 버튼 부분 수정해야함 */}\r\n                                <Button onClick={SuccessHandle} className={classes.cardBtn} variant=\"contained\" color=\"primary\" type=\"submit\" >결제</Button>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                </div>\r\n            }\r\n\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PayPage\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Navbar.js",["254"],"import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport RightMenu from './Sidebar/RightMenu'\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root : {\r\n        flexGrow : 1\r\n    },\r\n    menuButton : {\r\n        marginRight : theme.spacing(2),\r\n    },\r\n    title : {\r\n        flexGrow : 1\r\n    }\r\n}))\r\n\r\nfunction Navbar() {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar color=\"inherit\" position=\"fixed\" >\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <Sidebar name=\"left\"/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    <a style={{textDecoration : 'none', color : '#000000'}} href=\"/\">Home</a>\r\n                </Typography>\r\n                <RightMenu />\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js",["255","256","257"],"import React, { useState } from 'react'\r\nimport { Grid, Container,  makeStyles, Paper, Typography, ButtonBase} from '@material-ui/core'\r\nimport CreditCard from './CreditCard/CreditCard'\r\nimport CreditCash from './CreditCash/CreditCash'\r\nimport Banks from './BankInformation.json'\r\n\r\nconst useStyle = makeStyles((theme => ({\r\n    root: {\r\n        paddingTop: theme.spacing(30),\r\n        backgroundColor : theme.palette.action.hover,\r\n        height : '100%',\r\n        paddingBottom : \"30%\"\r\n    },\r\n    mainTitle: {\r\n        padding : theme.spacing(3),\r\n        borderColor : theme.palette.action.selected,\r\n        margin : theme.spacing(3)\r\n    },\r\n    creditTitle: {\r\n        width: '100%',\r\n        borderColor : theme.palette.action.selected\r\n    },\r\n    enrollement: {\r\n        padding : theme.spacing(3),\r\n    },\r\n\r\n})))\r\n\r\n\r\nfunction EnrollmentCreditPage(props) {\r\n    const classes = useStyle();\r\n\r\n    const [SelectCredit, setSelectCredit] = useState(false)\r\n    const [SelectCash, setSelectCash] = useState(false)\r\n\r\n    const [CreditNum, setCreditNum] = useState()\r\n\r\n    const HandlingCredit = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCredit === true || SelectCash === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCredit(true)\r\n        }\r\n    }\r\n    const HandlingCash = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCash === true || SelectCredit === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCash(true)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const CreditCardComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n               <CreditCard />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n    const CreditCashComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n                <CreditCash banks={Banks.banks} />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root} component=\"body\">\r\n            <Grid container>\r\n                <Grid item component=\"h2\" xs={12}>\r\n                    <Paper variant=\"outlined\" className={classes.mainTitle} >결제 수단 등록</Paper>\r\n\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCardComponent} onSubmit={HandlingCredit}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        신용카드\r\n                        </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCashComponent} onSubmit={HandlingCash}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        계좌번호\r\n                                    </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                {CreditCardComponent(SelectCredit)}\r\n                {CreditCashComponent(SelectCash)}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default EnrollmentCreditPage\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Sidebar\\Sidebar.js",["258","259"],"import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n// material UI 에서 가장 중요한 요소인 Marterial UI의 CSS 값을 부여하기 위한 MakeStyles\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\n// 보통 rcfe 단축어를 통해서 함수를 만들어내면 export default는 맨 아래에 새롭게 써주나,\r\n// 쉽게 사용하면 바로 export를 해주면서 함수를 선언하는 방법을 쓸 수 있다.\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n      top : false,\r\n      left : false,\r\n      right : false,\r\n      bottom : false\r\n  })\r\n  // 마우스를 쓰지 못하는 환경에서 선택 할 수 있도록 tap, shift키를 이용해서 메뉴 아이콘 선택 가능\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  // list 상수는 입력된 값에 따라서 메뉴를 상단, 하단, 좌 우 에 둘지 결정하게 만들어준다.\r\n  // 또한 결정된 메뉴의 위치에 따라서 해당 메뉴를 띄워주는 역할을 한다.\r\n  const list = (anchor) => (\r\n    // clsx는 값과 상황에 따라서 값을 선택하게 만들어주는 모듈이다.\r\n    // 특히나 className 을 임의로 바꾸기 어려운 react에서 유용하게 사용된다.\r\n\r\n    // classes라는 makeStyles를 통해 만든 style 중에서 보통의 경우에는 list Style을 가지게 하고\r\n    // 만약 anchor, 즉, 메뉴의 위치가 'top' 혹은 'bottom' 일 경우에는 fullList 값을 가지게 한다.\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      {/* List라는 Material-UI에 존재하는 태그를 사용했다.\r\n          그리고 map을 사용해서 Inbox, Starred 등등의 내부 값을 하나씩 꺼내서 ListItem을 반복해서 사용하게 만들어줬다.\r\n      */}\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      {/* 구분선 */}\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n        <React.Fragment key={props.name}>\r\n          <MenuIcon onClick={toggleDrawer(props.name, true)}/>\r\n          <Drawer anchor={props.name} open={state[props.name]} onClose={toggleDrawer(props.name, false)}>\r\n            {list(props.name)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostDetailPage.js",["260","261","262","263","264","265","266"],"import { Container, CssBaseline, Grid, makeStyles, Typography, ButtonBase, Box, Button, List, ListItem, ListItemText, Divider, InputLabel, MenuItem, FormHelperText, FormControl, Select, TableBody } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState,useEffect } from 'react'\r\nimport { LockOutlined } from '@material-ui/icons'\r\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\r\nimport { useDispatch } from 'react-redux'\r\nimport {addCart} from '../../../_action/user_actions'\r\nimport { registerUser } from '../../../_action/user_actions'\r\nimport { useHistory } from 'react-router';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\nimport ex1 from './img/1.jpg'\r\nimport ex2 from './img/2.jpg'\r\nimport ex0 from './img/0.png'\r\nimport ex4 from './img/4.png'\r\n\r\nimport axios from 'axios'\r\n//image json파일로 만들어서 코드 map 사용, 빼서 사용하면 일일이 하나씩 import할필요없음\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop : theme.spacing(8),\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems : 'center'\r\n    },\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        padding: theme.spacing(10),\r\n        paddingTop : theme.spacing(25)\r\n    },\r\n    img: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '100vh',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nexport default function PostDetailPage(props) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    \r\n    const clickCartHandler = () => {\r\n\r\n        if(props.user.userData.isAuth) {\r\n            let body = {\r\n                post: postId,\r\n                size: size,\r\n                quantity: quantity\r\n            }\r\n            console.log(body)\r\n            axios.post('/api/cart/create',body)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                  alert('장바구니에 해당 상품을 추가했습니다.')\r\n                }\r\n            })\r\n        }else {\r\n            alert('로그인이 필요합니다.')\r\n            history.push('/login')   \r\n            }\r\n    }\r\n    \r\n//이거 일단 보류.. 구매하는 코드임. 근데 사실 여기서는 의미없는데, 나중에 구매할때 사용할 것.\r\n  const  clickPurchaseHandler = () => {\r\n    \r\n    if(props.user.userData.isAuth) {\r\n            let body = {\r\n                post: postId,\r\n                size: size,\r\n                quantity: quantity,\r\n                price: post.pprice\r\n            }\r\n           // console.log(body)\r\n            axios.post('/api/purchase/create',body)\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                  //결제 페이지로 이동.\r\n                }\r\n            })\r\n        }else {\r\n            alert('로그인이 필요합니다.')\r\n            history.push('/login')   \r\n            }\r\n  }\r\n    \r\n\r\n\r\n    const[quantity,setQuantity] = useState()\r\n    const handleQuantityChange = (event) => {\r\n        setQuantity(event.target.value);\r\n    };\r\n\r\n    const [post, setPost] = useState({})\r\n   const postId = props.match.params.postId\r\n    useEffect(() => {\r\n\r\n        axios.get(`/api/post/get/posts_by_id?id=${postId}&type=single`)\r\n        .then(response => {\r\n            console.log(response.data.post[0])\r\n             setPost(response.data.post[0])\r\n        })\r\n    }, [])\r\n\r\n\r\n    \r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const [size, setSize] = React.useState('');\r\n    const handleSizeChange = (event) => {\r\n        setSize(event.target.value);\r\n    };\r\n\r\n    return (\r\n    <Container component='main' maxWidth=\"lg\" className={classes.container}>\r\n        <CssBaseline />\r\n        <Typography component=\"div\" style={{height: '100vh' }}>\r\n\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={6} md={6}>\r\n              <ButtonBase className={classes.image}>\r\n                <img className={classes.img} alt=\"complex\" src= {post.image} />\r\n              </ButtonBase>\r\n            </Grid>\r\n            <Grid item xs={6} md={6}>\r\n                <Typography component=\"h1\" variant =\"h4\" > {post.title} </Typography>\r\n                <StarIcon /><StarIcon /><StarIcon /><StarIcon /><StarIcon />  900개의 상품 리뷰\r\n                <Divider />\r\n                <List component=\"nav\" >\r\n                <ListItem><ListItemText primary={post.pprice} /></ListItem>\r\n                <ListItem><ListItemText primary={post.pcompany} /></ListItem>\r\n                <ListItem><ListItemText primary={post.pcolor} /></ListItem>\r\n                </List>\r\n\r\n                <FormControl required className={classes.formControl} >\r\n                    <InputLabel id=\"demo-simple-select-required-label\">Size</InputLabel>\r\n                    <Select\r\n                    labelId=\"demo-simple-select-required-label\"\r\n                    id=\"demo-simple-select-required\"\r\n                    value= {size}\r\n                    onChange={handleSizeChange}\r\n                    className={classes.selectEmpty}\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"S\"}>S</MenuItem>\r\n                    <MenuItem value={\"M\"}>M</MenuItem>\r\n                    <MenuItem value={\"L\"}>L</MenuItem>\r\n                    <MenuItem value={\"XL\"}>XL</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText>Required</FormHelperText>\r\n                    <Box component=\"span\" m={1}><Button /></Box>\r\n                    <TextField\r\n                        id=\"standard-number\"\r\n                        label=\"Number*\"\r\n                        type=\"number\"\r\n                        value= {quantity}\r\n                        onChange={handleQuantityChange}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                    }}\r\n                    />\r\n                    <Box component=\"span\" m={1}><Button /></Box>\r\n                    <Button variant=\"outlined\"  color=\"primary\" onClick = {clickCartHandler}>장바구니</Button>\r\n                    <Box component=\"span\" m={1}><Button /></Box>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick = {clickPurchaseHandler}>구매하기</Button>\r\n            </FormControl>\r\n  \r\n            </Grid>\r\n\r\n        </Grid>\r\n        \r\n            \r\n        <Paper className={classes.root} >\r\n          <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n          >\r\n          <Tab label=\"상품 상세\" />\r\n          <Tab label=\"상품 리뷰\" />\r\n          <Tab label=\"배송/교환/반품안내\" />\r\n          </Tabs>\r\n        </Paper>\r\n        <Box component=\"span\" m={1}><Button /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={ex0} /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={ex4} /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={ex1} /></Box>\r\n        <Box width=\"100%\"><img className={classes.img} alt=\"complex\" src={ex2} /></Box>\r\n        \r\n\r\n        </Typography>\r\n        \r\n\r\n    </Container>\r\n\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPage.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Nav.js",["267","268","269","270","271","272","273","274"],"import React,{useState} from 'react'\r\nimport { Box, Grid, IconButton, makeStyles, Typography, AppBar, Toolbar, InputBase, Container, Input } from '@material-ui/core'\r\n\r\nimport { useLocation, useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { ZoomOut, ZoomIn, RecordVoiceOver, Exposure, Brightness6, ShoppingCart, ExitToApp, ZoomInSharp } from '@material-ui/icons'\r\n\r\nimport { fade } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n    },\r\n    BoxComponent2: {\r\n        minWidth: '230px',\r\n        textAlign: 'center',\r\n        height: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        color: \"#ffffff\",\r\n        borderColor: '#B6B5B5'\r\n        \r\n    },\r\n    appbar: {\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    iconComponent: {\r\n        margin: '0', padding: '0',\r\n        color: '#ffffff'\r\n    },\r\n    searchIcon: {\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        right: \"-2%\",\r\n        padding: theme.spacing(0, 2),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.35)\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n    appbarContainer: {\r\n        maxWidth: '100%',\r\n        margin: theme.spacing(0, 0, 0, 0),\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        position: \"relative\",\r\n        zIndex: \"2\"\r\n    },\r\n    orderButton: {\r\n        position: \"relative\",\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    BoxComponent: {\r\n        minWidth: '200px',\r\n        height: '20px',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n    },\r\n}))\r\n\r\n\r\nfunction Nav(props) {\r\n    const classes = useStyle();\r\n  \r\n    // 확대, 축소 기능\r\n    var nowZoom = 100;\r\n    function zoomOut() {\r\n        nowZoom = nowZoom - 20;\r\n        if(nowZoom <= 100) nowZoom = 100;\r\n        zooms();\r\n    }\r\n\r\n    function zoomIn() {\r\n        nowZoom = nowZoom + 20;\r\n        if(nowZoom >= 200) nowZoom = 200;\r\n        zooms();\r\n    }\r\n\r\n    function zomReset(){\r\n        nowZoom = 100;\r\n        zooms();\r\n    }\r\n\r\n    function zooms(){\r\n        document.body.style.zoom = nowZoom + '%';\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={classes.appbarContainer} component='main' maxWidth='xl' >\r\n            <AppBar className={classes.appbar} style={{ backgroundColor: \"#616161\" }}>\r\n                <Toolbar className={classes.toolbar} p={1} >\r\n                    <Grid container spacing={1}>\r\n\r\n                        {/* 아이콘모음 */}\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Box color=\"#000000\" className={classes.BoxComponent2} p={4} >\r\n                            <div className={classes.root}>\r\n                            <ButtonGroup variant=\"text\" color=\"inherit\">\r\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"비전마켓\" href=\"/\">\r\n                            메인\r\n                            </Button>\r\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"챗봇\" href=\"/chat\">\r\n                            Chat\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"고대비\">\r\n                                <Brightness6 className={classes.iconComponent} />\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"음성검색\">\r\n                                <RecordVoiceOver className={classes.iconComponent} />\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"확대\" onClick={zoomIn}>\r\n                                <ZoomIn className={classes.iconComponent} />\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"축소\" onClick={zoomOut}>\r\n                                <ZoomOut className={classes.iconComponent} />\r\n                            </Button>\r\n                            </ButtonGroup>\r\n                            </div>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        {/* 검색창 */}\r\n                        <Grid item xs={12} sm={4} >\r\n                            <Box p={2}>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                placeholder=\" 검색창...\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': '검색창' }}\r\n                                />\r\n                            </div>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        {/* 주버튼 */}\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Box className={classes.BoxComponent} p={4} >\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"마이페이지\" href=\"/myPage/order\" >\r\n                                        마이페이지\r\n                                </Button>\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} aria-label=\"장바구니\" aria-details=\"장바구니 링크\" href=\"/shoppingbascket\" color=\"inherit\" >\r\n                                <ShoppingCart  style={{ fontSize: '30' }} />\r\n                                        장바구니\r\n                                </Button>\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"로그아웃\" href=\"/login\">\r\n                                    <ExitToApp />\r\n\r\n                                        로그아웃\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n\r\n            <AppBar className={classes.secondAppbar} style={{ backgroundColor: \"#9e9e9e\" }}>\r\n                <Toolbar >\r\n\r\n                    <IconButton className={classes.allCategory} color=\"inherit\" aria-label=\"모든 카테고리\">\r\n                        <Typography >\r\n                            모든 카테고리\r\n            </Typography>\r\n                    </IconButton>\r\n\r\n                    <IconButton href=\"/\" className={classes.allCategory} color=\"inherit\" aria-label=\"인기 상품\">\r\n                        <Typography>\r\n                            인기 상품\r\n            </Typography>\r\n                    </IconButton>\r\n\r\n                    <IconButton className={classes.allCategory} color=\"inherit\" aria-label=\"소개 및 안내\">\r\n                        <Typography >\r\n                            소개 및 안내\r\n            </Typography>\r\n                    </IconButton>\r\n\r\n                    <IconButton href=\"/myPage/order\" className={classes.allCategory} color=\"inherit\" aria-label=\"마이페이지\" >\r\n                        <Typography >\r\n                            마이페이지\r\n            </Typography>\r\n                    </IconButton>\r\n\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\MainPage.js",["275","276"],"import React from \"react\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport {  Typography ,Grid, Container, Paper, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport SubContent from './LandContents/SubContent'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nconst newsPost = {\r\n  title: \"Title Sample\",\r\n  description: \"description Sample, which codes is best code? can you choice that?\",\r\n  linkText: \"LinkText Sample\",\r\n  linkURL: \"http://localhost:3000/\",\r\n  image: \"https://source.unsplash.com/random\"\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n \r\n    h6: {\r\n      fontSize:13\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flex: {\r\n    display: 'flex',\r\n    padding: '20px',\r\n  },\r\n  AppbarContainer: {\r\n    maxWidth: '100%',\r\n    margin: theme.spacing(0, 0, 0, 0),\r\n    padding: theme.spacing(0, 0, 0, 0),\r\n    position: \"relative\",\r\n    zIndex: \"2\"\r\n },\r\n  productToolbar: {\r\n    top:\"10%\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n appbar2: {\r\n  position: \"relative\",\r\n  display: \"relative\",\r\n  alignItems: \"center\",\r\n},\r\n  }))\r\n\r\n  function MainPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n  <div>\r\n    <div className={classes.flex}>\r\n      <Container>\r\n      <React.Fragment>\r\n      <CssBaseline />\r\n      <Paper elevation={3}>\r\n      <Typography\r\n      variant=\"h5\" \r\n      style={{textAlign:'center'}}>\r\n      <br/>\r\n      당신의 Vision을 들려주세요.\r\n      <br />\r\n      </Typography>\r\n      <Typography\r\n      variant=\"subtitle1\" \r\n      style={{textAlign:'center'}}\r\n      >\r\n      저희 Vision Market은 사용자들의 리뷰를 바탕으로\r\n      <br />\r\n      시각 장애인들에게 상품을 들려줍니다.\r\n      </Typography>\r\n      <br />\r\n      </Paper>\r\n    </React.Fragment>\r\n    </Container>\r\n    </div>\r\n    <div>\r\n    <Container className={classes.AppbarContainer} >\r\n    <AppBar className={classes.appbar2} style={{ backgroundColor: \"#9e9e9e\" }}>\r\n                <Toolbar >\r\n                    <Button color=\"inherit\" aria-label=\"모든 카테고리\" href=\"/category\" style={{ fontSize: '1.2rem' }}>\r\n                            모든 카테고리\r\n                    </Button>\r\n                    <Button color=\"inherit\" aria-label=\"소개 및 안내\" href=\"/introduce\" style={{ fontSize: '1.2rem' }}>\r\n                            소개 및 안내\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            </Container>\r\n            </div>\r\n            <Container>\r\n          <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 인기상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 신상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 추천상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n            </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default MainPage;","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Introduce\\Introduce.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["277","278","279","280","281"],"import { Container, CssBaseline, Grid, makeStyles, Typography, Button, Box, Link } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\nimport { registerUser } from '../../../_action/user_actions'\r\nimport HearingIcon from '@material-ui/icons/Hearing';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root : {\r\n    //     // paddingTop : theme.spacing(25)\r\n    // },\r\n    paper: {\r\n        paddingTop : theme.spacing(23),\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems : 'center'\r\n    },\r\n    avatar: {\r\n        marginTop : theme.spacing(1),\r\n        backgroundColor : theme.palette.primary.dark\r\n    },\r\n    form : {\r\n        marginTop : theme.spacing(1),\r\n        width : \"100%\"\r\n    },\r\n    onSubmit : {\r\n        margin : theme.spacing(3, 0, 2)\r\n    }\r\n}))\r\n\r\nexport default function RegisterPage(props) {\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch();\r\n    const [FormErrorMessage, setFormErrorMessage] = useState(\"\")\r\n\r\n\r\n    // 라디오\r\n    const [selectedValue, setSelectedValue] = React.useState(\"10대\");\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n      \r\n    // 체크박스 \r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChange2 = (event) => {\r\n          setChecked(event.target.checked);\r\n    };\r\n\r\n    // 페이지 넘어가는 부분\r\n    const [NextPage, setNextPage] = useState(1);\r\n\r\n    const ButtonHandler = (e) => {\r\n        if(NextPage !== 4){\r\n            e.preventDefault()\r\n            setNextPage(NextPage+1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지가 4일 경우(===메인으로 돌아가기, 쇼핑창)\r\n        }\r\n    }\r\n\r\n    const ButtonHandler2 = (e) => {\r\n        if(NextPage !== 1){\r\n            e.preventDefault()\r\n            setNextPage(NextPage-1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지 1일 경우 뒤로(===메인으로돌아가기, 로그인창) \r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        name : Yup.string().required(\"이름을 입력해주세요.\"),\r\n        birth : Yup.string().min(8, \"생년월일은 8자로 입력해주세요.\").required(\"생년월일이 필요합니다.\"),\r\n        id : Yup.string().required('아이디가 필요합니다.'),\r\n        password : Yup.string().min(4, \"Password는 최소 4자 이상이여야 합니다.\").required('password가 필요합니다.'),\r\n        confirmPassword : Yup.string().oneOf([Yup.ref('password'), null], 'Password는 서로 일치해야합니다.').required('Password 확인란에 Password를 입력해주세요.')   \r\n    })\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues : {\r\n            name : \"\",\r\n            birth : \"\",\r\n            id : \"\",\r\n            password : \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validationSchema : validationSchema,\r\n        onSubmit : ((values, {setSubmitting}) => {\r\n            setTimeout(() => {\r\n                let dataToSubmit = {\r\n                    name : values.name,\r\n                    birth : values.birth,\r\n                    id : values.id,\r\n                    password : values.password,\r\n                }\r\n                \r\n                dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if(response.payload.success) {\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    }\r\n                }).catch((err) => {\r\n                    setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    setTimeout(() => {\r\n                        setFormErrorMessage('')\r\n                    }, 3000);\r\n                })\r\n                setSubmitting(false)\r\n            }, 500)\r\n        })\r\n    })\r\n\r\n    if(NextPage === 1) {\r\n        return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12}> \r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"name\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"이름\"\r\n                                autoFocus\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText= {formik.touched.name && formik.errors.name}\r\n                                alt=\"이름입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"birth\"\r\n                                name=\"birth\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"birth\"\r\n                                label=\"생년월일(8자리)\"\r\n                                type='birth'\r\n                                value={formik.values.birth}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.birth && Boolean(formik.errors.birth)}\r\n                                helperText = {formik.touched.birth && formik.errors.birth}\r\n                                alt=\"생년월일8자리입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        메인으로돌아가기\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 2){\r\n            return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"id\"\r\n                                name=\"id\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"id\"\r\n                                label=\"ID\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"아이디입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"current-password\"\r\n                                name=\"password\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type='password'\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText = {formik.touched.password && formik.errors.password}\r\n                                alt=\"비밀번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField \r\n                                autoComplete=\"confirm-password\"\r\n                                name=\"confirmPassword\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type='password'\r\n                                value={formik.values.confirmPassword}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                                helperText = {formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                                alt=\"비밀번호확인입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 3){\r\n            return(\r\n        <Container component='main' maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={9} sm={10}>\r\n                            <TextField\r\n                                autoComplete=\"address\"\r\n                                name=\"address\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"주소입력창\"\r\n                            /> </Grid>\r\n                            <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>검색</Button>\r\n                        </Grid>\r\n                        <Grid item xs={5} sm={6} >\r\n                            <TextField\r\n                                autoComplete=\"ph\"\r\n                                name=\"ph\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"ph\"\r\n                                label=\"PH\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"전화번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={4} >\r\n                            <TextField\r\n                                autoComplete=\"CertifiNumber\"\r\n                                name=\"CertifiNumber\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"CertifiNumber\"\r\n                                label=\"인증번호\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"인증번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>인증</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n            )} else if (NextPage === 4) {\r\n            return(\r\n                <Container component='main' maxWidth=\"xs\" >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                <br />\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p style={{fontSize: '1.0rem'}} >\r\n                    당신의 취향과 프로필을 선택해주세요.<br />\r\n                    스타일의 경우 중복으로 선택할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>\r\n                        <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 나이 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"10대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>10대</p>}\r\n                    labelPlacement=\"10대\"\r\n                    alt=\"10대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"20대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>20대</p>}\r\n                    labelPlacement=\"20대\"\r\n                    alt=\"20대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"30대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>30대</p>}\r\n                    labelPlacement=\"30대\"\r\n                    alt=\"30대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"40대이상\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>40대이상</p>}\r\n                    labelPlacement=\"40대이상\"\r\n                    alt=\"40대이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 성별 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"남자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>남자</p>}\r\n                    labelPlacement=\"남자\"\r\n                    alt=\"남자\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"여자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>여자</p>}\r\n                    labelPlacement=\"여자\"\r\n                    alt=\"여자\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />                    \r\n                    <div style={{fontSize: '1.0rem'}}>[ 키 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"140\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm 이하</p>}\r\n                    labelPlacement=\"140\"\r\n                    alt=\"150센티미터이하\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"150\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm</p>}\r\n                    labelPlacement=\"150\"\r\n                    alt=\"150센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"160\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>160cm</p>}\r\n                    labelPlacement=\"160\"\r\n                    alt=\"160센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"170\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>170cm</p>}\r\n                    labelPlacement=\"170\"\r\n                    alt=\"170센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"180\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>180cm</p>}\r\n                    labelPlacement=\"180\"\r\n                    alt=\"180센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"190\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>190cm 이상</p>}\r\n                    labelPlacement=\"190\"\r\n                    alt=\"190센티미터이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 스타일 ]</div>\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"심플\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />심플\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"캐주얼\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />캐주얼\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"시크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />시크\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"유니크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />유니크\r\n                    <br />\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"오피스\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />오피스\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"스트릿\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />스트릿\r\n                    <br />\r\n                    </fieldset>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        // onSubmit={ButtonHandler}\r\n                        href=\"/\"\r\n                    >\r\n                        가입완료\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n            </Container>\r\n            )} else {\r\n            return(\r\n                <div> hi </div>\r\n                // 자동 로그인 후 메인 페이지로 이동\r\n            )\r\n        }\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Chat.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Category.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\adminPost_reducer.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\user_reducer.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Sidebar\\RightMenu.js",["282"],"import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport axios from 'axios'\r\nimport { logoutUser } from '../../../../_action/user_actions'\r\nimport { Button, makeStyles } from '@material-ui/core'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n}))\r\n\r\nfunction RightMenu(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user)\r\n\r\n    const userHandler = () =>\r\n    {\r\n        dispatch(logoutUser())\r\n        .then(response => {\r\n            if (response.payload.success) {\r\n                props.history.push('/login')\r\n            }\r\n            else {\r\n                alert(\"logout fail\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (user.userData && !user.userData.isAuth){\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button className={classes.handleButton} href=\"/myPage/order\" color=\"inherit\">myPage Test</Button>\r\n            <Button className={classes.handleButton} href=\"/register\" color=\"inherit\">Sign Up</Button>\r\n            <Button href=\"/login\" color=\"inherit\">Login</Button>\r\n        </div>\r\n    )}\r\n    else {\r\n        return (\r\n        <div className={classes.root}>\r\n            <Button  onClick={userHandler} color=\"inherit\" >Logout</Button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(RightMenu)\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\user_actions.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\Grids.js",["283","284"],"/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, Box, Typography, makeStyles, Container, IconButton } from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useLocation, useHistory } from \"react-router\";\r\nimport Order from \"./MyPageComponent/Order\";\r\nimport Cancel from \"./MyPageComponent/Cancel\";\r\nimport CouponPage from \"./MyPageComponent/CouponPage\";\r\nimport PointPage from \"./MyPageComponent/PointPage\";\r\nimport DeliveryCard from \"./MyPageComponent/DeliveryCard\"\r\nimport ReviewPage from \"./MyPageComponent/ReviewPage\";\r\nimport ReviewWrite from \"./MyPageComponent/ReviewWrite\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        height: 140,\r\n        width: 100,\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        paddingTop: 10\r\n    },\r\n    subTitle: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        paddingTop: 20\r\n    },\r\n    active: {\r\n        backgroundColor:'#DDDADA'\r\n    },\r\n    IconButtonEf:{\r\n        marginTop:'100'\r\n    },\r\n    BoxComponent:{\r\n        textAlign:'center',\r\n        height:'80px',   \r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex',\r\n        backgroundColor:'#F8F8F8',\r\n        color:\"#555555\",\r\n        borderColor:'#B6B5B5'\r\n\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    useEffect(()=>{\r\n        const PageMenu = props.match.params.PageMenu;\r\n        console.log(PageMenu);\r\n    }, [props.match.params.PageMenu])\r\n\r\n    const user = props.user\r\n    console.log(\"여기\")\r\n    console.log(user)\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const Delivering = 0\r\n    const Coupon = 1\r\n    const point = user.point\r\n\r\n  \r\n\r\n    \r\n    \r\n\r\n    const shopItems = [\r\n        {\r\n            text: '주문목록 / 배송조회',\r\n            path: '/myPage/order',\r\n        },\r\n        {\r\n            text: '취소 / 반품 / 교환 / 환불내역',\r\n            path: '/myPage/cancel-return-exchange'\r\n        },\r\n        {\r\n            text: '리뷰 관리',\r\n            path: '/myPage/review'\r\n        }\r\n    ]\r\n\r\n    const effectItems = [\r\n        {\r\n            text: '할인 쿠폰',\r\n            path: '/myPage/discount-coupon'\r\n        },\r\n        {\r\n            text: '적립금',\r\n            path: '/myPage/point'\r\n        }\r\n    ]\r\n\r\n    const informItems = [\r\n        {\r\n            text: '개인정보 확인 / 수정',\r\n            path: '/myPage/userModify'\r\n        },\r\n        {\r\n            text: '배송지 관리',\r\n            path: '/myPage/DeliveryPlace'\r\n        },\r\n        {\r\n            text: '카드/계좌등록',\r\n            path: \"/card\"\r\n        }\r\n    ]\r\n\r\n    return(\r\n    <>\r\n        \r\n        <Container>\r\n        <Typography componet=\"h2\" variant=\"h5\" gutterBottom>\r\n            마이페이지\r\n        </Typography>\r\n        <Grid container spacing={0}>\r\n        <Grid item xs={6} sm={3}>\r\n            <Box border={1} p={2} className={classes.BoxComponent}>\r\n                <Typography variant=\"h6\" >MyPage</Typography>\r\n            </Box>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n            <Box  border={1} borderLeft={0}  p={2} className={classes.BoxComponent}>\r\n                <IconButton disableRipple color=\"inherit\" \r\n                onClick={() => {history.push({\r\n                    pathname: '/myPage/order',\r\n                    user:{user}\r\n                  })}}>\r\n                    <Typography variant=\"h6\" >배송중 : {Delivering}개 </Typography>    \r\n                </IconButton>\r\n            </Box>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n            <Box  border={1} borderLeft={0} p={2} className={classes.BoxComponent}>\r\n                <IconButton disableRipple color=\"inherit\" \r\n                onClick={() => history.push('/myPage/discount-coupon')}\r\n                >\r\n                    <Typography variant=\"h6\" >할인쿠폰 : {Coupon}장 </Typography>\r\n                    \r\n                </IconButton>\r\n            </Box>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n            <Box  border={1} borderLeft={0}  p={2} className={classes.BoxComponent}>\r\n                <IconButton disableRipple color=\"inherit\" \r\n                onClick={() => history.push('/myPage/point')}\r\n                >\r\n                    <Typography variant=\"h6\" >적립금 : {point}원 </Typography>\r\n                </IconButton>\r\n            </Box>\r\n        </Grid>\r\n        <Grid item xs={6} sm={3}>\r\n            <Box bgcolor=\"#F8F8F8\" border={1} borderTop={0} color=\"#555555\" borderColor=\"#B6B5B5\" p={2}>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n                My 쇼핑\r\n            </Typography>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                {shopItems.map(item => (\r\n                    <ListItem \r\n                    button\r\n                    key={item.text}\r\n                    onClick={() => history.push(item.path)}\r\n                    className={location.pathname === item.path ? classes.active : null}\r\n                    >   \r\n                        <ListItemText primary={item.text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider/>\r\n            <Typography variant=\"h5\" className={classes.subTitle}>\r\n                My 혜택\r\n            </Typography>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            {effectItems.map(item => (\r\n                    <ListItem \r\n                    button\r\n                    key={item.text}\r\n                    onClick={() => history.push(item.path)}\r\n                    className={location.pathname === item.path ? classes.active : null}\r\n                    >   \r\n                        <ListItemText primary={item.text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider/>\r\n            <Typography variant=\"h5\" className={classes.subTitle}>\r\n                My 정보\r\n            </Typography>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            {informItems.map(item => (\r\n                    <ListItem \r\n                    button\r\n                    key={item.text}\r\n                    onClick={() => history.push(item.path)}\r\n                    className={location.pathname === item.path ? classes.active : null}\r\n                    >   \r\n                        <ListItemText primary={item.text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9}>\r\n            <br/>\r\n                {\r\n                    props.match.params.PageMenu === 'order' ?\r\n                    <Order/> : null\r\n                }\r\n                {\r\n                    props.match.params.PageMenu === 'cancel-return-exchange' ?\r\n                    <Cancel/> : null\r\n                }\r\n                {\r\n                    props.match.params.PageMenu === 'review' ?\r\n                    <ReviewPage/> : null\r\n                }\r\n                {\r\n                    props.match.params.PageMenu === 'review&productId=1' ?\r\n                    <ReviewWrite/> : null\r\n                }\r\n                {\r\n                    props.match.params.PageMenu === 'discount-coupon' ?\r\n                    <CouponPage/> : null\r\n                }\r\n                {\r\n                    props.match.params.PageMenu === 'point' ?\r\n                    <PointPage/> : null\r\n                }\r\n                {\r\n                    props.match.params.PageMenu === 'DeliveryPlace' ?\r\n                    <div>\r\n                        <DeliveryCard/>\r\n                        <DeliveryCard/>\r\n                    </div> : null\r\n                }\r\n                {\r\n                    props.match.params.PageMenu === 'userModify' ?\r\n                    '개인정보 수정 페이지로' : null\r\n                }\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Box bgcolor=\"#ffffff\" color=\"#000000\" p={2} className={classes.BoxComponent}>\r\n                <Typography variant=\"h6\">하단</Typography>\r\n            </Box>\r\n        </Grid>\r\n        </Grid>\r\n        </Container>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n\r\n    </>\r\n    );\r\n};\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js",["285","286","287"],"import { Grid, Paper, makeStyles, TextField, ButtonBase, Button, CircularProgress } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        textAlign: \"center\"\r\n    },\r\n    img: {\r\n        width: \"200px\",\r\n        height: \"60px\",\r\n        padding : theme.spacing(1)\r\n    },\r\n    imgDiv : {\r\n        padding : theme.spacing(1)\r\n    },\r\n    accountImg: {\r\n        width: \"20%\",\r\n        padding: theme.spacing(3),\r\n        justifyContent: \"center\",\r\n        verticalAlign : \"middle\"\r\n    },\r\n    divBox : {\r\n        [theme.breakpoints.up('md')] : {\r\n            width : \"70%\"\r\n        },\r\n        width : \"100%\",\r\n        padding : theme.spacing(2),\r\n        justifyContent: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    boxColor : {\r\n        backgroundColor : \"#eeeeee\"\r\n    }\r\n\r\n}))\r\n\r\nfunction CreditCash(props) {\r\n\r\n    const classes = useStyle()\r\n\r\n    const [Banks, setBanks] = useState(props.banks)\r\n\r\n    const [loading, setloading] = useState(true)\r\n\r\n    const [InputAccount, setInputAccount] = useState(false)\r\n\r\n    const [BankSelected, setBankSelected] = useState()\r\n    const [BankNameSelected, setBankNameSelected] = useState()\r\n\r\n    const [BankNumber, setBankNumber] = useState()\r\n\r\n    const BankHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setBankSelected(e.target.src)\r\n        setBankNameSelected(e.target.alt)\r\n        setInputAccount(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setloading(false)\r\n        }, 1500)\r\n    }, [])\r\n\r\n    const BankComponent = Banks.map((bank, index) => {\r\n\r\n        return (\r\n            <ButtonBase className={classes.imgDiv} style={{width : \"100%\"}} type=\"submit\" onClick={BankHandler}>\r\n                <Paper style={{width : \"100%\"}} variant=\"outlined\">\r\n                    <img className={classes.img} src={bank.logo} alt={bank.name} defaultValue={bank.name} />\r\n                </Paper>\r\n            </ButtonBase>\r\n        )\r\n    })\r\n\r\n\r\n    if(loading) {\r\n        return (<Grid container className={classes.root} style={{paddingTop : \"4rem\"}}>\r\n        <CircularProgress />\r\n        </Grid>)\r\n    }\r\n    else if (InputAccount) {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <p><h2 style={{ display: \"inline\" }}>계좌번호 입력</h2> (최초 1회만)</p>\r\n\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div className={classes.divBox} >\r\n                            <form>\r\n                                <Paper variant=\"outlined\">\r\n                                    <div >\r\n                                        <img className={classes.accountImg} src={BankSelected} alt={BankNameSelected} />\r\n                                        <NumberFormat customInput={TextField} name=\"AccountNumber\" style={{ fontSize: \"1.5rem\", width: \"60%\", textAlign: \"center\", verticalAlign : \"middle\" }} format=\"####-####-####-####\" mask=\"_\" />\r\n                                        </div>\r\n                                </Paper>\r\n                            </form>\r\n                        </div>\r\n                        <div  className={classes.divBox}>\r\n                        <Paper className={classes.boxColor} variant=\"outlined\">\r\n                                    <div >\r\n                                        <p><h4 >이름 </h4>\r\n                                            <h2 >고영빈</h2>\r\n                                        </p>\r\n                                    </div>\r\n                            </Paper>\r\n                        </div>\r\n                        {/* 버튼부분 수정 요망 */}\r\n                        <Button href=\"/loading\" type=\"submit\" variant=\"outlined\" style={{fontSize : \"2rem\"}}>\r\n                            등록\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <h2>은행 선택</h2>\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div style={{ width: \"450px\", justifyContent: \"center\", margin: \"auto\" }}>\r\n                            {BankComponent}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreditCash\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\types.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Store.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Dashboard.js",["288"],"import dog from './1.jpg';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nimport {CTX} from './Store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: '50px',\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    flex : {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justify: 'center',\r\n      padding: '2px'\r\n    },\r\n    chatWindow: {\r\n      width: '100%',\r\n      height: '300px',\r\n      padding: '20px',\r\n    },\r\n    chatBox: {\r\n      width: '85%'\r\n    },\r\n    button: {\r\n      width: '15%'\r\n    },\r\n  }));\r\n\r\nexport default function Dashboard(){\r\n    const classes = useStyles();\r\n\r\n  // CTX store\r\n  const [allChats] = React.useContext(CTX);\r\n  const topics = Object.keys(allChats);\r\n\r\n  // local state\r\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n  const [ textValue, changeTextValue ] = React.useState('');\r\n    \r\n    return (\r\n      <div>\r\n        <Grid container justify=\"center\">\r\n        <Paper className={classes.root}>\r\n        <Grid item xs={12}>\r\n        <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n          인공지능채팅APP\r\n        </Typography>\r\n        <div className={classes.flex}>\r\n            <div className={classes.chatWindow}>\r\n                {\r\n                  allChats[activeTopic].map((chat, i)=>(\r\n                    <div className={classes.flex} key={i}>\r\n                      <Chip avatar={<Avatar alt=\"비전\" src={dog} />} variant=\"outlined\" size=\"small\" label=\"비전\"/> \r\n                       <Typography style={{fontSize:'15px'}}>{chat.msg}</Typography>\r\n                      </div>\r\n                  ))\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className={classes.flex}>\r\n        <TextField \r\n        id=\"standard-basic\" \r\n        label=\"채팅 입력창\" \r\n        className={classes.chatBox}\r\n        value={textValue}\r\n        onChange={e => changeTextValue(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n        전송\r\n        </Button>\r\n        </div>\r\n        </Grid>\r\n      </Paper>\r\n      </Grid>\r\n      </div>\r\n    );\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingContent.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Content.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js",["289"],"import {  makeStyles, Tab, Tabs, Typography, Box, Paper, Container} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport ReviewableCard from \"./ReviewableCard\"\r\nimport ReviewedCard from \"./ReviewedCard\"\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    }\r\n  }));\r\n  \r\n  export default function ReviewPage() {\r\n    const cancelCount = 1\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    return (\r\n        <Container>\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                value={value}\r\n                variant=\"fullWidth\"\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n                >\r\n                <Tab label=\"작성 가능 상품 후기 1\" />\r\n                <Tab label=\"내가 작성한 상품후기 1\" />\r\n                </Tabs>\r\n            </Paper>\r\n            <TabPanel value={value} index={0} className={classes.panel}>\r\n              <ReviewableCard/>  \r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} className={classes.panel}>\r\n              <ReviewedCard/>\r\n            </TabPanel>\r\n      </Container>\r\n    );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js",["290","291"],"import { Box, Button, Card, CardContent, Container, Dialog, DialogActions, DialogContent, DialogContentText, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 200,\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    BoxComponent:{\r\n        height:'80px',\r\n        backgroundColor:'#ffffff',\r\n        color:'#000000',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    },\r\n    InputBoxComponent:{\r\n        height:'240px',\r\n        backgroundColor:'#ffffff',\r\n        color:'#000000',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    }\r\n  });\r\n\r\nexport default function CancelCard(){\r\n    const classes = useStyles();\r\n    // 모달창\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Container>\r\n        <Card className={classes.root} elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Dialog\r\n                        open={handleClickOpen}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                2021.04.27 배송\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                    \r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>              \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        <br/>\r\n        <Divider/>\r\n        <Box className={classes.BoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={2} style={{justifyContent:'center', display:'flex', alignItems:'center'}}>\r\n                    점수\r\n                </Grid>\r\n                <Grid item xs={12} sm={10}>\r\n                    <Input placeholder=\"점수\" inputProps={{ 'aria-label': 'description' }} />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.InputBoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={2} style={{justifyContent:'center', display:'flex', alignItems:'center'}}>\r\n                    구매후기\r\n                </Grid>\r\n                <Grid item xs={12} sm={10}>\r\n                <Box style={{display:'flex'}}>\r\n                    <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"구매후기\"\r\n                    multiline\r\n                    rows={8}\r\n                    variant=\"outlined\"\r\n                    style={{ width:'700px',maxWidth:'700px'}}\r\n                />\r\n                    </Box>\r\n                \r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.BoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={2} style={{justifyContent:'center', display:'flex', alignItems:'center'}}>\r\n                    한줄 리뷰\r\n                </Grid>\r\n                <Grid item xs={12} sm={10}>\r\n                    \r\n                    <Box style={{display:'flex'}}>\r\n                    <Input placeholder=\"한줄 리뷰\" inputProps={{ 'aria-label': 'description' }} style={{width:'700px', maxWidth:'700px'}} />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.BoxComponent}>\r\n            \r\n            <Button variant=\"outlined\" style={{width:'100px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\r\n        </Box>\r\n\r\n        </Container>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewableCard.js",["292"],"import {  Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 200,\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        minWidth: 160,\r\n        left: 10,\r\n        bottom: -20\r\n    },\r\n  });\r\n\r\nexport default function CancelCard(){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    // 모달창\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Card className={classes.root} elevation={3}>\r\n        <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                2021.04.27 배송\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                    \r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                \r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button} onClick={() => history.push('/myPage/review&productId=1')}>리뷰 쓰기</Button> \r\n                </CardActions>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}\r\n                    onClick={handleClickOpen}>\r\n                        숨기기</Button>\r\n                </CardActions>\r\n                    \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js",["293"],"import { Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, Divider, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 200,\r\n      height: 220,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        minWidth: 160,\r\n        left: 10,\r\n        bottom: -20\r\n    },\r\n  });\r\n\r\nexport default function CancelCard(){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Card className={classes.root} elevation={3}>\r\n        <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            리뷰를 삭제하시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                2021.04.27 배송\r\n                            </Typography>\r\n                            \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Divider/>\r\n                        <Typography variant=\"subtitle1\" style={{marginTop:'10px'}}>\r\n                            9/10 (2021.04.27)\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle1\" style={{marginTop:'1px'}}>\r\n                            리뷰 내용입니다 이 제품 좋네용\r\n                        </Typography>\r\n                    </Grid>\r\n                   \r\n                    </Grid>     \r\n                    \r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}>수정</Button> \r\n                </CardActions>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}\r\n                    onClick={handleClickOpen}>\r\n                        삭제</Button>\r\n                </CardActions>\r\n                    \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js",["294"],"import { Box, Card, Tabs, Tab, Container, Grid, makeStyles, Paper, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CardActions } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography component=\"div\">{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n  \r\nTabPanel.propTypes = {\r\nchildren: PropTypes.node,\r\nindex: PropTypes.any.isRequired,\r\nvalue: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nfunction createData(date, point, status, usage, deadline) {\r\n    return { date, point, status, usage, deadline };\r\n}\r\n\r\nconst rows = [\r\n    createData('2021-04-20', 1000, '승인 완료', '첫 개시 이벤트', '2022-04-20'),\r\n];\r\n\r\nconst rows2 = [\r\n    createData('2021-04-21', 500, '승인 완료', '마우스 구매'),\r\n    createData('2021-04-22', 500, '승인 완료', '헤드폰 구매'),\r\n]\r\n\r\nexport default function PointPage(){\r\n\r\n    const cancelCount = 1\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n    return(\r\n\r\n\r\n        <Container>\r\n            <Card elevation={3}>\r\n                <Grid container >\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" component=\"div\">\r\n                        사용가능 적립금 :<br/> \r\n                        <CardActions style={{justifyContent: 'flex-end'}}>\r\n                            1000원\r\n                        </CardActions>\r\n\r\n                        \r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" component=\"div\">\r\n                        한달 내 소멸 예정 적립금 :<br/>\r\n                        <CardActions style={{justifyContent: 'flex-end'}}>\r\n                            0원\r\n                        </CardActions>\r\n                    </Typography> \r\n                </Grid>\r\n                </Grid>\r\n            </Card>\r\n            <br/>\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                value={value}\r\n                variant=\"fullWidth\"\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n                >\r\n                <Tab label=\"적립내역\" />\r\n                <Tab label=\"사용내역\" />\r\n                </Tabs>\r\n            </Paper>\r\n            <TabPanel value={value} index={0} className={classes.panel}>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell style={{width:'20%'}}>거래일</TableCell>\r\n                        <TableCell style={{width:'20%'}} align=\"right\">거래 금액</TableCell>\r\n                        <TableCell style={{width:'20%'}} align=\"right\">상태</TableCell>\r\n                        <TableCell style={{width:'20%'}} align=\"right\">비고</TableCell>\r\n                        <TableCell style={{width:'20%'}} align=\"right\">유효기간</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.date}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {row.date}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.point}</TableCell>\r\n                        <TableCell align=\"right\">{row.status}</TableCell>\r\n                        <TableCell align=\"right\">{row.usage}</TableCell>\r\n                        <TableCell align=\"right\">{row.deadline}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                \r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} className={classes.panel}>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell style={{width:'20%'}}>거래일</TableCell>\r\n                        <TableCell style={{width:'20%'}} align=\"right\">거래 금액</TableCell>\r\n                        <TableCell style={{width:'20%'}} align=\"right\">상태</TableCell>\r\n                        <TableCell style={{width:'20%'}} align=\"right\">비고</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows2.map((row) => (\r\n                        <TableRow key={row.date}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {row.date}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.point}</TableCell>\r\n                        <TableCell align=\"right\">{row.status}</TableCell>\r\n                        <TableCell align=\"right\">{row.usage}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </TabPanel>\r\n        </Container>\r\n    )\r\n\r\n}\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\CouponPage.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Cancel.js",["295"],"import {makeStyles, Tab, Tabs, Typography, Box, Paper, Container} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport CancelCard from \"./CancelCard\";\r\nimport RefundWB from \"./RefundWB\"\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    }\r\n  }));\r\n  \r\n  export default function Cancel() {\r\n    const cancelCount = 1\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    return (\r\n        <Container>\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                value={value}\r\n                variant=\"fullWidth\"\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n                >\r\n                <Tab label=\"취소/반품/교환\" />\r\n                <Tab label=\"무통장환불\" />\r\n                </Tabs>\r\n            </Paper>\r\n            <TabPanel value={value} index={0} className={classes.panel}>\r\n                {\r\n                    cancelCount < 1 ? '최근 6개월간 주문하신 내역이 없습니다.' : \r\n                    <CancelCard/>\r\n                }\r\n                \r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} className={classes.panel}>\r\n                <RefundWB/>\r\n            </TabPanel>\r\n            {\r\n                value==0 ? \r\n                <div>\r\n                <br/>\r\n                - 취소/반품/교환 신청한 내역을 확인할 수 있습니다.<br/>\r\n                - 하단 상품목록에 없는 상품은 1:1문의 또는 고객센터(1111-1111)로 문의주세요.\r\n                </div>\r\n                : null\r\n            }\r\n            \r\n      </Container>\r\n    );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\Config.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\RefundWB.js",["296","297"],"import { Box, Button, Container,  Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function RefundWB(){\r\n\r\n    const useStyles = makeStyles({\r\n        paper:{\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        },\r\n        root:{\r\n            marginBottom: 0,\r\n        },\r\n        BoxComponent:{\r\n            height:'80px',\r\n            backgroundColor:'#EFEDED',\r\n            color:'#000000',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            display:'flex'\r\n        }\r\n    })\r\n    const bankNum = '214351351231'\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        \r\n\r\n        <Container>\r\n            <Grid container style={{textAlign:'center'}} className={classes.root} spacing={0} justify=\"center\">\r\n                <Grid item xs={12} sm={3} >\r\n                    <Box border={1} borderRight={0} className={classes.BoxComponent}>\r\n                        <Typography variant=\"h6\">\r\n                            무통장환불 계좌정보\r\n                        </Typography> \r\n                    </Box>\r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={7} >\r\n                <Box border={1} className={classes.BoxComponent}>\r\n                    <Typography variant=\"h6\">\r\n                        {\r\n                            bankNum=='' ? '계좌를 등록해주세요' : bankNum\r\n                        }\r\n                    </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={2}>\r\n                <Box border={1} borderLeft={0} className={classes.BoxComponent}>\r\n                    <Button variant=\"outlined\">\r\n                        {\r\n                            bankNum=='' ? '계좌 등록' : '계좌 변경'\r\n                        }\r\n                    </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n}\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js",["298","299","300","301","302"],"import {  Button, Card, CardActions, CardContent, CardHeader, Dialog, DialogActions, DialogTitle, Grid, IconButton, makeStyles, Typography } from '@material-ui/core'\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      height: 230,\r\n      marginBottom: 10,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        minWidth: 160,\r\n        left: 10,\r\n        bottom: 5,\r\n    },\r\n  });\r\n\r\nexport default function BuyCard(props){\r\n\r\n\r\nconsole.log(props)\r\n    const postId = props.postId\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    return(\r\n        <div>\r\n        <Card className={classes.root} elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <CardHeader\r\n                        title={\r\n                            <Typography variant= \"h6\" color=\"#000000\" style={{marginBottom: '12px'}}>\r\n                                배송완료 {bull} 4/26(월) 도착\r\n                            </Typography>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" onClick={handleClickOpen}>\r\n                                <DeleteOutlined />\r\n                            </IconButton>\r\n                        }\r\n                    />\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"주문 내역을 삭제 하시겠습니까?\"}</DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose}  value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    \r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                41,500원 {bull} 1개\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>    \r\n                    \r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}>배송조회</Button>\r\n                </CardActions>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button} >교환, 반품 신청</Button>\r\n                </CardActions>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button} onClick={() => history.push('/myPage/review')}>리뷰 작성하기</Button>\r\n                </CardActions>\r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}>판매자 문의하기</Button>\r\n                </CardActions>\r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\CancelCard.js",["303"],"import { Button, Card, CardActions, CardContent, CardHeader, Dialog, DialogActions, DialogTitle, Grid, IconButton, makeStyles, Typography } from '@material-ui/core'\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\nimport React, { useState } from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      height: 230,\r\n      marginBottom: 10,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    button: {\r\n        minWidth: 160,\r\n        left: 10,\r\n        bottom: -150\r\n    },\r\n  });\r\n\r\nexport default function CancelCard(){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    const canRemove = true;\r\n    return(\r\n        <div>\r\n        <Card className={classes.root} elevation={3}>\r\n        <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <CardHeader\r\n                        title={\r\n                            <Typography variant= \"h6\" color=\"#000000\" style={{marginBottom: '12px'}}>\r\n                                상품회수 요청 {bull} 2021년 4/21(수) 주문\r\n                            </Typography>\r\n                        }\r\n                        action={\r\n                            <IconButton aria-label=\"settings\" disabled={!canRemove} onClick={handleClickOpen}>\r\n                                <DeleteOutlined />\r\n                            </IconButton>\r\n                        }\r\n                    />\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"취소 내역을 삭제 하시겠습니까?\"}</DialogTitle>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src=\"https://thumbnail6.coupangcdn.com/thumbnails/remote/120x120ex/image/retail/images/2019/12/28/10/7/01178ffe-33c8-4019-bc71-27a4fc55e8d6.jpg\" />\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                에프씨팩토리 에브리데이 클린미세먼지 방역마스트 [kf94 50개], 1팩 50매입 주문내역 길게 적기\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                41,500원 {bull} 1개\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                    \r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                \r\n                <CardActions>\r\n                    <Button variant=\"outlined\" className={classes.button}>회수 현황 보기</Button>\r\n                </CardActions>\r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostCard.js",["304"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {  useHistory } from \"react-router\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    width: 320,\r\n    borderRadius: '15px',\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  button: {\r\n    justifyContent: 'center',\r\n  }\r\n});\r\n\r\nexport default function MediaCard({post}) {\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  return (\r\n\r\n\r\n      <Card className={classes.root} style={{border:'solid', borderColor:'grey'}}>\r\n        <CardContent >\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" aria-label={post.title}\r\n             onClick={() => {history.push({\r\n              pathname:`/postDetail/${post._id}`\r\n            })}}>\r\n            {post.title}\r\n          </Typography>\r\n        </CardContent>\r\n        \r\n        <CardActions className={classes.button}>\r\n         <Typography     \r\n            color=\"textSecondary\"\r\n            display=\"inline\"\r\n            variant=\"body2\"\r\n          >\r\n            {post.pprice}원\r\n          </Typography>\r\n          <CardMedia\r\n         style={{height:\"200px\", width: \"200px\"}}\r\n          image={post.image}\r\n\r\n          title={post.title}\r\n        />\r\n      </CardActions>\r\n      <CardActions className={classes.button}>\r\n      <Button style={{fontSize:'1rem', textDecoration: 'underline', textUnderlinePosition: 'under'}} aria-label={post.keyword} > #{post.keyword} </Button>\r\n      <Button style={{fontSize:'1rem', textDecoration: 'underline', textUnderlinePosition: 'under'}} aria-label={post.keyword2}> #{post.keyword2} </Button>\r\n      <Button style={{fontSize:'1rem', textDecoration: 'underline', textUnderlinePosition: 'under'}} aria-label={post.keyword3}> #{post.keyword3} </Button>\r\n      </CardActions>\r\n      <CardActions className={classes.button}>\r\n        <Button size=\"large\" href=\"/postdetail\" aria-label='상세보기'>상세보기</Button>\r\n        <Button size=\"large\" aria-label='장바구니'>장바구니</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}",{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","severity":1,"message":"310","line":1,"column":10,"nodeType":"311","messageId":"312","endLine":1,"endColumn":15},{"ruleId":"309","severity":1,"message":"313","line":13,"column":8,"nodeType":"311","messageId":"312","endLine":13,"endColumn":14},{"ruleId":"309","severity":1,"message":"314","line":14,"column":8,"nodeType":"311","messageId":"312","endLine":14,"endColumn":15},{"ruleId":"309","severity":1,"message":"315","line":4,"column":10,"nodeType":"311","messageId":"312","endLine":4,"endColumn":22},{"ruleId":"309","severity":1,"message":"316","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":23},{"ruleId":"309","severity":1,"message":"317","line":7,"column":40,"nodeType":"311","messageId":"312","endLine":7,"endColumn":43},{"ruleId":"309","severity":1,"message":"318","line":7,"column":45,"nodeType":"311","messageId":"312","endLine":7,"endColumn":51},{"ruleId":"309","severity":1,"message":"319","line":8,"column":10,"nodeType":"311","messageId":"312","endLine":8,"endColumn":21},{"ruleId":"309","severity":1,"message":"320","line":11,"column":10,"nodeType":"311","messageId":"312","endLine":11,"endColumn":19},{"ruleId":"309","severity":1,"message":"321","line":11,"column":21,"nodeType":"311","messageId":"312","endLine":11,"endColumn":32},{"ruleId":"309","severity":1,"message":"322","line":11,"column":34,"nodeType":"311","messageId":"312","endLine":11,"endColumn":45},{"ruleId":"309","severity":1,"message":"323","line":11,"column":47,"nodeType":"311","messageId":"312","endLine":11,"endColumn":57},{"ruleId":"309","severity":1,"message":"324","line":12,"column":8,"nodeType":"311","messageId":"312","endLine":12,"endColumn":12},{"ruleId":"309","severity":1,"message":"325","line":1,"column":27,"nodeType":"311","messageId":"312","endLine":1,"endColumn":36},{"ruleId":"309","severity":1,"message":"324","line":2,"column":39,"nodeType":"311","messageId":"312","endLine":2,"endColumn":43},{"ruleId":"309","severity":1,"message":"326","line":2,"column":67,"nodeType":"311","messageId":"312","endLine":2,"endColumn":83},{"ruleId":"309","severity":1,"message":"327","line":4,"column":10,"nodeType":"311","messageId":"312","endLine":4,"endColumn":15},{"ruleId":"309","severity":1,"message":"328","line":22,"column":11,"nodeType":"311","messageId":"312","endLine":22,"endColumn":19},{"ruleId":"309","severity":1,"message":"329","line":2,"column":47,"nodeType":"311","messageId":"312","endLine":2,"endColumn":57},{"ruleId":"309","severity":1,"message":"330","line":36,"column":12,"nodeType":"311","messageId":"312","endLine":36,"endColumn":21},{"ruleId":"309","severity":1,"message":"331","line":36,"column":23,"nodeType":"311","messageId":"312","endLine":36,"endColumn":35},{"ruleId":"309","severity":1,"message":"325","line":1,"column":17,"nodeType":"311","messageId":"312","endLine":1,"endColumn":26},{"ruleId":"309","severity":1,"message":"318","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":14},{"ruleId":"309","severity":1,"message":"332","line":1,"column":187,"nodeType":"311","messageId":"312","endLine":1,"endColumn":196},{"ruleId":"309","severity":1,"message":"315","line":4,"column":10,"nodeType":"311","messageId":"312","endLine":4,"endColumn":22},{"ruleId":"309","severity":1,"message":"316","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":23},{"ruleId":"309","severity":1,"message":"333","line":7,"column":9,"nodeType":"311","messageId":"312","endLine":7,"endColumn":16},{"ruleId":"309","severity":1,"message":"334","line":8,"column":10,"nodeType":"311","messageId":"312","endLine":8,"endColumn":22},{"ruleId":"309","severity":1,"message":"328","line":56,"column":11,"nodeType":"311","messageId":"312","endLine":56,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":120,"column":8,"nodeType":"337","endLine":120,"endColumn":10,"suggestions":"338"},{"ruleId":"309","severity":1,"message":"339","line":1,"column":15,"nodeType":"311","messageId":"312","endLine":1,"endColumn":23},{"ruleId":"309","severity":1,"message":"340","line":2,"column":96,"nodeType":"311","messageId":"312","endLine":2,"endColumn":101},{"ruleId":"309","severity":1,"message":"341","line":4,"column":10,"nodeType":"311","messageId":"312","endLine":4,"endColumn":21},{"ruleId":"309","severity":1,"message":"342","line":4,"column":23,"nodeType":"311","messageId":"312","endLine":4,"endColumn":33},{"ruleId":"309","severity":1,"message":"343","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":13},{"ruleId":"309","severity":1,"message":"344","line":6,"column":44,"nodeType":"311","messageId":"312","endLine":6,"endColumn":52},{"ruleId":"309","severity":1,"message":"345","line":6,"column":92,"nodeType":"311","messageId":"312","endLine":6,"endColumn":103},{"ruleId":"309","severity":1,"message":"346","line":109,"column":14,"nodeType":"311","messageId":"312","endLine":109,"endColumn":22},{"ruleId":"309","severity":1,"message":"347","line":11,"column":7,"nodeType":"311","messageId":"312","endLine":11,"endColumn":15},{"ruleId":"309","severity":1,"message":"348","line":19,"column":7,"nodeType":"311","messageId":"312","endLine":19,"endColumn":12},{"ruleId":"309","severity":1,"message":"349","line":14,"column":8,"nodeType":"311","messageId":"312","endLine":14,"endColumn":17},{"ruleId":"309","severity":1,"message":"350","line":48,"column":12,"nodeType":"311","messageId":"312","endLine":48,"endColumn":25},{"ruleId":"309","severity":1,"message":"351","line":50,"column":11,"nodeType":"311","messageId":"312","endLine":50,"endColumn":23},{"ruleId":"309","severity":1,"message":"352","line":55,"column":12,"nodeType":"311","messageId":"312","endLine":55,"endColumn":19},{"ruleId":"309","severity":1,"message":"353","line":57,"column":11,"nodeType":"311","messageId":"312","endLine":57,"endColumn":24},{"ruleId":"309","severity":1,"message":"343","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":13},{"ruleId":"309","severity":1,"message":"339","line":2,"column":27,"nodeType":"311","messageId":"312","endLine":2,"endColumn":35},{"ruleId":"309","severity":1,"message":"343","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":13},{"ruleId":"309","severity":1,"message":"354","line":45,"column":19,"nodeType":"311","messageId":"312","endLine":45,"endColumn":27},{"ruleId":"309","severity":1,"message":"355","line":54,"column":12,"nodeType":"311","messageId":"312","endLine":54,"endColumn":22},{"ruleId":"309","severity":1,"message":"356","line":54,"column":24,"nodeType":"311","messageId":"312","endLine":54,"endColumn":37},{"ruleId":"309","severity":1,"message":"357","line":47,"column":23,"nodeType":"311","messageId":"312","endLine":47,"endColumn":40},{"ruleId":"309","severity":1,"message":"358","line":45,"column":11,"nodeType":"311","messageId":"312","endLine":45,"endColumn":22},{"ruleId":"309","severity":1,"message":"359","line":40,"column":12,"nodeType":"311","messageId":"312","endLine":40,"endColumn":16},{"ruleId":"360","severity":1,"message":"361","line":81,"column":25,"nodeType":"362","endLine":81,"endColumn":177},{"ruleId":"360","severity":1,"message":"361","line":71,"column":25,"nodeType":"362","endLine":71,"endColumn":177},{"ruleId":"360","severity":1,"message":"361","line":67,"column":25,"nodeType":"362","endLine":67,"endColumn":177},{"ruleId":"309","severity":1,"message":"358","line":60,"column":11,"nodeType":"311","messageId":"312","endLine":60,"endColumn":22},{"ruleId":"363","severity":1,"message":"364","line":79,"column":22,"nodeType":"365","messageId":"366","endLine":79,"endColumn":24},{"ruleId":"363","severity":1,"message":"364","line":43,"column":36,"nodeType":"365","messageId":"366","endLine":43,"endColumn":38},{"ruleId":"363","severity":1,"message":"364","line":52,"column":36,"nodeType":"365","messageId":"366","endLine":52,"endColumn":38},{"ruleId":"309","severity":1,"message":"343","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":13},{"ruleId":"309","severity":1,"message":"325","line":4,"column":26,"nodeType":"311","messageId":"312","endLine":4,"endColumn":35},{"ruleId":"309","severity":1,"message":"367","line":35,"column":11,"nodeType":"311","messageId":"312","endLine":35,"endColumn":17},{"ruleId":"309","severity":1,"message":"328","line":38,"column":11,"nodeType":"311","messageId":"312","endLine":38,"endColumn":19},{"ruleId":"360","severity":1,"message":"361","line":93,"column":25,"nodeType":"362","endLine":93,"endColumn":177},{"ruleId":"360","severity":1,"message":"361","line":77,"column":25,"nodeType":"362","endLine":77,"endColumn":177},{"ruleId":"309","severity":1,"message":"368","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":22},"no-native-reassign",["369"],"no-negated-in-lhs",["370"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Sidebar' is defined but never used.","'LockOutlined' is defined but never used.","'CopyrightFooter' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'useDispatch' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Card' is defined but never used.","'useEffect' is defined but never used.","'CircularProgress' is defined but never used.","'Check' is defined but never used.","'dispatch' is assigned a value but never used.","'Typography' is defined but never used.","'CreditNum' is assigned a value but never used.","'setCreditNum' is assigned a value but never used.","'TableBody' is defined but never used.","'addCart' is defined but never used.","'registerUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["371"],"'useState' is defined but never used.","'Input' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","'Exposure' is defined but never used.","'ZoomInSharp' is defined but never used.","'zomReset' is defined but never used.","'newsPost' is assigned a value but never used.","'theme' is assigned a value but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleChange2' is assigned a value but never used.","'setBanks' is assigned a value but never used.","'BankNumber' is assigned a value but never used.","'setBankNumber' is assigned a value but never used.","'changeActiveTopic' is assigned a value but never used.","'cancelCount' is assigned a value but never used.","'open' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'postId' is assigned a value but never used.","'CardActionArea' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},"Update the dependencies array to be: [postId]",{"range":"374","text":"375"},[3567,3569],"[postId]"]

