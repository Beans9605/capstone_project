[{"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\index.js":"1","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\serviceWorker.js":"2","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\App.js":"3","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\index.js":"4","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\hoc\\auth.js":"5","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"6","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\PayPage.js":"7","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js":"8","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\MainPage.js":"9","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"10","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js":"11","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Category.js":"12","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js":"13","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyCategory.js":"14","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Chat.js":"15","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Nav.js":"16","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Introduce\\Introduce.js":"17","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostingPage.js":"18","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Privacy.js":"19","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js":"20","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js":"21","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js":"22","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js":"23","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js":"24","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewVoiceWrite.js":"25","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\QnaPage.js":"26","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\BuyPage\\BuyPage.js":"27","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx":"28","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostDetailPage.js":"29","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\adminPost_reducer.js":"30","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\user_reducer.js":"31","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\user_actions.js":"32","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js":"33","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\types.js":"34","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js":"35","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\OCRpage\\OCRresult.js":"36","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\Config.js":"37","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx":"38","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostCard.js":"39","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Store.js":"40","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Dashboard.js":"41","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyContent.jsx":"42","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Content.jsx":"43","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js":"44","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js":"45","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js":"46","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js":"47","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js":"48","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx":"49"},{"size":1593,"mtime":1622682375975,"results":"50","hashOfConfig":"51"},{"size":5086,"mtime":1618302477010,"results":"52","hashOfConfig":"51"},{"size":4542,"mtime":1622682375729,"results":"53","hashOfConfig":"51"},{"size":226,"mtime":1621151187169,"results":"54","hashOfConfig":"51"},{"size":1584,"mtime":1620902234366,"results":"55","hashOfConfig":"51"},{"size":8081,"mtime":1622682375732,"results":"56","hashOfConfig":"51"},{"size":4578,"mtime":1622446118646,"results":"57","hashOfConfig":"51"},{"size":4097,"mtime":1620235166891,"results":"58","hashOfConfig":"51"},{"size":5097,"mtime":1621254600257,"results":"59","hashOfConfig":"51"},{"size":30655,"mtime":1620966888455,"results":"60","hashOfConfig":"51"},{"size":3169,"mtime":1622801225834,"results":"61","hashOfConfig":"51"},{"size":399,"mtime":1620996564983,"results":"62","hashOfConfig":"51"},{"size":1231,"mtime":1620235166891,"results":"63","hashOfConfig":"51"},{"size":409,"mtime":1621584026395,"results":"64","hashOfConfig":"51"},{"size":224,"mtime":1620966888420,"results":"65","hashOfConfig":"51"},{"size":8261,"mtime":1622682375886,"results":"66","hashOfConfig":"51"},{"size":2271,"mtime":1620966888433,"results":"67","hashOfConfig":"51"},{"size":8709,"mtime":1622682375934,"results":"68","hashOfConfig":"51"},{"size":1221,"mtime":1622682375854,"results":"69","hashOfConfig":"51"},{"size":1221,"mtime":1622682375842,"results":"70","hashOfConfig":"51"},{"size":2461,"mtime":1622366051920,"results":"71","hashOfConfig":"51"},{"size":2057,"mtime":1621945447403,"results":"72","hashOfConfig":"51"},{"size":6288,"mtime":1622366050891,"results":"73","hashOfConfig":"51"},{"size":5454,"mtime":1621584289553,"results":"74","hashOfConfig":"51"},{"size":9036,"mtime":1622358886918,"results":"75","hashOfConfig":"51"},{"size":3744,"mtime":1621931326300,"results":"76","hashOfConfig":"51"},{"size":4013,"mtime":1622371133661,"results":"77","hashOfConfig":"51"},{"size":4496,"mtime":1622682375951,"results":"78","hashOfConfig":"51"},{"size":13975,"mtime":1622715163841,"results":"79","hashOfConfig":"51"},{"size":453,"mtime":1618302476970,"results":"80","hashOfConfig":"51"},{"size":623,"mtime":1621151157331,"results":"81","hashOfConfig":"51"},{"size":1102,"mtime":1621151147143,"results":"82","hashOfConfig":"51"},{"size":4176,"mtime":1622682375797,"results":"83","hashOfConfig":"51"},{"size":274,"mtime":1621151172460,"results":"84","hashOfConfig":"51"},{"size":2321,"mtime":1622682375874,"results":"85","hashOfConfig":"51"},{"size":3714,"mtime":1622682375898,"results":"86","hashOfConfig":"51"},{"size":94,"mtime":1621945447394,"results":"87","hashOfConfig":"51"},{"size":3356,"mtime":1622682375964,"results":"88","hashOfConfig":"51"},{"size":2341,"mtime":1622682375909,"results":"89","hashOfConfig":"51"},{"size":2286,"mtime":1622715163838,"results":"90","hashOfConfig":"51"},{"size":8484,"mtime":1622715163836,"results":"91","hashOfConfig":"51"},{"size":5335,"mtime":1622682375764,"results":"92","hashOfConfig":"51"},{"size":22581,"mtime":1622447179821,"results":"93","hashOfConfig":"51"},{"size":476,"mtime":1618302476979,"results":"94","hashOfConfig":"51"},{"size":685,"mtime":1620966888444,"results":"95","hashOfConfig":"51"},{"size":4830,"mtime":1620235166890,"results":"96","hashOfConfig":"51"},{"size":3602,"mtime":1620235166883,"results":"97","hashOfConfig":"51"},{"size":772,"mtime":1620966888435,"results":"98","hashOfConfig":"51"},{"size":1211,"mtime":1621573003965,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"paqdep",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"102"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\index.js",[],["222","223"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\serviceWorker.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\App.js",["224","225"],"import { react, Suspense } from 'react'\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\n// react에서 가장 중요한 개념인 dom에 router 개념을 더해 선택할 수 있게 만들어준다.\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport './App.css';\r\nimport Auth from '../hoc/auth';\r\n\r\n// 페이지에 대한 import 값\r\n//import LandingPage from './views/LandingPage/LandingPage'\r\nimport MainPage from './views/LandingPage/MainPage';\r\nimport LoginPage from './views/LoginPage/LoginPage';\r\nimport RegisterPage from './views/RegisterPage/RegisterPage';\r\nimport EnrollmentCreditPage from './views/Paymovement/EnrollmentCreditPage';\r\nimport PayPage from './views/Paymovement/PayPage';\r\nimport LoadingAndSuccess from './views/Paymovement/LoadingAndSuccess';\r\n\r\nimport PostDetailPage from './views/PostPage/PostDetailPage';\r\nimport PostSearchListPage from './views/PostPage/PostSearchListPage';\r\nimport ShoppingBascket from './views/ShoppingBaskcet/ShoppingBascket';\r\nimport Nav from './views/Navbar/Nav';\r\nimport Chat from './views/AIChat/Chat';\r\nimport Category from './views/Category/Category';\r\nimport Introduce from './views/Introduce/Introduce';\r\nimport MyCategory from './views/MyPage/MyCategory';\r\nimport DeliveryCard from './views/MyPage/MyPageComponent/DeliveryCard';\r\nimport Privacy from './views/MyPage/MyPageComponent/Privacy';\r\nimport Order from './views/MyPage/MyPageComponent/Order';\r\nimport ReviewWrite from './views/MyPage/MyPageComponent/ReviewWrite';\r\nimport PointPage from './views/MyPage/MyPageComponent/PointPage';\r\nimport ReviewPage from './views/MyPage/MyPageComponent/ReviewPage';\r\nimport QnaPage from './views/MyPage/MyPageComponent/QnaPage';\r\nimport ReviewVoiceWrite from './views/MyPage/MyPageComponent/ReviewVoiceWrite';\r\nimport BuyPage from './views/BuyPage/BuyPage';\r\nimport PostingPage from './views/PostPage/PostingPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <CssBaseline>\r\n    {/* // Suspense는 Suspense안에 있는 태그 값에 접근하기 전에 선행 후에 접근하게 된다.\r\n    // fallback 이라는 속성을 통해서 아직 데이터가 불러와지지 않았을 경우에 보여지는 화면을 만들어준다. */}\r\n    <Suspense fallback={(<div>...Loding Now</div>)}>\r\n      <Nav/>\r\n      <Switch>\r\n        {/* Switch & case 문과 비슷하게 해석하면 쉽게 접근 가능\r\n            Route는 내가 원하는 URL 경로를 만들어줌\r\n            속성 값의 path는 해당하는 URL 경로를 의미함, /는 빈 경로, 계속해서 경로를 이어서 만들어 줄 수 있음\r\n            쉽게 말하면 이 곳에서 URL 경로를 관리함 ( Front로 보여주는 경로만 )\r\n        */}\r\n\r\n\r\n         {/* sh- 본래 취지에 맞게 속성 재설정 */}\r\n         <Route exact path=\"/\" component={Auth(MainPage, null)} />\r\n        <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n        <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n        <Route exact path=\"/card\" component={EnrollmentCreditPage} />\r\n        <Route exact path=\"/dopay\" component={PayPage} />\r\n\r\n        <Route exact path=\"/MyCategory\" component={Auth(MyCategory, true)} />\r\n        <Route exact path=\"/postDetail/:postId\" component={Auth(PostDetailPage, null)} />\r\n        <Route exact path=\"/postsearchlist\" component={Auth(PostSearchListPage, null)} />\r\n        <Route exact path=\"/buy/:postId\" component={Auth(BuyPage, null)}/>\r\n        <Route exact path=\"/reviewVoiceWrite/:postId\" component={ReviewVoiceWrite} />\r\n\r\n\r\n        <Route exact path=\"/shoppingBascket\" component={Auth(ShoppingBascket,true)} />\r\n\r\n        <Route exact path=\"/chat\" component={Chat} />\r\n        <Route exact path=\"/category\" component={Category} />\r\n        <Route exact path=\"/introduce\" component={Introduce} />\r\n\r\n        <Route exact path=\"/deliveryCard\" component={DeliveryCard} />\r\n        <Route exact path=\"/privacy\" component={Privacy} />\r\n        <Route exact path=\"/order\" component={Auth(Order, true)}  />\r\n        <Route exact path=\"/reviewWrite/:postId\" component={ReviewWrite} />\r\n        <Route exact path=\"/reviewPage\" component={ReviewPage} />\r\n        <Route exact path=\"/pointPage\"component={Auth(PointPage, true)}  />\r\n        <Route exact path=\"/qnaPage\" component={Auth(QnaPage, true)} />\r\n        \r\n        <Route exact paht=\"/loading\" component={LoadingAndSuccess} />\r\n        <Route exact path=\"/reviewPage\" component={ReviewPage} />\r\n\r\n\r\n      </Switch>\r\n    </Suspense>\r\n    </CssBaseline>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\index.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\hoc\\auth.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\PayPage.js",["226","227","228","229"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, Container, makeStyles, Card, Input, Paper, Button, CircularProgress } from '@material-ui/core'\r\nimport NumberFormat from 'react-number-format'\r\nimport { Check } from '@material-ui/icons'\r\nimport LoadingAndSuccess from './LoadingAndSuccess'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router';\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        // paddingTop : theme.spacing(12)\r\n        backgroundColor : \"white\"\r\n    },\r\n    creditCard: {\r\n        paddingTop: theme.spacing(4),\r\n        margin: 'auto',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        width: \"100%\"\r\n    },\r\n    cardPadding: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    cardForm: {\r\n        width: \"100%\",\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"320px\"\r\n        }\r\n    },\r\n    card: {\r\n        border: '1px solid #dddddd',\r\n        padding: '0 0.8rem',\r\n        fontSize: '1rem',\r\n        lineHeight: '2rem',\r\n        margin: '0.2rem',\r\n        color: '#666666',\r\n        backgroundColor: '#f8f8f8'\r\n    },\r\n    cardBtn: {\r\n        marginTop: '1.5rem',\r\n        marginBottom: \"0\",\r\n        backgroundColor : theme.palette.primary\r\n    }\r\n}))\r\n\r\n\r\nfunction PayPage(props) {\r\n    const classes = useStyle()\r\n    const history = useHistory()\r\n    const [Success, setSuccess] = useState(false)\r\n\r\n\r\n    const SuccessHandle = (e) => {\r\n        // e.preventDefault()\r\n        \r\n        if(props.postId !== undefined){\r\n            let body = {\r\n                post: props.postId,\r\n                quantity: props.quantity,\r\n                size:props.size,\r\n                price: props.price,\r\n            }\r\n\r\n            axios.post('/api/purchase/create',body)\r\n            .then(response => {\r\n                \r\n                if(response.data.status) {\r\n                    setSuccess(true)\r\n                    alert('구매에 성공하였습니다.');\r\n                    history.push('/order')\r\n                }\r\n            })\r\n        }\r\n        else if(props.ShoppingList !== undefined){ //일반 쇼핑카트 결제\r\n            \r\n            let body = {\r\n                shopList: props.ShoppingList\r\n            }\r\n            axios.post('/api/purchase/createMany', body)\r\n            \r\n            axios.delete('/api/cart/allCart')\r\n            .then(response => {\r\n                if(response.data.success) {\r\n                    setSuccess(true)\r\n                    alert('구매에 성공하였습니다.');\r\n                    history.push('/order')\r\n                }\r\n            })\r\n            \r\n\r\n        }\r\n       \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Container component=\"body\" className={classes.root}>\r\n            <Grid className={classes.creditCard} component=\"h4\" container>\r\n\r\n                {Success ? \r\n                <LoadingAndSuccess />  :\r\n                <div>\r\n                <Grid item md={12}>\r\n                    <h3 >내 카드 정보</h3>\r\n                </Grid>\r\n                    <Grid item style={{margin : 'auto'}} className={classes.cardPadding} sm={6}>\r\n                        <Paper component=\"body\" className={classes.cardForm} variant=\"outlined\" >\r\n                            <form noValidate autoComplete=\"off\">\r\n\r\n                                <div >\r\n                                    <NumberFormat disabled value=\"4321431243214321\" format=\"####-####-####-####\" className={classes.card} style={{ width: '68%' }} placeholder=\"카드 번호\" />\r\n                                    <img style={{ width: \"12%\", verticalAlign: \"middle\" }} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Visa.svg/1024px-Visa.svg.png\" alt=\"VISA\" />\r\n                                    <Input disabled className={classes.card} value=\"KO YEONG BIN\" style={{ width: '80%' }} placeholder=\"이름\" />\r\n                                </div>\r\n\r\n                                <div>\r\n                                </div>\r\n                                {/* 버튼 부분 수정해야함 */}\r\n                                <Button onClick={SuccessHandle} className={classes.cardBtn} variant=\"contained\" color=\"primary\">결제</Button>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                </div>\r\n            }\r\n\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PayPage\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\EnrollmentCreditPage.js",["230","231","232"],"import React, { useState } from 'react'\r\nimport { Grid, Container,  makeStyles, Paper, Typography, ButtonBase} from '@material-ui/core'\r\nimport CreditCard from './CreditCard/CreditCard'\r\nimport CreditCash from './CreditCash/CreditCash'\r\nimport Banks from './BankInformation.json'\r\n\r\nconst useStyle = makeStyles((theme => ({\r\n    root: {\r\n        paddingTop: theme.spacing(30),\r\n        backgroundColor : theme.palette.action.hover,\r\n        height : '100%',\r\n        paddingBottom : \"30%\"\r\n    },\r\n    mainTitle: {\r\n        padding : theme.spacing(3),\r\n        borderColor : theme.palette.action.selected,\r\n        margin : theme.spacing(3)\r\n    },\r\n    creditTitle: {\r\n        width: '100%',\r\n        borderColor : theme.palette.action.selected\r\n    },\r\n    enrollement: {\r\n        padding : theme.spacing(3),\r\n    },\r\n\r\n})))\r\n\r\n\r\nfunction EnrollmentCreditPage(props) {\r\n    const classes = useStyle();\r\n\r\n    const [SelectCredit, setSelectCredit] = useState(false)\r\n    const [SelectCash, setSelectCash] = useState(false)\r\n\r\n    const [CreditNum, setCreditNum] = useState()\r\n\r\n    const HandlingCredit = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCredit === true || SelectCash === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCredit(true)\r\n        }\r\n    }\r\n    const HandlingCash = (e) => {\r\n        e.preventDefault()\r\n        if (SelectCash === true || SelectCredit === true) {\r\n            setSelectCredit(false)\r\n            setSelectCash(false)\r\n        }\r\n        else {\r\n            setSelectCash(true)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const CreditCardComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n               <CreditCard />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n    const CreditCashComponent = (Action) => {\r\n        if (Action) {\r\n            return (\r\n                <CreditCash banks={Banks.banks} />\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root} component=\"body\">\r\n            <Grid container>\r\n                <Grid item component=\"h2\" xs={12}>\r\n                    <Paper variant=\"outlined\" className={classes.mainTitle} >결제 수단 등록</Paper>\r\n\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCardComponent} onSubmit={HandlingCredit}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        신용카드\r\n                        </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                <Grid className={classes.enrollement} component=\"h2\" item xs={6}>\r\n                    <form target={CreditCashComponent} onSubmit={HandlingCash}>\r\n                        <ButtonBase type=\"submit\" style={{ alignContent: \"center\", textAlign: \"center\", width: '100%' }}>\r\n                            <Paper variant=\"outlined\" className={classes.creditTitle} >\r\n                                {/* <Typography component=\"h2\"> */}\r\n                                    <h1>\r\n                                        계좌번호\r\n                                    </h1>\r\n                                {/* </Typography> */}\r\n                            </Paper>\r\n                        </ButtonBase>\r\n                    </form>\r\n                </Grid>\r\n                {CreditCardComponent(SelectCredit)}\r\n                {CreditCashComponent(SelectCash)}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default EnrollmentCreditPage\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\MainPage.js",["233","234"],"import React from \"react\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport {  Typography ,Grid, Container, Paper, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport SubContent from './LandContents/SubContent'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nconst newsPost = {\r\n  title: \"Title Sample\",\r\n  description: \"description Sample, which codes is best code? can you choice that?\",\r\n  linkText: \"LinkText Sample\",\r\n  linkURL: \"http://localhost:3000/\",\r\n  image: \"https://source.unsplash.com/random\"\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n \r\n    h6: {\r\n      fontSize:13\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flex: {\r\n    display: 'flex',\r\n    padding: '20px',\r\n  },\r\n  AppbarContainer: {\r\n    maxWidth: '100%',\r\n    margin: theme.spacing(0, 0, 0, 0),\r\n    padding: theme.spacing(0, 0, 0, 0),\r\n    position: \"relative\",\r\n    zIndex: \"2\"\r\n },\r\n  productToolbar: {\r\n    top:\"10%\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n appbar2: {\r\n  position: \"relative\",\r\n  display: \"relative\",\r\n  alignItems: \"center\",\r\n},\r\n  }))\r\n\r\n  function MainPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n  <div>\r\n    <div className={classes.flex}>\r\n      <Container>\r\n      <React.Fragment>\r\n      <CssBaseline />\r\n      <Paper elevation={3}>\r\n      <Typography\r\n      variant=\"h5\" \r\n      style={{textAlign:'center'}}>\r\n      <br/>\r\n      당신의 Vision을 들려주세요.\r\n      <br />\r\n      </Typography>\r\n      <Typography\r\n      variant=\"subtitle1\" \r\n      style={{textAlign:'center'}}\r\n      >\r\n      저희 Vision Market은 사용자들의 리뷰를 바탕으로\r\n      <br />\r\n      시각 장애인들에게 상품을 들려줍니다.\r\n      </Typography>\r\n      <br />\r\n      </Paper>\r\n    </React.Fragment>\r\n    </Container>\r\n    </div>\r\n    <div>\r\n    <Container className={classes.AppbarContainer} >\r\n    <AppBar className={classes.appbar2} style={{ backgroundColor: \"#505050\" }}>\r\n                <Toolbar >\r\n                    <Button color=\"inherit\" aria-label=\"모든 카테고리\" href=\"/category\" style={{ fontSize: '1.2rem' }}>\r\n                            모든 카테고리\r\n                    </Button>\r\n                    <Button color=\"inherit\" aria-label=\"소개 및 안내\" href=\"/introduce\" style={{ fontSize: '1.2rem' }}>\r\n                            소개 및 안내\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            </Container>\r\n            </div>\r\n            <Container>\r\n          <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 인기상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 신상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Toolbar className={classes.productToolbar}>\r\n                        <Typography\r\n                            variant=\"h5\">\r\n                              오늘의 추천상품\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n                <Grid item xs={6} sm={3}>\r\n                    <SubContent />\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n            </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default MainPage;","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["235","236","237","238","239"],"import { Container, CssBaseline, Grid, makeStyles, Typography, Button, Box, Link } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport React, { useState } from 'react'\r\nimport CopyrightFooter from '../CopyrightFooter/CopyrightFooter'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from 'formik'\r\nimport { registerUser } from '../../../_action/user_actions'\r\nimport HearingIcon from '@material-ui/icons/Hearing';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root : {\r\n    //     // paddingTop : theme.spacing(25)\r\n    // },\r\n    paper: {\r\n        paddingTop : theme.spacing(23),\r\n        display : 'flex',\r\n        flexDirection : 'column',\r\n        alignItems : 'center'\r\n    },\r\n    avatar: {\r\n        marginTop : theme.spacing(1),\r\n        backgroundColor : theme.palette.primary.dark\r\n    },\r\n    form : {\r\n        marginTop : theme.spacing(1),\r\n        width : \"100%\"\r\n    },\r\n    onSubmit : {\r\n        margin : theme.spacing(3, 0, 2)\r\n    }\r\n}))\r\n\r\nexport default function RegisterPage(props) {\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch();\r\n    const [FormErrorMessage, setFormErrorMessage] = useState(\"\")\r\n\r\n\r\n    // 라디오\r\n    const [selectedValue, setSelectedValue] = React.useState(\"10대\");\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedValue(event.target.value);\r\n    };\r\n      \r\n    // 체크박스 \r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChange2 = (event) => {\r\n          setChecked(event.target.checked);\r\n    };\r\n\r\n    // 페이지 넘어가는 부분\r\n    const [NextPage, setNextPage] = useState(1);\r\n\r\n    const ButtonHandler = (e) => {\r\n        if(NextPage !== 4){\r\n            e.preventDefault()\r\n            setNextPage(NextPage+1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지가 4일 경우(===메인으로 돌아가기, 쇼핑창)\r\n        }\r\n    }\r\n\r\n    const ButtonHandler2 = (e) => {\r\n        if(NextPage !== 1){\r\n            e.preventDefault()\r\n            setNextPage(NextPage-1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n            // 페이지 1일 경우 뒤로(===메인으로돌아가기, 로그인창) \r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        name : Yup.string().required(\"이름을 입력해주세요.\"),\r\n        birth : Yup.string().min(8, \"생년월일은 8자로 입력해주세요.\").required(\"생년월일이 필요합니다.\"),\r\n        id : Yup.string().required('아이디가 필요합니다.'),\r\n        password : Yup.string().min(4, \"Password는 최소 4자 이상이여야 합니다.\").required('password가 필요합니다.'),\r\n        confirmPassword : Yup.string().oneOf([Yup.ref('password'), null], 'Password는 서로 일치해야합니다.').required('Password 확인란에 Password를 입력해주세요.')   \r\n    })\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues : {\r\n            name : \"\",\r\n            birth : \"\",\r\n            id : \"\",\r\n            password : \"\",\r\n            confirmPassword : \"\"\r\n        },\r\n        validationSchema : validationSchema,\r\n        onSubmit : ((values, {setSubmitting}) => {\r\n            setTimeout(() => {\r\n                let dataToSubmit = {\r\n                    name : values.name,\r\n                    birth : values.birth,\r\n                    id : values.id,\r\n                    password : values.password,\r\n                }\r\n                \r\n                dispatch(registerUser(dataToSubmit))\r\n                .then(response => {\r\n                    if(response.payload.success) {\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    }\r\n                }).catch((err) => {\r\n                    setFormErrorMessage(\"잘못된 형식입니다.\")\r\n                    setTimeout(() => {\r\n                        setFormErrorMessage('')\r\n                    }, 3000);\r\n                })\r\n                setSubmitting(false)\r\n            }, 500)\r\n        })\r\n    })\r\n\r\n    if(NextPage === 1) {\r\n        return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12}> \r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"name\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"이름\"\r\n                                autoFocus\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.name && Boolean(formik.errors.name)}\r\n                                helperText= {formik.touched.name && formik.errors.name}\r\n                                alt=\"이름입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"birth\"\r\n                                name=\"birth\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"birth\"\r\n                                label=\"생년월일(8자리)\"\r\n                                type='birth'\r\n                                value={formik.values.birth}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.birth && Boolean(formik.errors.birth)}\r\n                                helperText = {formik.touched.birth && formik.errors.birth}\r\n                                alt=\"생년월일8자리입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        메인으로돌아가기\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 2){\r\n            return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"id\"\r\n                                name=\"id\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"id\"\r\n                                label=\"ID\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"아이디입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"current-password\"\r\n                                name=\"password\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type='password'\r\n                                value={formik.values.password}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText = {formik.touched.password && formik.errors.password}\r\n                                alt=\"비밀번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField \r\n                                autoComplete=\"confirm-password\"\r\n                                name=\"confirmPassword\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type='password'\r\n                                value={formik.values.confirmPassword}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\r\n                                helperText = {formik.touched.confirmPassword && formik.errors.confirmPassword}\r\n                                alt=\"비밀번호확인입력창\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n        )} else if(NextPage === 3){\r\n            return(\r\n        <Container component='main' maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p>\r\n                    지금부터 비전 마켓 회원가입에 대해 안내해 드리겠습니다.<br />\r\n                    회원가입은 순서에 따라 주민번호, 아이디, 비밀번호, 주소 등을 단계별로 입력하신 후,\r\n                    장애인 복지카드 사본은 팩스나 메일로 제출해주셔야 혜택이 적용됩니다.\r\n                    Tap 키를 사용하여 앞으로 이동하며 Tap과 shift키를 사용하여 뒤로 이동할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                        <Grid item xs={9} sm={10}>\r\n                            <TextField\r\n                                autoComplete=\"address\"\r\n                                name=\"address\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                autoFocus\r\n                                value={formik.values.email}\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                error = {formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText= {formik.touched.email && formik.errors.email}\r\n                                alt=\"주소입력창\"\r\n                            /> </Grid>\r\n                            <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>검색</Button>\r\n                        </Grid>\r\n                        <Grid item xs={5} sm={6} >\r\n                            <TextField\r\n                                autoComplete=\"ph\"\r\n                                name=\"ph\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"ph\"\r\n                                label=\"PH\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"전화번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={4} >\r\n                            <TextField\r\n                                autoComplete=\"CertifiNumber\"\r\n                                name=\"CertifiNumber\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"CertifiNumber\"\r\n                                label=\"인증번호\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                alt=\"인증번호입력창\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2} sm={2}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{height:'50px', fontSize:'16px'}}>인증</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                이미 가입하셨나요? 로그인하기\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {FormErrorMessage && (\r\n                        <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{FormErrorMessage}</p></label>\r\n\r\n                    )}\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n        </Container>\r\n            )} else if (NextPage === 4) {\r\n            return(\r\n                <Container component='main' maxWidth=\"xs\" >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                <br />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Vision Market <HearingIcon fontSize=\"large\"/>\r\n                </Typography>\r\n                <br />\r\n                {/* <form className={classes.form} onSubmit={formik.handleSubmit} noValidate> */}\r\n                    <Grid container spacing={2}  alignItems=\"center\" justify=\"center\">\r\n                    <Grid item xs={12} >\r\n                    <fieldset>    \r\n                    <p style={{fontSize: '1.0rem'}} >\r\n                    당신의 취향과 프로필을 선택해주세요.<br />\r\n                    스타일의 경우 중복으로 선택할 수 있습니다.<br />\r\n                    </p>\r\n                    </fieldset>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                    <fieldset>\r\n                        <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 나이 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"10대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>10대</p>}\r\n                    labelPlacement=\"10대\"\r\n                    alt=\"10대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"20대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>20대</p>}\r\n                    labelPlacement=\"20대\"\r\n                    alt=\"20대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"30대\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>30대</p>}\r\n                    labelPlacement=\"30대\"\r\n                    alt=\"30대\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"40대이상\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>40대이상</p>}\r\n                    labelPlacement=\"40대이상\"\r\n                    alt=\"40대이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 성별 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"남자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>남자</p>}\r\n                    labelPlacement=\"남자\"\r\n                    alt=\"남자\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"여자\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>여자</p>}\r\n                    labelPlacement=\"여자\"\r\n                    alt=\"여자\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />                    \r\n                    <div style={{fontSize: '1.0rem'}}>[ 키 ]</div>\r\n                    <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" alignItems=\"center\" justify=\"center\">\r\n                    <FormControlLabel\r\n                    value=\"140\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm 이하</p>}\r\n                    labelPlacement=\"140\"\r\n                    alt=\"150센티미터이하\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"150\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>150cm</p>}\r\n                    labelPlacement=\"150\"\r\n                    alt=\"150센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"160\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>160cm</p>}\r\n                    labelPlacement=\"160\"\r\n                    alt=\"160센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"170\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>170cm</p>}\r\n                    labelPlacement=\"170\"\r\n                    alt=\"170센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"180\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>180cm</p>}\r\n                    labelPlacement=\"180\"\r\n                    alt=\"180센티미터\"\r\n                    />\r\n                    <FormControlLabel\r\n                    value=\"190\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={<p style={{fontSize : \"15px\"}}>190cm 이상</p>}\r\n                    labelPlacement=\"190\"\r\n                    alt=\"190센티미터이상\"\r\n                    />\r\n                    </RadioGroup>\r\n                    <hr />\r\n                    <br />\r\n                    <div style={{fontSize: '1.0rem'}}>[ 스타일 ]</div>\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"심플\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />심플\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"캐주얼\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />캐주얼\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"시크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />시크\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"유니크\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />유니크\r\n                    <br />\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"오피스\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />오피스\r\n                    <Checkbox \r\n                    color=\"primary\" alt=\"스트릿\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />스트릿\r\n                    <br />\r\n                    </fieldset>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler2}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        onSubmit={ButtonHandler2}\r\n                    >\r\n                        뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <form onSubmit={ButtonHandler}>\r\n                    <Button\r\n                        className={classes.onSubmit}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={formik.isSubmitting}\r\n                        // onSubmit={ButtonHandler}\r\n                        href=\"/\"\r\n                    >\r\n                        가입완료\r\n                    </Button>\r\n                    </form>\r\n                    </Grid>\r\n                    </Grid>\r\n                {/* </form> */}\r\n            </div>\r\n            <Box mt={5}>\r\n                <CopyrightFooter />\r\n            </Box>\r\n            </Container>\r\n            )} else {\r\n            return(\r\n                <div> hi </div>\r\n                // 자동 로그인 후 메인 페이지로 이동\r\n            )\r\n        }\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostSearchListPage.js",["240","241","242"],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Category.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\LoadingAndSuccess.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyCategory.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Chat.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Navbar\\Nav.js",["243","244","245","246"],"import React,{useState} from 'react'\r\nimport { Box, Grid, makeStyles,  AppBar, Toolbar, InputBase, Container } from '@material-ui/core'\r\nimport { useHistory } from 'react-router';\r\nimport axios from \"axios\";\r\nimport { ZoomOut, ZoomIn, RecordVoiceOver, Exposure, Brightness6, ShoppingCart, ExitToApp, ZoomInSharp } from '@material-ui/icons'\r\n\r\nimport { fade } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n    },\r\n    BoxComponent2: {\r\n        minWidth: '230px',\r\n        textAlign: 'center',\r\n        height: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        color: \"#ffffff\",\r\n        borderColor: '#B6B5B5'\r\n        \r\n    },\r\n    appbar: {\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    iconComponent: {\r\n        margin: '0', padding: '0',\r\n        color: '#ffffff'\r\n    },\r\n    searchIcon: {\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        right: \"-2%\",\r\n        padding: theme.spacing(0, 2),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.35)\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n    appbarContainer: {\r\n        maxWidth: '100%',\r\n        margin: theme.spacing(0, 0, 0, 0),\r\n        padding: theme.spacing(0, 0, 0, 0),\r\n        position: \"relative\",\r\n        zIndex: \"2\"\r\n    },\r\n    orderButton: {\r\n        position: \"relative\",\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    BoxComponent: {\r\n        minWidth: '200px',\r\n        height: '20px',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n    },\r\n}))\r\n\r\n\r\nfunction Nav(props) {\r\n    const classes = useStyle();\r\n    \r\n    // 확대, 축소 기능\r\n    var nowZoom = 100;\r\n    function zoomOut() {\r\n        nowZoom = nowZoom - 20;\r\n        if(nowZoom <= 100) nowZoom = 100;\r\n        zooms();\r\n    }\r\n\r\n    function zoomIn() {\r\n        nowZoom = nowZoom + 20;\r\n        if(nowZoom >= 200) nowZoom = 200;\r\n        zooms();\r\n    }\r\n\r\n    function zomReset(){\r\n        nowZoom = 100;\r\n        zooms();\r\n    }\r\n\r\n    function zooms(){\r\n        document.body.style.zoom = nowZoom + '%';\r\n    }\r\n\r\n\r\n    //sh-119 로그아웃기능 193\r\n    const histroy = useHistory()\r\n    const clickLogoutHandler = () => {\r\n      \r\n        axios.get(`/api/users/logout`)\r\n        .then(response => {\r\n            histroy.push('/')\r\n        })\r\n      }\r\n  \r\n    //seokgeun 검색기능\r\n    const [kwd, setKwd] = useState(\"\");\r\n    const handleChangeKwd = (event) => {\r\n        setKwd(event.currentTarget.value)\r\n    }\r\n\r\n    const SubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        axios.post('/api/searchs/register', {keyword:kwd})\r\n        .then((response) => {\r\n            console.log('검색데이터 생성완료');\r\n        }).catch((err) => {\r\n            console.warn(err);\r\n        })\r\n\r\n        window.location.replace(\"/postsearchlist\");\r\n\r\n        histroy.push({\r\n            pathname: '/postsearchlist',\r\n            state:{\r\n              category: \"\",\r\n              kwd: kwd\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.appbarContainer} component='main' maxWidth='xl' >\r\n            <AppBar className={classes.appbar} style={{ backgroundColor: \"#303030\" }}>\r\n                <Toolbar className={classes.toolbar} p={1} >\r\n                    <Grid container spacing={1}>\r\n\r\n                        {/* 아이콘모음  F-146 고대비 버튼 삭제 */}\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Box color=\"#000000\" className={classes.BoxComponent2} p={4} >\r\n                            <div className={classes.root}>\r\n                            <ButtonGroup variant=\"text\" color=\"inherit\">\r\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"비전마켓 바로가기\" href=\"/\">\r\n                            메인\r\n                            </Button>\r\n                            <Button style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"챗봇 실행하기\" href=\"/chat\">\r\n                            Chat\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"음성으로 검색하기\">\r\n                                <RecordVoiceOver className={classes.iconComponent} />\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"확대버튼\" onClick={zoomIn}>\r\n                                <ZoomIn className={classes.iconComponent} />\r\n                            </Button>\r\n                            <Button size=\"small\" aria-label=\"축소버튼\" onClick={zoomOut}>\r\n                                <ZoomOut className={classes.iconComponent} />\r\n                            </Button>\r\n                            </ButtonGroup>\r\n                            </div>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        {/* 검색창 */}\r\n                        <Grid item xs={12} sm={4} >\r\n                            <Box p={2}>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                                </div>\r\n                                <form onSubmit={SubmitHandler}>\r\n                                <InputBase\r\n                                onChange={handleChangeKwd}\r\n                                placeholder=\" 검색창...\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': '검색창' }}\r\n                                />\r\n                                </form>\r\n                            </div>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        {/* 주버튼 */}\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Box className={classes.BoxComponent} p={4} >\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"마이페이지로 이동하기\" href=\"/myCategory\" >\r\n                                        마이페이지\r\n                                </Button>\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} aria-label=\"장바구니로 이동하기\" href=\"/shoppingbascket\" color=\"inherit\" >\r\n                                <ShoppingCart  style={{ fontSize: '30' }} />\r\n                                        장바구니\r\n                                </Button>\r\n                                <Button className={classes.orderButton} style={{ fontSize: '1rem' }} color=\"inherit\" aria-label=\"로그아웃하기\" onClick ={clickLogoutHandler}>\r\n                                    <ExitToApp />\r\n                                        로그아웃\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Introduce\\Introduce.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostingPage.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Grid, TextField, makeStyles, Typography, Button, Select, MenuItem, InputLabel } from \"@material-ui/core\"\r\nimport Axios from 'axios'\r\nimport Dropzone from 'react-dropzone'\r\nimport { Title, PlusOne, Clear } from '@material-ui/icons'\r\nimport {useDispatch, connect} from 'react-redux'\r\nimport {USER_AUTH} from '../../../_action/types'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root : {\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n        alignContent : 'center',\r\n        display : 'flex'\r\n    }\r\n}))\r\n\r\n// {\r\n//     title \r\n//     content \r\n//     author\r\n//     //여기가 소분류 ex) 남성패션 -> 의류\r\n//     pcategory : {\r\n//         type : Schema.Types.ObjectId,\r\n//         ref : \"Category\"\r\n//     },\r\n//     purpose : {\r\n//         type : Number,\r\n//         /*\r\n//             0번 : 일반판매글(default),\r\n//             1번 : 자유형식게시글\r\n\r\n//             운영자 게시물\r\n//             10번 : 메인 화면 포스팅,\r\n//             11번 : 공지\r\n//         */\r\n//         default : 0\r\n//     },\r\n//     image : [{\r\n//         type : String\r\n//     }],\r\n//     pcolor:[{\r\n//         type: String\r\n//     }],\r\n//     pviews \r\n//     psales \r\n//     pcompany \r\n//     pprice \r\n//     pstock \r\n//     psize: \r\n//     posting : {\r\n//         type : Number,\r\n//         //게시판 별로 넘버링\r\n//     }\r\n\r\n\r\n\r\nfunction PostingPage(props) {\r\n    \r\n    const user = useSelector(state => state.user)\r\n    \r\n    \r\n\r\n    console.log(user)\r\n\r\n\r\n    const classes = useStyle();\r\n\r\n    const [Title, setTitle] = useState('')\r\n    const [FilePath, setFilePath] = useState([])\r\n    const [Filename, setFilename] = useState([])\r\n    const [Content, setContent] = useState('')\r\n    const [Author, setAuthor] = useState()\r\n    const [Pcategory, setPcategory] = useState([])\r\n\r\n    const [SelectCategory, setSelectCategory] = useState('')\r\n\r\n    const [Purpose, setPurpose] = useState(0)\r\n    const [Pcolor, setPcolor] = useState()\r\n    const [Psales, setPsales] = useState()\r\n    const [Pcompany, setPcompany] = useState()\r\n    const [Price, setPrice] = useState(0)\r\n    const [Stock, setStock] = useState()\r\n    const [Size, setSize] = useState()\r\n\r\n    const [Copen, setCopen] = useState(false)\r\n\r\n\r\n    const onDrop = (files) => {\r\n        let formData = new FormData();\r\n        const config = {\r\n            header : {'content-type' : 'multipart/form-data'}\r\n        }\r\n        formData.append('file', files[0])\r\n        Axios.post('/api/post/uploads/files', formData, config)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                console.log(response.data.url)\r\n                let filepath = FilePath\r\n                filepath.push(response.data.url)\r\n                \r\n                // if(FilePath.length === 0 && Array.isArray(FilePath)) {\r\n                //     let array = FilePath\r\n                //     array.push(response.data.url)\r\n                //     console.log(array)\r\n                //     setFilePath(array)\r\n                //     console.log(FilePath)\r\n                    \r\n                // }\r\n                // else {\r\n                    setFilePath(filepath)\r\n                    console.log(FilePath)\r\n                // }\r\n            }\r\n            else {\r\n                console.log(response.data)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const onTitleChange = (e) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onContentChange =(e) => {\r\n        setContent(e.currentTarget.value)\r\n    }\r\n\r\n    const handleCopen = () => {\r\n        setCopen(true)\r\n    }\r\n    const handleCclose = () => {\r\n        setCopen(false)\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n        setSelectCategory(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        var variables = {\r\n            title : Title,\r\n            image : []\r\n        }\r\n    }\r\n\r\n    const onURLDelete = (path) => {\r\n        setFilePath(FilePath.filter(FilePath => FilePath !== path))\r\n    }\r\n\r\n    const fileMap = FilePath.map(filePath => {\r\n        return <li key={filePath.toString()}>\r\n                <h5>{filePath}</h5>\r\n                <Button type=\"submit\" onClick={onURLDelete(filePath)}><Clear/></Button>\r\n            </li>  \r\n    })\r\n\r\n    useEffect(() => {\r\n        if(user.userData) {\r\n        setAuthor(user.userData.email)\r\n        }\r\n\r\n        \r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/category')\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                console.log(response.data.categories)\r\n                setPcategory(response.data.categories);\r\n            }\r\n        })\r\n    }, [])\r\n    return (\r\n        <Container className={classes.root} component='body' >\r\n            \r\n            <Grid className={classes.root} container >\r\n                <Grid item xs={12}>\r\n                    <h2>판매 게시물 업로드</h2>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Dropzone\r\n                        onDrop = {onDrop}\r\n                        multiple = {false}\r\n                        maxSize = {100000000000}\r\n                    >\r\n                        {({getRootProps, getInputProps, isDragActive, acceptedFiles}) => (\r\n                            <div style={{width: '300px', height : '240px', border:'1px solid lightgray'\r\n                            , alignItems:'center', justifyContent : 'center'}} {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                {\r\n                                    isDragActive ?\r\n                                    <p>Drop the files here ...</p> :\r\n                                    <p>Drag 'n' drop some files here, or click to select files</p>\r\n                                }\r\n                                {\r\n                                    acceptedFiles.map(file => {\r\n                                        return (\r\n                                        <div key={file.path}>\r\n                                            <p>{file.path}</p>\r\n                                        </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <PlusOne  />\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    \r\n                        <ul>\r\n                            {fileMap}\r\n                        </ul>\r\n                \r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <label>제목</label>\r\n                    <br/>\r\n                    <TextField variant='outlined' onChange={onTitleChange} type=\"text\" aria-label=\"제목 입력 칸\"  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <label>내용</label>\r\n                    <br/>\r\n                    <TextField variant=\"outlined\" onChange={onContentChange} type=\"text\" aria-label=\"내용 입력 칸\" />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <label>Author</label>\r\n                    <Typography>{Author}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <InputLabel id=\"카테고리 고르기\">Category</InputLabel>\r\n                    <Select\r\n                        labelId=\"카테고리 고르기\"\r\n                        id=\"category-select\"\r\n                        open={Copen}\r\n                        onClose={handleCclose}\r\n                        onOpen={handleCopen}\r\n                        value={SelectCategory}\r\n                        onChange={onCategoryChange}\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        {\r\n                            Pcategory.map((value, key) => {\r\n                                return (\r\n                                    <MenuItem key={key} value={value._id}>\r\n                                        대분류 : {value.bigName}, 소분류 : {value.smallName}\r\n                                    </MenuItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Grid>\r\n            </Grid>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default PostingPage\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Privacy.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\DeliveryCard.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\Order.js",["270","271","272","273"],"import { makeStyles, Tab, Tabs, Typography, Box, Paper, Container} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport BuyCard from \"./BuyCard\";\r\nimport axios from 'axios';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    }\r\n  }));\r\n  \r\n  export default function Order() {\r\n\r\n    let orderCount = 3;\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n\r\n    //sh 유저가 구매한 목록 받아와서 BuyCard에 뿌려준다.\r\n    const [purchaseList,setPurchaseList] = useState([])\r\n    useEffect(() => {\r\n\r\n        axios.get(`/api/purchase/purchaseList`)\r\n        .then(response => {\r\n            if(response.data.success){\r\n               if(response.data.success) {\r\n                console.log(response)\r\n                setPurchaseList(response.data.purchaseList)\r\n                \r\n            }\r\n        }\r\n        })\r\n    }, [])\r\n\r\n    const getPurchaseList = (PurchaseListObj) => {\r\n      return (\r\n          <BuyCard {...PurchaseListObj} deletePurchaseItem={e => deletePurchaseItem(e)}></BuyCard>\r\n      );\r\n  }\r\n\r\n  function deletePurchaseItem(purchaseId){ \r\n    setPurchaseList(purchaseList.filter(item => item._id !== purchaseId))\r\n}\r\n\r\n    return (\r\n        <Container style={{paddingTop:'2%'}}>\r\n            <Paper className={classes.panel}>\r\n              {\r\n                    orderCount < 1 ? '최근 6개월간 주문하신 내역이 없습니다.' : \r\n                    <div>\r\n                        {purchaseList.map(PurchaseListObj => getPurchaseList(PurchaseListObj))}\r\n                    </div>\r\n                }\r\n            </Paper>\r\n      </Container>\r\n    );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewPage.js",["274","275","276","277"],"import {  makeStyles, Typography, Box, Paper, Container} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport ReviewedCard from \"./ReviewedCard\"\r\nimport axios from 'axios'\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    }\r\n  }));\r\n  \r\n  export default function ReviewPage() {\r\n    let reviewCount = 1\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    \r\n    const [reviews, setReviews] = useState([])\r\n    const userId=localStorage.getItem('userId');\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/review/getMyReviews', {userId:userId})\r\n        .then(response => {\r\n            console.log(response.data.reviews)\r\n            setReviews(response.data.reviews)\r\n            // reviewCount = reviews.length;\r\n        })\r\n    }, [])\r\n    const ReviewedItems = reviews.map(( review, index) => {\r\n      return <ReviewedCard review = { review } title = {review.post.title} content={review.content} image={review.post.image}/>\r\n    });\r\n\r\n    return (\r\n        <Container style={{paddingTop:'2%'}}>\r\n            <Paper className={classes.root}>\r\n              {ReviewedItems}\r\n            </Paper>\r\n      </Container>\r\n    );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewWrite.js",["278","279","280","281","282","283"],"import { Box, Button, Card, CardContent, Container, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport axios from 'axios'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    BoxComponent:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex',\r\n        margin:'auto'\r\n    },\r\n    InputBoxComponent:{\r\n        height:'240px',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    }\r\n  });\r\n\r\nexport default function CancelCard(props){\r\n    const classes = useStyles();\r\n    // 모달창\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n    const [value, setValue] = React.useState(2); //별점\r\n    //추가\r\n    const [content, setContent] = useState(\"\");//내용\r\n    const [post, setPost] = useState({});\r\n    const userId=localStorage.getItem('userId');\r\n    const postId = props.match.params.postId;\r\n\r\n    const handleChangeContent = (event) => {\r\n        setContent(event.currentTarget.value)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.post('/api/post/getPost', {postId:postId})\r\n        .then(response => {\r\n            console.log(response.data.post)\r\n            setPost(response.data.post)\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (post === null || content === \"\") {\r\n            return alert('Please first fill all the fields')\r\n        }\r\n\r\n        const variables = {\r\n            author: userId,\r\n            post: post._id,\r\n            content: content,\r\n            voice: false,\r\n            star: value\r\n        }\r\n\r\n        axios.post('/api/review/uploadReview', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('Review Uploaded Successfully')\r\n                    props.history.push('/order')\r\n                } else {\r\n                    alert('Failed to upload review')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div>\r\n        <Container style={{paddingTop:'2%'}}>\r\n        <Card className={classes.root} elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    {/* <Dialog\r\n                        open={handleClickOpen}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    > */}\r\n                        {/* <DialogTitle id=\"alert-dialog-title\">{\"숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다.이 상품을 숨기시겠습니까?\"}</DialogTitle> */}\r\n                        {/* <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            숨기기한 구매후기는 복구할 수 없으며 추후 작성이 불가능합니다. 이 상품을 숨기시겠습니까?\r\n                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} value='removeNo' color=\"primary\">\r\n                                아니오\r\n                            </Button>\r\n                            <Button onClick={handleClose} value='removeYes' color=\"primary\" autoFocus>\r\n                                네\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog> */}\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src={post.image}/>\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                {post.title}\r\n                            </Typography>\r\n                            <Typography className={classes.pos}>\r\n                                2021년 04월 27일 배송완료\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        <br/>\r\n        <Divider/>\r\n        <br/>\r\n        <form>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" className={classes.BoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"legend\">[ 별점 ]</Typography>\r\n                    <Rating\r\n                    name=\"simple-controlled\"\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.InputBoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                <Box style={{display:'flex'}}>\r\n                    <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"구매후기\"\r\n                    multiline\r\n                    rows={8}\r\n                    variant=\"outlined\"\r\n                    style={{ width:'1200px'}}\r\n                    onChange={handleChangeContent}\r\n                    value={content}\r\n                />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.BoxComponent}>\r\n            <Button onClick={onSubmit}variant=\"outlined\" style={{fontSize:'1.2rem', width:'120px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\r\n        </Box>\r\n        </form>\r\n        </Container>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\PointPage.js",["284","285"],"import { Button, Box, Card, Tabs, Tab, Container, Grid, makeStyles, Paper, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CardActions } from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState,useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction TabPanel(props) {\r\n     const { children, value, index, ...other } = props;\r\n   \r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography component=\"div\">{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n  \r\nTabPanel.propTypes = {\r\nchildren: PropTypes.node,\r\nindex: PropTypes.any.isRequired,\r\nvalue: PropTypes.any.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#fefefe',\r\n    },\r\n    card: {\r\n        margin: 'auto',\r\n        padding: '1% 1%',\r\n    },\r\n    button: {\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nfunction createData(point, usage, deadline) {\r\n    return {point, usage, deadline };\r\n}\r\n\r\nconst rows = [\r\n    createData(1000, '회원가입 이벤트', '7일후 소멸'),\r\n];\r\n\r\nconst rows2 = [\r\n    createData(500, '마우스 구매', '21년 4월 21일'),\r\n    createData(500, '헤드폰 구매', '21년 3월 19일'),\r\n]\r\n\r\nexport default function PointPage(){\r\n\r\n    const cancelCount = 1\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n\r\n    //sh 포인트 조회 91\r\n    const [point,setPoint] = useState(0)\r\n    useEffect(() => {\r\n\r\n       axios.get(`/api/users/point`)\r\n       .then(response => {\r\n           if(response.data.success){\r\n               setPoint(response.data.result.point)\r\n           }\r\n       })\r\n   }, [])\r\n\r\n    return(\r\n        <Container style={{paddingTop:'2%'}}>\r\n            <Card className={classes.card}>\r\n                    <Typography variant=\"h6\" align='center'>\r\n                        사용가능 적립금은 총 {point}원 입니다.\r\n                    </Typography>\r\n                    <CardActions className={classes.button}>\r\n                    <Button \r\n                    variant='outlined' \r\n                    style={{fontSize:'1rem'}} \r\n                    size=\"large\"\r\n                    href=\"http://www.kbuwel.or.kr/Assistance/Info\">\r\n                        기부하기</Button>\r\n                    </CardActions>\r\n                </Card>\r\n            <br/>\r\n            <Paper className={classes.root}>\r\n                <Tabs\r\n                value={value}\r\n                variant=\"fullWidth\"\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                centered\r\n                >\r\n                <Tab style={{fontSize:'1rem'}} label=\"적립내역\" />\r\n                <Tab style={{fontSize:'1rem'}} label=\"사용내역\" />\r\n                </Tabs>\r\n\r\n            <TabPanel value={value} index={0} className={classes.panel}>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">적립금</TableCell>\r\n                        <TableCell align=\"center\">비고</TableCell>\r\n                        <TableCell align=\"center\">유효기간</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.date}>\r\n                        <TableCell align=\"center\">{row.point}</TableCell>\r\n                        <TableCell align=\"center\">{row.usage}</TableCell>\r\n                        <TableCell align=\"center\">{row.deadline}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                \r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} className={classes.panel}>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">사용금액</TableCell>\r\n                        <TableCell align=\"center\">사용처</TableCell>\r\n                        <TableCell align=\"center\">사용날짜</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows2.map((row) => (\r\n                        <TableRow key={row.date}>\r\n                        <TableCell align=\"center\">{row.point}</TableCell>\r\n                        <TableCell align=\"center\">{row.usage}</TableCell>\r\n                        <TableCell align=\"center\">{row.deadline}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </TabPanel>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n\r\n}\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewVoiceWrite.js",["286","287","288","289","290"],"import { Box, Button, Card, CardContent, Container, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport axios from 'axios'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    BoxComponent:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex',\r\n        margin:'auto'\r\n    },\r\n    InputBoxComponent:{\r\n        height:'240px',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    }\r\n  });\r\n\r\nexport default function ReviewVoiceWrite(props){\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = React.useState(2); //별점\r\n    const [FilePath, setFilePath] = useState(\"\");\r\n    const [post, setPost] = useState({});\r\n    const userId=localStorage.getItem('userId');\r\n    const postId = props.match.params.postId;\r\n\r\n    const handleChangeFilePath = (event) => {\r\n        setFilePath(event.currentTarget.value)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.post('/api/post/getPost', {postId:postId})\r\n        .then(response => {\r\n            console.log(response.data.post)\r\n            setPost(response.data.post)\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (post === null || FilePath === \"\") {\r\n            return alert('Please first fill all the fields')\r\n        }\r\n\r\n        const variables = {\r\n            author: userId,\r\n            post: post._id,\r\n            filepath: FilePath,\r\n            voice: true,\r\n            star: value\r\n        }\r\n\r\n        axios.post('/api/review/uploadReview', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('Review Uploaded Successfully')\r\n                    props.history.push('/order')\r\n                } else {\r\n                    alert('Failed to upload review')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    //음성녹음용\r\n    const [stream, setStream] = useState();\r\n    const [media, setMedia] = useState();\r\n    const [onRec, setOnRec] = useState(true);\r\n    const [source, setSource] = useState();\r\n    const [analyser, setAnalyser] = useState();\r\n    const [audioUrl, setAudioUrl] = useState();\r\n    const [file, setFile] = useState();\r\n    const onRecAudio = () => {\r\n        // 음원정보를 담은 노드를 생성하거나 음원을 실행또는 디코딩 시키는 일을 한다\r\n        const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n        \r\n        // 자바스크립트를 통해 음원의 진행상태에 직접접근에 사용된다.\r\n        const analyser = audioCtx.createScriptProcessor(0, 1, 1);\r\n        setAnalyser(analyser);\r\n    \r\n        function makeSound(stream) {\r\n          // 내 컴퓨터의 마이크나 다른 소스를 통해 발생한 오디오 스트림의 정보를 보여준다.\r\n          const source = audioCtx.createMediaStreamSource(stream);\r\n          setSource(source);\r\n          \r\n          // AudioBufferSourceNode 연결\r\n          source.connect(analyser);\r\n          analyser.connect(audioCtx.destination);\r\n        }\r\n        \r\n        // 마이크 사용 권한 획득 후 녹음 시작\r\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\r\n          const mediaRecorder = new MediaRecorder(stream);\r\n          mediaRecorder.start();\r\n          setStream(stream);\r\n          setMedia(mediaRecorder);\r\n          makeSound(stream);\r\n        \r\n        analyser.onaudioprocess = function (e) {\r\n            // 10초) 지나면 자동으로 음성 저장 및 녹음 중지\r\n            if (e.playbackTime > 10) {\r\n              stream.getAudioTracks().forEach(function (track) {\r\n                track.stop();\r\n              });\r\n              mediaRecorder.stop();\r\n              // 메서드가 호출 된 노드 연결 해제\r\n              analyser.disconnect();\r\n              audioCtx.createMediaStreamSource(stream).disconnect();\r\n    \r\n              mediaRecorder.ondataavailable = function (e) {\r\n                setAudioUrl(e.data);\r\n                setOnRec(true);\r\n              };\r\n            } else {// 음성 녹음이 시작됐을 때 onRec state값을 false로 변경\r\n              setOnRec(false);\r\n            }\r\n          };\r\n        });\r\n      };\r\n\r\n    const offRecAudio = () => {\r\n        // dataavailable 이벤트로 Blob 데이터에 대한 응답을 받을 수 있음\r\n        media.ondataavailable = function (e) {\r\n          setAudioUrl(e.data);\r\n          setOnRec(true);\r\n        };\r\n    \r\n        // 모든 트랙에서 stop()을 호출해 오디오 스트림을 정지\r\n        stream.getAudioTracks().forEach(function (track) {\r\n          track.stop();\r\n        });\r\n    \r\n        // 미디어 캡처 중지\r\n        media.stop();\r\n        \r\n        // 메서드가 호출 된 노드 연결 해제\r\n        analyser.disconnect();\r\n        source.disconnect();\r\n      };\r\n\r\n      const onSubmitAudioFile = useCallback(() => {\r\n        if (audioUrl) {\r\n          console.log(URL.createObjectURL(audioUrl)); // 출력된 링크에서 녹음된 오디오 확인 가능\r\n        }\r\n        // File 생성자를 사용해 파일로 변환\r\n        const sound = new File([audioUrl], \"soundBlob.m4a\", { lastModified: new Date().getTime(), type: \"audio/mpeg\" });\r\n        console.log(sound); // File 정보 출력\r\n        setFile(sound);\r\n\r\n\r\n        //곧바로 multer로 저장시키고 filepath잡아주기\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", sound)\r\n        \r\n        axios.post('/api/review/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data);\r\n\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n\r\n                } else{\r\n                    alert('음성 업로드를 실패하였습니다.');\r\n                }\r\n            })\r\n\r\n    }, [audioUrl]);\r\n        \r\n    return(\r\n        <div>\r\n        <Container style={{paddingTop:'2%'}}>\r\n        <Card className={classes.root} elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Grid container>   \r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src={post.image}/>\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                                {post.title}\r\n                            </Typography>\r\n                            <Typography className={classes.pos}>\r\n                                2021년 04월 27일 배송완료\r\n                            </Typography>\r\n                    </Grid>\r\n                    </Grid>     \r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        <br/>\r\n        <Divider/>\r\n        <br/>\r\n        <form encType='multipart/form-data'>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" className={classes.BoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"legend\">[ 별점 ]</Typography>\r\n                    <Rating\r\n                    name=\"simple-controlled\"\r\n                    value={value}\r\n                    onChange={(event, newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.InputBoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Box style={{display:'flex'}}>\r\n                    <Button onClick={onRec ? onRecAudio : offRecAudio}>녹음하기</Button>\r\n                    <Button onClick={onSubmitAudioFile}>음성 확인</Button>\r\n                   \r\n                    <Input\r\n                    onChange={handleChangeFilePath}\r\n                    value={FilePath}\r\n                    />\r\n\r\n                  </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Divider/>\r\n        <Box className={classes.BoxComponent}>\r\n            <Button onClick={onSubmit}variant=\"outlined\" style={{fontSize:'1.2rem', width:'120px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\r\n        </Box>\r\n        </form>\r\n        </Container>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\QnaPage.js",["291","292","293","294","295","296","297"],"import { Box, Button, Card, CardContent, Container, Divider, Grid, Input, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Phone } from '@material-ui/icons';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      height: 180,\r\n      minHeight: 180,\r\n      marginBottom: 10,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    BoxComponent:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex',\r\n        margin:'auto'\r\n    },\r\n    InputBoxComponent:{\r\n        height:'240px',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        display:'flex'\r\n    }\r\n  });\r\n\r\nexport default function QnaPage(props){\r\n    const classes = useStyles();\r\n\r\n    const [content, setContent] = useState(\"\");//문의내용\r\n    const [phone, setPhone] = useState(\"\");//핸드폰번호\r\n    const [user, setUser] = useState({});\r\n    const userId=localStorage.getItem('userId');\r\n\r\n    const handleChangeContent = (event) => {\r\n        setContent(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangePhone = (event) => {\r\n        setPhone(event.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`api/users/auth`)\r\n        .then(response =>{\r\n            setUser(response.data);\r\n            console.log(user.email);\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (content === \"\" || phone === \"\") {\r\n            return alert('문의내용 및 안내받을 휴대폰 번호를 입력해주세요.')\r\n        }\r\n\r\n        const variables = {\r\n            email: user.email,\r\n            content: content,\r\n            phone: phone\r\n        }\r\n\r\n        axios.post('/api/purchase/qnaRequest', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('문의가 정상적으로 완료되었습니다.')\r\n                    props.history.push('/order')\r\n                } else {\r\n                    alert('문의에 실패하였습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n    return(\r\n        <div>\r\n        <Container style={{paddingTop:'2%'}}>\r\n        <Divider/>\r\n        <br/>\r\n        <form>\r\n        <Divider/>\r\n        <Box className={classes.InputBoxComponent}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                <Box style={{display:'flex'}}>\r\n                    <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"문의내용\"\r\n                    multiline\r\n                    rows={8}\r\n                    variant=\"outlined\"\r\n                    style={{ width:'1200px'}}\r\n                    onChange={handleChangeContent}\r\n                    value={content}\r\n                />\r\n\r\n                    </Box>\r\n                    <br/>\r\n\r\n                    <Box style={{display:'flex'}}>\r\n                    <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"전화번호\"\r\n                    multiline\r\n                    rows={1}\r\n                    variant=\"outlined\"\r\n                    style={{ width:'1200px'}}\r\n                    onChange={handleChangePhone}\r\n                    value={phone}\r\n                />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n\r\n        <Box className={classes.BoxComponent}>\r\n            <Button onClick={onSubmit}variant=\"outlined\" style={{fontSize:'1.2rem', width:'120px', marginTop:'20px', marginBottom:'20px'}}>등록하기</Button>\r\n        </Box>\r\n        </form>\r\n        </Container>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\BuyPage\\BuyPage.js",["298"],"import React, { useState,useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport PayPage from '../Paymovement/PayPage';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 275,\r\n      padding: theme.spacing(12, 2),\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    flex: {\r\n      display: 'flex',\r\n      padding: '2px',\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    window: {\r\n      width: '55%',\r\n      padding: '5px',\r\n    },\r\n    windowDummy: {\r\n      width: '5%',\r\n    },\r\n    window2: {\r\n      width: '40%',\r\n      textAlign: 'right'\r\n    },\r\n  }));\r\n\r\nexport default function BuyPage(props) {\r\n    const classes = useStyles();\r\n    const [Paynow, setPaynow] = useState(false)\r\n    const [image,setImage] =useState([])\r\n    const [post, setPost] = useState({})\r\n    const location = useLocation();\r\n\r\n    console.log(props)\r\n    useEffect(() => {\r\n      axios.get(`/api/post/id?id=${location.state.data.post}`)\r\n      .then(response => {\r\n          console.log(response.data.post[0])\r\n           setPost(response.data.post[0])\r\n           setImage(response.data.post[0].image) //sh 214  // 281~284\r\n      })\r\n  }, [])\r\n\r\n    const Payhandle = (e) => {\r\n      e.preventDefault()\r\n\r\n      setPaynow(true)\r\n    }\r\n\r\n    return(\r\n\r\n<Grid item container >\r\n  <Grid item xs={10} sm={8} justify=\"center\" >\r\n      <br />\r\n      <Card className={classes.root}>\r\n          <ShoppingCartIcon fontSize=\"Large\" />\r\n\r\n\r\n  <Card className={classes.root}>\r\n          <CardContent>\r\n              <div className={classes.flex}>\r\n              <div className={classes.window}>\r\n                  <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                  상품명 : {post.title}\r\n                  </Typography>\r\n                  <CardMedia\r\n                  style={{ height: \"150px\", width: \"150px\" }}\r\n                  image={image[0]}\r\n                  title={post.title}\r\n                  />\r\n              </div>\r\n          <div className={classes.windowDummy}></div>\r\n          \r\n          <div className={classes.window2}>\r\n          <br />\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n              가격 {post.pprice}원<br />\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n                배송비 무료\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n                사이즈 : {location.state.data.size}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n                수량 : {location.state.data.quantity}\r\n          </Typography>\r\n              <br />\r\n          </div>\r\n      </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n          <hr />\r\n          <div className={classes.flex} style={{ fontSize: '0.9rem' }}>\r\n              상품가격 {post.pprice * location.state.data.quantity}원 + 배송비 0원 = 총 주문금액 {post.pprice * location.state.data.quantity}원\r\n          </div>\r\n          <hr />\r\n          <div className={classes.flex}>\r\n              <Grid item xs={1} />\r\n              <Button onClick={Payhandle} variant=\"contained\" color=\"primary\">\r\n                  구매하기\r\n                </Button>\r\n          </div>\r\n          {\r\n              Paynow && <PayPage postId={post._id} price={post.pprice}  size={location.state.data.size} quantity = {location.state.data.quantity}/>\r\n          }\r\n      </Card>\r\n\r\n  </Grid>\r\n\r\n</Grid>\r\n    )\r\n}\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingBascket.jsx",["299","300"],"import React, { useState,useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ShoppingCard from './ShoppingCard';\r\nimport PayPage from '../Paymovement/PayPage';\r\nimport { useLocation } from 'react-router';\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(12, 2),\r\n    },\r\n    window: {\r\n        width: '100%',\r\n        padding: '5px',\r\n    },\r\n    windowDummy: {\r\n        height: '5px'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        padding: '2px',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function ShoppingBascket(props) {\r\n    \r\n    const getShoppingList = (ShoppingListObj) => {\r\n        return (\r\n            <List>\r\n                <ShoppingCard {...ShoppingListObj}  deleteShoppingItem={e => deleteShoppingItem(e)} getTotalPrice = {e => getTotalPrice(e)}/>\r\n            </List>\r\n        );\r\n    }\r\n\r\n    //sh 44~60 => 38\r\n    const[ShoppingList,setShoppingList] = useState([])\r\n\r\n    useEffect(() => {\r\n \r\n        axios.post(`/api/cart/cartList`)\r\n        .then(response => {\r\n\r\n            if(response.data.success) {\r\n                console.log(response)\r\n                setShoppingList(response.data.shoppingList)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const [totalPrice,setTotalPrice] = useState(0)\r\n\r\n    useEffect(() => {\r\n \r\n        axios.post(`/api/cart/cartList`)\r\n        .then(response => {\r\n\r\n            if(response.data.success) {\r\n                setShoppingList(response.data.shoppingList)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function getTotalPrice() {\r\n        let total = 0;\r\n         ShoppingList.forEach(function(item) {\r\n            total += (item.quantity * item.post.pprice)\r\n            console.log(total)\r\n         });\r\n          setTotalPrice(total)\r\n     }\r\n       \r\n    \r\n\r\n    function deleteShoppingItem(cartId){ \r\n        setShoppingList(ShoppingList.filter(item => item._id !== cartId))\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const [Paynow, setPaynow] = useState(false)\r\n\r\n    const Payhandle = (e) => {\r\n        e.preventDefault()\r\n\r\n        setPaynow(true)\r\n    }\r\n\r\n    \r\n\r\n    const deleteAllCart = () => {\r\n\r\n        if(window.confirm(\"정말 삭제하시겠습니까??\") == true) {\r\n        axios.delete(`/api/cart/allCart`)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n               setShoppingList([])\r\n            }\r\n        })\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid item container >\r\n                <Grid item xs={1} sm={2} />\r\n                <Grid item xs={10} sm={8} justify=\"center\" >\r\n                    <br />\r\n                    <Card className={classes.root}>\r\n                        <ShoppingCartIcon fontSize=\"Large\" />\r\n                        <hr />\r\n                        <div className={classes.flex}>\r\n                            <div className={classes.window}>\r\n                                {ShoppingList.map(ShoppingListObj => getShoppingList(ShoppingListObj))}\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className={classes.flex} style={{ fontSize: '0.9rem' }}>\r\n\r\n                            상품가격 {totalPrice}원 + 배송비 0원 = 총 주문금액 {totalPrice}원\r\n                        </div>\r\n                        <hr />\r\n                        <div className={classes.flex}>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick = {deleteAllCart}>\r\n                                장바구니비우기\r\n                            </Button>\r\n                            <Grid item xs={1} />\r\n                            <Button onClick={Payhandle} variant=\"contained\" color=\"primary\">\r\n                                구매하기\r\n                             </Button>\r\n                        </div>\r\n                        {\r\n                            Paynow && <PayPage ShoppingList={{ShoppingList}}/>\r\n                        }\r\n                    </Card>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={1} sm={2} />\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostDetailPage.js",["301","302","303","304","305"],"\r\nimport { Container, CssBaseline, Grid, makeStyles, Typography, ButtonBase, Box, Button, List, ListItem, ListItemText, Divider, FormHelperText, FormControl, ButtonGroup } from '@material-ui/core'\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport PropTypes from 'prop-types'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport OCRresult from './OCRpage/OCRresult'\r\n\r\n\r\nimport axios from 'axios'\r\n//image json파일로 만들어서 코드 map 사용, 빼서 사용하면 일일이 하나씩 import할필요없음\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    padding: theme.spacing(10),\r\n    paddingTop: theme.spacing(10),\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100vh',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport default function PostDetailPage(props) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const [image, setImage] = useState([])\r\n  const [post, setPost] = useState({}) //sh 214\r\n  const postId = props.match.params.postId\r\n\r\n  const [titleimage, settitleimage] = useState(false)\r\n\r\n  const [voices, setVoices] = useState([]) //음성리뷰추가★\r\n  const [texts, setTexts] = useState([]) //일반리뷰추가★\r\n  const moment = require('moment');//변수추가★\r\n\r\n  useEffect(() => {\r\n\r\n    axios.get(`/api/post/id?id=${postId}`)\r\n      .then(response => {\r\n        console.log(response.data.post[0])\r\n        setPost(response.data.post[0])\r\n        setImage(response.data.post[0].image) //sh 214  // 281~284\r\n      })\r\n    //voice,text review 불러오기 추가★\r\n    axios.post('/api/review/getVoiceReviews', { post: postId })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setVoices(response.data.voices)\r\n        } else {\r\n          alert('Failed to get Voice Review')\r\n        }\r\n      })\r\n\r\n    axios.post('/api/review/getTextReviews', { post: postId })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setTexts(response.data.texts)\r\n        } else {\r\n          alert('Failed to get Text Review')\r\n        }\r\n      })\r\n    //voice,text review 불러오기 추가★\r\n\r\n    axios.get('/api/review/getMyPort')\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          window.localStorage.setItem('port', response.data.myPort);\r\n        } else {\r\n          alert('Failed to get Port')\r\n        }\r\n      })\r\n      if (String(image[0]).indexOf('http')) {\r\n        settitleimage(false)\r\n      }\r\n      else {\r\n        settitleimage(true)\r\n      }\r\n    //포트 불러오기 추가★\r\n  }, [])\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  //sh-254 장바구니 누르면 해당 데이터를 Cart에 넣고 해당 유저의 장바구니 페이지로 이동\r\n  const clickCartHandler = () => {\r\n\r\n    let user = props.user\r\n    let body = {\r\n      post: postId,\r\n      size: size,\r\n      quantity: quantity\r\n    }\r\n    console.log(body)\r\n    axios.post('/api/cart/create', body)\r\n      .then(response => {\r\n        if (response.data.status) {\r\n          history.push({\r\n            pathname: '/shoppingbascket',\r\n            state: { user: user }\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  //sh (Quantity , Size  175-201 해당 기능 232-238 // 244-246)   ( 상품 추가 이미지 280 ) (대표이미지 수정)\r\n  const [quantity, setQuantity] = useState(1)\r\n\r\n  const handleMinusQuantityChange = (event) => {\r\n    if (quantity > 1) {\r\n      setQuantity(quantity - 1)\r\n    }\r\n  }\r\n\r\n  const handlePlusQuantityChange = (event) => {\r\n    setQuantity(quantity + 1)\r\n  }\r\n\r\n  const [size, setSize] = React.useState('M');\r\n  const handleSizeChange = (event) => {\r\n    setSize(event.target.value);\r\n  };\r\n\r\n  const [value, setValue] = React.useState(1);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const buyHandler = () => {\r\n    let data = {\r\n      post: postId,\r\n      size: size,\r\n      quantity: quantity\r\n    }\r\n    history.push({\r\n      pathname: '/buy/${post._id}',\r\n      state: { data: data }\r\n    })\r\n  }\r\n\r\n  //     <Button variant=\"outlined\" style={{fontSize:'1.2rem'}}  aria-label=\"바로구매\" href={`/buy/${post._id}`}>바로구매</Button>\r\n\r\n\r\n  // 텍스트리뷰 보여주는 변수 추가\r\n  const TextReviewItem = texts.map((text, index) => {\r\n    return <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h6\">\r\n          별점 {text.star}점 <br />\r\n        </Typography>\r\n        <Typography >\r\n          {text.content}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button aria-label=\"리뷰추천하기\" variant=\"outlined\" style={{ fontSize: '1.1rem' }}>추천</Button>\r\n        <Button aria-label=\"리뷰비추천하기\" variant=\"outlined\" style={{ fontSize: '1.1rem' }}>비추천</Button>\r\n      </CardActions>\r\n    </Card>\r\n  });\r\n\r\n\r\n  // 음성리뷰 보여주는 변수 추가★\r\n  const voiceCards = voices.map((voice, index) => {\r\n    let baepo_index = window.location.href.indexOf('.com') + 4;\r\n    let locationPath = window.location.href.slice(7, 16) == 'localhost' ? window.location.href.slice(0, 16) : window.location.href.slice(0, baepo_index)\r\n    let newFilePath = locationPath + ':' + window.localStorage.getItem('port') + '/uploads/reviews/' + voice.filepath;\r\n    return (\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            별점 {voice.star} <br />\r\n          </Typography>\r\n          <Typography >\r\n            <Box>\r\n              <audio controls>\r\n                <source src={newFilePath} type=\"audio/mp3\" />\r\n              </audio>\r\n            </Box>\r\n            <span>{voice.author.name} _ {moment(voice.InputTime).format(\"YYYY년M월d일\")} </span>\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  })\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Container component='main' maxWidth=\"lg\" className={classes.container}>\r\n      <CssBaseline />\r\n      <Typography component=\"div\" style={{ height: '100vh' }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <ButtonBase className={classes.image}>\r\n              {\r\n                titleimage ?\r\n                <img className={classes.img} alt=\"complex\" src={image[0]} />\r\n                :\r\n                <img className={classes.img} alt=\"complex\" src={`http://localhost:5000/${image[0]}`} />\r\n              }\r\n              \r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography component=\"h1\" variant=\"h4\" >\r\n              {post.title}\r\n            </Typography>\r\n              별점 4.5점 / 총 13개의 상품 리뷰가 있습니다.\r\n              <Divider />\r\n            <List component=\"nav\" >\r\n              <ListItem><ListItemText primary=\r\n                {post.pprice} 원 />\r\n              </ListItem>\r\n            </List>\r\n\r\n            <FormControl required className={classes.formControl}>\r\n              <Typography variant=\"h6\" >\r\n                사이즈\r\n              </Typography>\r\n              <ToggleButtonGroup value={size} exclusive onChange={handleSizeChange}>\r\n                <ToggleButton variant=\"outlined\" value=\"S\" style={{ fontSize: '1rem' }} aria-label=\"S사이즈\">S</ToggleButton>\r\n                <ToggleButton variant=\"outlined\" value=\"M\" style={{ fontSize: '1rem' }} aria-label=\"S사이즈\">M</ToggleButton>\r\n                <ToggleButton variant=\"outlined\" value=\"L\" style={{ fontSize: '1rem' }} aria-label=\"L사이즈\">L</ToggleButton>\r\n                <ToggleButton variant=\"outlined\" value=\"XL\" style={{ fontSize: '1rem' }} aria-label=\"XL사이즈\">XL</ToggleButton>\r\n                <ToggleButton variant=\"outlined\" value=\"XXL\" style={{ fontSize: '1rem' }} aria-label=\"XXL사이즈\">XXL</ToggleButton>\r\n              </ToggleButtonGroup>\r\n              <br />\r\n              <Typography variant=\"h6\" >\r\n                수량\r\n              </Typography>\r\n              <ButtonGroup>\r\n                <Button variant=\"outlined\" style={{ fontSize: '1rem' }} onClick={handlePlusQuantityChange} aria-label=\"더하기\">+</Button>\r\n                <Button variant=\"outlined\" style={{ fontSize: '1rem' }} aria-label=\"1개\">{quantity}</Button>\r\n                <Button variant=\"outlined\" style={{ fontSize: '1rem' }} onClick={handleMinusQuantityChange} aria-label=\"빼기\">-</Button>\r\n              </ButtonGroup>\r\n              <br />\r\n            </FormControl>\r\n            <ButtonGroup variant=\"text\" fullWidth=\"true\">\r\n              <Button variant=\"outlined\" style={{ fontSize: '1.2rem' }} aria-label=\"장바구니\" onClick={clickCartHandler}>장바구니</Button>\r\n              <Button variant=\"outlined\" style={{ fontSize: '1.2rem' }} aria-label=\"바로구매\" onClick={buyHandler} >바로구매</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid> <br />\r\n        <Divider />\r\n        <br />\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              centered\r\n              variant=\"fullWidth\"\r\n            >\r\n              <Tab style={{ fontSize: '0.9rem' }} label=\"상세보기\" {...a11yProps(0)} />\r\n              <Tab style={{ fontSize: '0.9rem' }} label=\"음성리뷰\" {...a11yProps(1)} />\r\n              <Tab style={{ fontSize: '0.9rem' }} label=\"일반리뷰\" {...a11yProps(2)} />\r\n              <Tab style={{ fontSize: '0.9rem' }} label=\"OCR\" {...a11yProps(3)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n              <Box component=\"span\" m={1}><Button /></Box>\r\n              {image.map((img, index) => {\r\n                if (img.indexOf('http')) {\r\n                  return <Box key={index} width=\"100%\" height=\"100%\">\r\n                    <img className={classes.img} alt={`이미지 번호 ${index}`} src={`http://localhost:5000/${img}`} />\r\n                  </Box>\r\n                }\r\n                else {\r\n                  return (\r\n                    <Box key={index} width=\"100%\" height=\"100%\">\r\n                      <img className={classes.img} alt={`이미지 번호 ${index}`} src={img} />\r\n                    </Box>\r\n                  )\r\n                }\r\n              })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n\r\n              {voiceCards}\r\n\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              <Typography variant=\"h6\" style={{ padding: '10px' }}>\r\n                리뷰는 추천순으로 노출됩니다. 총 1개의 리뷰가 있습니다. <br />\r\n              </Typography>\r\n              <Card variant=\"outlined\">\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h6\">\r\n                    별점 5점 <br />\r\n                  </Typography>\r\n                  <Typography >\r\n                    키 170 / 몸무게 65 <br />\r\n          옵션 : 라지 사이즈 [ 사이즈가 적당해요. ]<br />\r\n          소재가 얇아서 더운 여름에도 가볍게 입고 다닐 것 같아요.\r\n        </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button aria-label=\"리뷰추천하기\" variant=\"outlined\" style={{ fontSize: '1.1rem' }}>추천</Button>\r\n                  <Button aria-label=\"리뷰비추천하기\" variant=\"outlined\" style={{ fontSize: '1.1rem' }}>비추천</Button>\r\n                </CardActions>\r\n              </Card>\r\n\r\n              {TextReviewItem}\r\n\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3} dir={theme.direction}>\r\n              <OCRresult pictures={image} postID={postId} />\r\n        </TabPanel>\r\n          </SwipeableViews>\r\n        </div>\r\n      </Typography>\r\n    </Container>\r\n\r\n\r\n  )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\adminPost_reducer.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_reducer\\user_reducer.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\user_actions.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\BuyCard.js",["306","307","308","309","310","311","312","313","314","315"],"import {  Button, Card, CardActions, CardContent, CardHeader ,ButtonGroup, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport React, { useState,useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      marginBottom: 10,\r\n    },\r\n\r\n  });\r\n\r\nexport default function BuyCard(props){\r\n    const moment = require('moment');\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [purchase, setPurchase] = useState({});\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n\r\n   const deletePurchaseHandler = () => {\r\n\r\n    if(window.confirm(\"해당 상품 주문을 취소 하시겠습니까??\") == true) {\r\n    let body = {\r\n        purchaseId:props._id,\r\n        quantity:props.quantity\r\n    }\r\n    axios.post('api/purchase/delete', body)\r\n    .then(response => {\r\n        if(response.data.success) {\r\n            props.deletePurchaseItem(body.purchaseId);\r\n          }\r\n    });\r\n}\r\n}\r\n    console.log(props)\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <Card elevation={3}>\r\n            <CardContent>\r\n                <Grid container>\r\n                <Grid item xs={12} sm={9}>\r\n                    <CardHeader\r\n                        title={\r\n                            <Typography variant= \"h6\" color=\"#000000\" style={{marginBottom: '12px'}}>\r\n                       주문일: {moment(props.purchaseDate).format(\"YYYY년M월DD일\")} / {moment(props.purchaseDate).add(3, 'days') > moment() ? \"배송중\":\"배송완료\"}\r\n                            </Typography>\r\n                        }\r\n                    />\r\n                    </Grid>\r\n                    <Grid container>   \r\n\r\n                    <Grid item xs={3} sm={3}>\r\n                        <img src= {props.post.image[0]}  style ={{width:350,height:300}}/>\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={9}>\r\n                            <Typography style={{marginLeft: '180px',marginBottom: '12px'}}>\r\n                              {props.post.content}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} style={{marginLeft: '180px'}}>\r\n                                {props.quantity}개, {props.total}원\r\n                            </Typography>\r\n                    </Grid>       \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                <CardActions\r\n                >\r\n                <ButtonGroup\r\n                    orientation=\"vertical\"\r\n                    fullWidth\r\n                >\r\n                     {/* <Button aria-label='주문취소하기' style={{fontSize:'1rem'}} >주문취소</Button>\r\n                     <Button aria-label='배송조회하기' style={{fontSize:'1rem'}}>배송조회</Button>\r\n                     <Button aria-label='음성리뷰작성하기' style={{fontSize:'1rem'}}>음성리뷰작성</Button>\r\n                     <Button aria-label='일반글자리뷰작성하기' style={{fontSize:'1rem'}} href='reviewWrite'>일반리뷰작성</Button>\r\n                     <Button aria-label='문의하기' style={{fontSize:'1rem'}}>문의하기</Button> */}\r\n\r\n                <Button onClick = {deletePurchaseHandler}style={{fontSize:'1rem'}}>주문취소</Button>\r\n                    <Button style={{fontSize:'1rem'}}>배송조회</Button>\r\n                    <Button style={{fontSize:'1rem'}} href={`/reviewVoiceWrite/${props.post._id}`} >음성리뷰작성</Button>\r\n                    <Button style={{fontSize:'1rem'}} href={`/reviewWrite/${props.post._id}`} >일반리뷰작성</Button>\r\n                    <Button style={{fontSize:'1rem'}} href='/qnaPage'>문의하기</Button>\r\n                </ButtonGroup>\r\n                </CardActions>\r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            \r\n        </Card>\r\n        </div>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\_action\\types.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyPageComponent\\ReviewedCard.js",["316","317","318","319","320","321"],"import { Button, Card, CardActions, CardContent, ButtonGroup, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport { CancelScheduleSend } from '@material-ui/icons';\r\nimport React, { useState } from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      marginBottom: 10,\r\n    },\r\n  });\r\n\r\nexport default function ReviewedCard(props){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        console.log(e.currentTarget.value)\r\n        setOpen(false);\r\n    }\r\n    const review = props.review;\r\n    // const [content, setContent] =useState(review.content)\r\n    // const [title, setTitle] = useState(review.title)\r\n\r\n    return(\r\n        <Card className={classes.root} elevation={3}>\r\n        <CardContent>\r\n                <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Grid container justify='center'>   \r\n                    <Grid item xs={4} sm={2}>\r\n                        <img src={props.image} />\r\n                    </Grid>\r\n                    <Grid item xs={8} sm={10}>\r\n                            <Typography style={{marginBottom: '12px'}}>\r\n                              {props.title}\r\n                            </Typography>\r\n                            <Typography >\r\n                                {\r\n                                    props.content ?\r\n                                    props.content:\r\n                                    \"음성리뷰\"\r\n                                }\r\n                            </Typography>\r\n                    </Grid> \r\n                    </Grid>     \r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                <CardActions >\r\n                <ButtonGroup\r\n                    orientation=\"vertical\"\r\n                    fullWidth\r\n                >\r\n                    <Button aria-label='리뷰수정하기' style={{fontSize:'1rem'}}>수정</Button>\r\n                    <Button aria-label='리뷰삭제하기' style={{fontSize:'1rem'}}>삭제</Button>\r\n                </ButtonGroup>\r\n                </CardActions>\r\n                </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\OCRpage\\OCRresult.js",["322","323"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Grid, makeStyles, Paper } from \"@material-ui/core\"\r\n// import {} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(3),\r\n        width: '80%',\r\n        alignContent: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n}))\r\n\r\n\r\nfunction OCRresult(props) {\r\n\r\n    const pictures = props.pictures\r\n    const postID = props.postID\r\n\r\n    console.log(pictures)\r\n\r\n    if (!pictures) {\r\n        throw Error(\"OCR을 위한 사진을 제대로 받아오지 못했습니다.\")\r\n    }\r\n    if (!postID) {\r\n        throw Error(\"OCR을 위한 포스트가 제대로 받아오지 못했습니다\")\r\n    }\r\n\r\n    const [sumText, setSumText] = useState(['']);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        var sumTexts = [];\r\n\r\n        // eslint-disable-next-line array-callback-return\r\n        pictures.map(picture => {\r\n            \r\n            const variable = {\r\n                imageUrl: picture,\r\n                postId: postID\r\n            }\r\n            if (picture.indexOf('http')) {\r\n                axios.post('/api/ocr/localimage/text/return', variable)\r\n                    .then(response => {\r\n                        if (response.data.success) {\r\n                            console.log(response.data.sumText)\r\n                            setSumText(response.data.sumText)\r\n                        }\r\n                        else {\r\n                            alert('매치되는 이미지가 없습니다')\r\n                        }\r\n                    })\r\n            }\r\n            \r\n            else {axios.post('/api/ocr/onlineimage/text/return', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.sumText)\r\n                            setSumText(response.data.sumText)\r\n                }\r\n                else {\r\n                    alert('매치되는 이미지가 없습니다.')\r\n                }\r\n            })}\r\n                \r\n\r\n        })\r\n\r\n        setSumText(sumTexts);\r\n        console.log(sumText)\r\n\r\n    }, [])\r\n\r\n    const classes = useStyle()\r\n\r\n    return (\r\n        <Container className={classes.root} component=\"body\">\r\n            <Grid container>\r\n                <Grid item sm={6}>\r\n                    {\r\n                        pictures.map((picture, index) => {\r\n                            if (picture.indexOf('http')) {\r\n                                return (\r\n                                    <img width=\"30%\" src={`http://localhost:5000/${picture}`} alt={`OCR 대상사진 ${index}`} />\r\n\r\n                                )\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <img width=\"30%\" src={picture} alt={`OCR 대상사진 ${index}`} />\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </Grid>\r\n                <Grid item sm={6}>\r\n                    <div aria-label=\"이미지 문장 설명란\">\r\n                        \r\n                        { sumText &&\r\n                            Array.from(Array(1), (e, i) => {\r\n                                return (\r\n                                    <div key={i}>\r\n                                        {sumText}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OCRresult\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\Config.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\ShoppingBaskcet\\ShoppingCard.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\PostPage\\PostCard.js",["324"],"import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {  useHistory } from \"react-router\";\r\n\r\n//sh 62 원래는 이미지 카드 위에 title을 눌러서 상세보기 페이지로 이동했었으나, 이제 상세보기 버튼을 눌러서 이동하게..\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    width: 320,\r\n    borderRadius: '15px',\r\n  },\r\n  button: {\r\n    justifyContent: 'center',\r\n  }\r\n});\r\n\r\n//sh -63 postSearchList에서 상세보기 버튼 클릭 시, 해당 상품의 페이지로 이동\r\nexport default function MediaCard({post}) {\r\n\r\n  console.log(post.image[0])\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n\r\n  const [isUrl, setIsUrl] = useState(post.image[0])\r\n\r\n  useEffect(() => {\r\n    if(post.image[0].indexOf('http')) {\r\n      setIsUrl(`http://localhost:5000/${isUrl}`)\r\n    }\r\n  }, [post])\r\n\r\n  \r\n\r\n  return (\r\n    // F-36 Card borderColor 변경 및 가격 위치 변경하면서 사진 위치 가운데로 설정 200->250\r\n    // F-53 상세보기, 장바구니 -> 상세보기 버튼만 남기는 방식\r\n      <Card className={classes.root} style={{border:'solid', borderColor:'#505050'}} >\r\n        <CardContent >\r\n          <Typography variant=\"h5\" component=\"h2\" aria-label={post.title}>\r\n            {post.title}\r\n          </Typography>\r\n          <Typography     \r\n            variant=\"body1\"\r\n          >\r\n            {post.pprice}원\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions >\r\n           <CardMedia\r\n        style={{height:\"250px\", width: \"250px\", margin: 'auto'}}\r\n        image={isUrl}\r\n        title={post.title}\r\n      />\r\n      </CardActions>\r\n      <CardActions className={classes.button}>\r\n        <Button style={{fontSize:'1.2rem'}} size=\"large\" aria-label='상품상세보기'\r\n         onClick={() => {history.push({\r\n          pathname:`/postDetail/${post._id}`\r\n        })}}>상세보기</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Store.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\AIChat\\Dashboard.js",["325","326","327","328","329","330","331","332","333","334","335"],"import dog from './1.jpg';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Avatar, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SpeechRecognition, {useSpeechRecognition} from 'react-speech-recognition'\r\nimport Speech from 'speak-tts';\r\nimport {useCookies} from 'react-cookie'\r\nimport Linkify from 'react-linkify';\r\n\r\n\r\nimport {CTX} from './Store';\r\nimport { Route } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: '50px',\r\n      padding: theme.spacing(3, 2),\r\n    },\r\n    flex : {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justify: 'center',\r\n      padding: '2px'\r\n    },\r\n    chatWindow: {\r\n      width: '100%',\r\n      height: '100%',\r\n      maxHeight: '700px',\r\n      padding: '20px',\r\n      overflow: 'auto'\r\n    },\r\n    chatBox: {\r\n      width: '85%'\r\n    },\r\n    button: {\r\n      width: '15%'\r\n    },\r\n    micIcon:{\r\n      color: \"#141414\",\r\n      '&:hover': {\r\n        color: \"#7A7A7A\",\r\n        cursor: 'pointer'\r\n      },\r\n    },\r\n    Img:{\r\n      width: '200px',\r\n      height: '200px'\r\n    }\r\n  }));\r\n\r\n  const speech = new Speech();\r\n\r\n  speech.init({\r\n    volume: 0.5,\r\n    lang: \"ko-KR\",\r\n    rate: 1,\r\n    pitch: 1,\r\n  })\r\n\r\n  export default function Dashboard(){\r\n    const classes = useStyles();\r\n    const messagesEndRef = useRef(null);\r\n    const timerRef = useRef(null);\r\n    const musictest = useRef(new Audio('https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3'))\r\n  \r\n    // CTX store\r\n    const {allChats, sendChatAction, user} = React.useContext(CTX);\r\n    const topics = Object.keys(allChats);\r\n     \r\n    // local state\r\n    const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\r\n    const [ textValue, changeTextValue ] = React.useState('');\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [count, setCount] = React.useState(2);\r\n    const [isRemember, setIsRemember] =React.useState(false);\r\n    const [token, setToken] = React.useState(Math.random().toString(36).substr(2,11));\r\n    const [cookies, setCookie, removeCookie] = useCookies(['rememberChatToken']);\r\n  \r\n    const {\r\n      interimTranscript,\r\n      finalTranscript,\r\n    } = useSpeechRecognition();\r\n  \r\n    const scrollToBottom = () => {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      setChecked(event.target.checked);\r\n    };\r\n\r\n    useEffect(()=>{\r\n      if(cookies.rememberChatToken === undefined){\r\n        setToken(token);\r\n        setIsRemember(true);\r\n        setCookie('rememberChatToken', token, {maxAge: 20000});\r\n      }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      setCount(count+1);\r\n      //보낸 사람이 비전이고 3번째 채팅 이상일 때\r\n      if(allChats.general[count-1].from === \"비전\" && checked && allChats.general.length > 2){\r\n        speech.speak({\r\n          text: allChats.general[count-1].msg,\r\n          queue: false\r\n        })\r\n        console.log(allChats.general[count-1]);\r\n        //링크 섹션에 값이 들어왔을 때, 이동\r\n        if(allChats.general[count-1].link !== \"\"){\r\n          window.open(allChats.general[count-1].link);\r\n        }\r\n        //mp3 섹션에 값이 들어왔을 때 플레이\r\n        if(allChats.general[count-1].mp3 !== \"\"){\r\n          var url;\r\n          musictest.current.pause();\r\n          //내부 파일인지 외부 파일인지 체크하고 url을 붙임\r\n          if(allChats.general[count-1].mp3.indexOf('http') === -1){\r\n            var currentUrl = window.location.host;\r\n            currentUrl = currentUrl.split(':');\r\n            url='http://'+ currentUrl[0] +':5000/uploads/reviews/' + allChats.general[count-1].mp3; \r\n          }\r\n          else{\r\n            url = allChats.general[count-1].mp3;\r\n          }\r\n\r\n          musictest.current = new Audio(url);\r\n          console.log(musictest.current)\r\n          timerRef.current = setTimeout(function(){\r\n            musictest.current.play();\r\n          }, 7000);\r\n          \r\n        }\r\n        //다시 다른 입력이 들어갔을 때 중지\r\n        else{\r\n          clearTimeout(timerRef.current);\r\n          musictest.current.pause();\r\n        }\r\n      }\r\n      scrollToBottom()\r\n    }, [sendChatAction]);\r\n  \r\n    useEffect(()=>{\r\n      if (finalTranscript !== '') {\r\n        console.log('Got final result:', finalTranscript);\r\n        sendChatAction({from: user, msg: finalTranscript, img:'', topic: activeTopic, sessionId: cookies.rememberChatToken});\r\n      }\r\n    }, [interimTranscript, finalTranscript])\r\n  \r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n      return null\r\n    }\r\n  \r\n      return (\r\n        <div>\r\n          <Grid container justify=\"center\" style={{marginTop: '50px'}}>\r\n          <Paper className={classes.root}>\r\n          <Grid item xs={12}>\r\n          <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n            인공지능채팅APP\r\n          </Typography>\r\n          <div className={classes.flex}>\r\n              <div className={classes.chatWindow}>\r\n                  {\r\n                    allChats[activeTopic].map((chat, i)=>(\r\n                      <div className={classes.flex} key={i}>\r\n                        <Chip avatar={<Avatar alt=\"비전\" src={dog}/>} variant=\"outlined\" size=\"small\" label={chat.from}/> \r\n                        <Linkify>\r\n                          <Typography style={{fontSize:'20px', padding: '5px'}}>{chat.msg}<br/>\r\n                          {(() => {\r\n                            if (chat.img !== ''){\r\n                                if(chat.img.indexOf('http') === -1){\r\n                                  var url = 'http://' + window.location.host.split(':')[0] + ':5000/' + chat.img;\r\n                                  return <img src={url} style={{width:'300px'}}/>\r\n                                }\r\n                                else{\r\n                                  return (\r\n                                    <img src={chat.img} style={{width:'300px'}}/> \r\n                                )\r\n                              }\r\n                            }\r\n                            return null;\r\n                          })()}\r\n                         </Typography>\r\n                         </Linkify>\r\n                        </div>\r\n                    ))\r\n                  }\r\n                  <div ref={messagesEndRef}/>\r\n              </div>\r\n          </div>\r\n          <div className={classes.flex}>\r\n          <TextField \r\n            id=\"standard-basic\" \r\n            label=\"채팅 입력창\" \r\n            className={classes.chatBox}\r\n            value={textValue}\r\n            onChange={e => changeTextValue(e.target.value)}\r\n            onKeyPress = {(ev) => {\r\n              if(ev.key=='Enter'){\r\n                if(textValue!== ''){\r\n                  sendChatAction({from: user, msg: textValue, img: '', topic: activeTopic, sessionId: cookies.rememberChatToken});\r\n                  changeTextValue('');\r\n                  ev.preventDefault();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          {/* <MicIcon className={classes.micIcon}\r\n          onClick={SpeechRecognition.startListening}\r\n          /> */}\r\n          <Button variant=\"contained\" color=\"primary\"\r\n          onClick={SpeechRecognition.startListening}>\r\n          음성\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\"\r\n          onClick={()=> {\r\n            if(textValue!== ''){\r\n              sendChatAction({from: user, msg: textValue, img:'', topic: activeTopic, sessionId: cookies.rememberChatToken});\r\n              changeTextValue('');\r\n            }\r\n          }}>\r\n          전송\r\n          </Button>\r\n          <FormControlLabel\r\n            defaultChecked\r\n            value=\"start\"\r\n            control={<Checkbox color=\"primary\" checked={checked} onChange={handleChange}/>}\r\n            label=\"voice\"\r\n            labelPlacement=\"start\"\r\n          />\r\n          </div>\r\n          </Grid>\r\n        </Paper>\r\n        </Grid>\r\n        </div>\r\n      );\r\n  }","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\MyPage\\MyContent.jsx",["336"],"import React,{useState,useEffect }  from 'react';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst MyContent = props => {\r\n\r\n    const [NextPage, setNextPage] = useState(1);\r\n\r\n    //나의 정보 -> 리뷰관리하기, 개인정보수정, 배송지 변경, 카드 및 계좌등록\r\n    const ButtonHandlerA = (e) => {\r\n        e.preventDefault()\r\n        setNextPage(2)\r\n       \r\n    }\r\n\r\n    const ButtonHandler = (e) => {\r\n        if(NextPage !== 1){\r\n            e.preventDefault()\r\n            setNextPage(1)\r\n        } else {\r\n            setNextPage(NextPage)\r\n        }\r\n    }\r\n    \r\n    if(NextPage === 1){\r\n        return (\r\n            <div>\r\n            <br />\r\n            <br />\r\n            <Grid container spacing={2} justify=\"center\">\r\n                <Grid item xs={10} sm = {3} >\r\n                <Button \r\n                fullWidth\r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                type=\"submit\"\r\n                href='order'\r\n                aria-label='나의쇼핑'>\r\n                나의 쇼핑\r\n                </Button>\r\n                </Grid>\r\n                <Grid item xs={10} sm = {3} >\r\n                <Button \r\n                fullWidth \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                type=\"submit\"\r\n                href='pointPage'\r\n                aria-label='나의혜택'\r\n                >\r\n                나의 혜택\r\n                </Button>\r\n                </Grid>\r\n                <Grid item xs={10} sm = {3} >\r\n                <form onSubmit = {ButtonHandlerA}>\r\n                <Button \r\n                fullWidth \r\n                variant=\"contained\" \r\n                style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                type=\"submit\"\r\n                aria-label='나의정보'\r\n                >\r\n                나의 정보\r\n                </Button>\r\n                </form>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n        )} else if(NextPage === 2) {\r\n            return (\r\n                <div>\r\n                <br />\r\n                <br />\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth\r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='reviewPage'\r\n                    aria-label='리뷰관리하기'\r\n                    >\r\n                    리뷰관리\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='privacy'\r\n                    aria-label='개인정보수정하기'\r\n                    >\r\n                    개인정보수정\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='DeliveryCard'\r\n                    aria-label='배송정보수정하기'\r\n                    >\r\n                    배송정보수정\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    href='card'\r\n                    aria-label='카드계좌등록하기'\r\n                    >\r\n                    카드/계좌등록\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={10} sm = {3} >\r\n                    <form onSubmit = {ButtonHandler}>\r\n                    <Button \r\n                    fullWidth \r\n                    variant=\"contained\" \r\n                    color=\"primary\" \r\n                    style={{height:'80px', fontSize:'20px', backgroundColor: '#505050', color: 'white'}}\r\n                    type=\"submit\"\r\n                    aria-label='뒤로가기'\r\n                    >\r\n                    뒤로\r\n                    </Button>\r\n                    </form>\r\n                    </Grid> \r\n                </Grid>\r\n                </div>\r\n                )} else {\r\n                    return(\r\n                    <div>error</div>)}}\r\n                                            \r\nexport default MyContent;","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Category\\Content.jsx",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\CopyrightFooter\\CopyrightFooter.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\SubContent.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCash\\CreditCash.js",["337","338","339"],"import { Grid, Paper, makeStyles, TextField, ButtonBase, Button, CircularProgress } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        textAlign: \"center\"\r\n    },\r\n    img: {\r\n        width: \"200px\",\r\n        height: \"60px\",\r\n        padding : theme.spacing(1)\r\n    },\r\n    imgDiv : {\r\n        padding : theme.spacing(1)\r\n    },\r\n    accountImg: {\r\n        width: \"20%\",\r\n        padding: theme.spacing(3),\r\n        justifyContent: \"center\",\r\n        verticalAlign : \"middle\"\r\n    },\r\n    divBox : {\r\n        [theme.breakpoints.up('md')] : {\r\n            width : \"70%\"\r\n        },\r\n        width : \"100%\",\r\n        padding : theme.spacing(2),\r\n        justifyContent: \"center\",\r\n        margin: \"auto\"\r\n    },\r\n    boxColor : {\r\n        backgroundColor : \"#eeeeee\"\r\n    }\r\n\r\n}))\r\n\r\nfunction CreditCash(props) {\r\n\r\n    const classes = useStyle()\r\n\r\n    const [Banks, setBanks] = useState(props.banks)\r\n\r\n    const [loading, setloading] = useState(true)\r\n\r\n    const [InputAccount, setInputAccount] = useState(false)\r\n\r\n    const [BankSelected, setBankSelected] = useState()\r\n    const [BankNameSelected, setBankNameSelected] = useState()\r\n\r\n    const [BankNumber, setBankNumber] = useState()\r\n\r\n    const BankHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        setBankSelected(e.target.src)\r\n        setBankNameSelected(e.target.alt)\r\n        setInputAccount(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setloading(false)\r\n        }, 1500)\r\n    }, [])\r\n\r\n    const BankComponent = Banks.map((bank, index) => {\r\n\r\n        return (\r\n            <ButtonBase className={classes.imgDiv} style={{width : \"100%\"}} type=\"submit\" onClick={BankHandler}>\r\n                <Paper style={{width : \"100%\"}} variant=\"outlined\">\r\n                    <img className={classes.img} src={bank.logo} alt={bank.name} defaultValue={bank.name} />\r\n                </Paper>\r\n            </ButtonBase>\r\n        )\r\n    })\r\n\r\n\r\n    if(loading) {\r\n        return (<Grid container className={classes.root} style={{paddingTop : \"4rem\"}}>\r\n        <CircularProgress />\r\n        </Grid>)\r\n    }\r\n    else if (InputAccount) {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <p><h2 style={{ display: \"inline\" }}>계좌번호 입력</h2> (최초 1회만)</p>\r\n\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div className={classes.divBox} >\r\n                            <form>\r\n                                <Paper variant=\"outlined\">\r\n                                    <div >\r\n                                        <img className={classes.accountImg} src={BankSelected} alt={BankNameSelected} />\r\n                                        <NumberFormat customInput={TextField} name=\"AccountNumber\" style={{ fontSize: \"1.5rem\", width: \"60%\", textAlign: \"center\", verticalAlign : \"middle\" }} format=\"####-####-####-####\" mask=\"_\" />\r\n                                        </div>\r\n                                </Paper>\r\n                            </form>\r\n                        </div>\r\n                        <div  className={classes.divBox}>\r\n                        <Paper className={classes.boxColor} variant=\"outlined\">\r\n                                    <div >\r\n                                        <p><h4 >이름 </h4>\r\n                                            <h2 >고영빈</h2>\r\n                                        </p>\r\n                                    </div>\r\n                            </Paper>\r\n                        </div>\r\n                        {/* 버튼부분 수정 요망 */}\r\n                        <Button href=\"/loading\" type=\"submit\" variant=\"outlined\" style={{fontSize : \"2rem\"}}>\r\n                            등록\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <Grid item md={12}>\r\n                    <h2>은행 선택</h2>\r\n                </Grid>\r\n                <Grid container style={{ width: \"80%\" }}>\r\n                    <Grid item md={12}>\r\n                        <div style={{ width: \"450px\", justifyContent: \"center\", margin: \"auto\" }}>\r\n                            {BankComponent}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreditCash\r\n","C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\Paymovement\\CreditCard\\CreditCard.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\Content.js",[],"C:\\Users\\glhn1\\Documents\\capstone_project\\client\\src\\components\\views\\LandingPage\\LandContents\\ShoppingCard.jsx",[],{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":1,"column":10,"nodeType":"346","messageId":"347","endLine":1,"endColumn":15},{"ruleId":"344","severity":1,"message":"348","line":35,"column":8,"nodeType":"346","messageId":"347","endLine":35,"endColumn":19},{"ruleId":"344","severity":1,"message":"349","line":1,"column":27,"nodeType":"346","messageId":"347","endLine":1,"endColumn":36},{"ruleId":"344","severity":1,"message":"350","line":2,"column":39,"nodeType":"346","messageId":"347","endLine":2,"endColumn":43},{"ruleId":"344","severity":1,"message":"351","line":2,"column":67,"nodeType":"346","messageId":"347","endLine":2,"endColumn":83},{"ruleId":"344","severity":1,"message":"352","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":15},{"ruleId":"344","severity":1,"message":"353","line":2,"column":47,"nodeType":"346","messageId":"347","endLine":2,"endColumn":57},{"ruleId":"344","severity":1,"message":"354","line":36,"column":12,"nodeType":"346","messageId":"347","endLine":36,"endColumn":21},{"ruleId":"344","severity":1,"message":"355","line":36,"column":23,"nodeType":"346","messageId":"347","endLine":36,"endColumn":35},{"ruleId":"344","severity":1,"message":"356","line":11,"column":7,"nodeType":"346","messageId":"347","endLine":11,"endColumn":15},{"ruleId":"344","severity":1,"message":"357","line":19,"column":7,"nodeType":"346","messageId":"347","endLine":19,"endColumn":12},{"ruleId":"344","severity":1,"message":"358","line":14,"column":8,"nodeType":"346","messageId":"347","endLine":14,"endColumn":17},{"ruleId":"344","severity":1,"message":"359","line":48,"column":12,"nodeType":"346","messageId":"347","endLine":48,"endColumn":25},{"ruleId":"344","severity":1,"message":"360","line":50,"column":11,"nodeType":"346","messageId":"347","endLine":50,"endColumn":23},{"ruleId":"344","severity":1,"message":"361","line":55,"column":12,"nodeType":"346","messageId":"347","endLine":55,"endColumn":19},{"ruleId":"344","severity":1,"message":"362","line":57,"column":11,"nodeType":"346","messageId":"347","endLine":57,"endColumn":24},{"ruleId":"344","severity":1,"message":"353","line":3,"column":28,"nodeType":"346","messageId":"347","endLine":3,"endColumn":38},{"ruleId":"363","severity":1,"message":"364","line":53,"column":7,"nodeType":"365","endLine":53,"endColumn":9,"suggestions":"366"},{"ruleId":"363","severity":1,"message":"367","line":62,"column":7,"nodeType":"365","endLine":62,"endColumn":20,"suggestions":"368"},{"ruleId":"344","severity":1,"message":"369","line":5,"column":44,"nodeType":"346","messageId":"347","endLine":5,"endColumn":52},{"ruleId":"344","severity":1,"message":"370","line":5,"column":54,"nodeType":"346","messageId":"347","endLine":5,"endColumn":65},{"ruleId":"344","severity":1,"message":"371","line":5,"column":92,"nodeType":"346","messageId":"347","endLine":5,"endColumn":103},{"ruleId":"344","severity":1,"message":"372","line":109,"column":14,"nodeType":"346","messageId":"347","endLine":109,"endColumn":22},{"ruleId":"344","severity":1,"message":"373","line":5,"column":10,"nodeType":"346","messageId":"347","endLine":5,"endColumn":15},{"ruleId":"344","severity":1,"message":"374","line":6,"column":9,"nodeType":"346","messageId":"347","endLine":6,"endColumn":20},{"ruleId":"344","severity":1,"message":"375","line":6,"column":22,"nodeType":"346","messageId":"347","endLine":6,"endColumn":29},{"ruleId":"344","severity":1,"message":"376","line":7,"column":9,"nodeType":"346","messageId":"347","endLine":7,"endColumn":18},{"ruleId":"344","severity":1,"message":"377","line":74,"column":12,"nodeType":"346","messageId":"347","endLine":74,"endColumn":20},{"ruleId":"344","severity":1,"message":"378","line":74,"column":22,"nodeType":"346","messageId":"347","endLine":74,"endColumn":33},{"ruleId":"344","severity":1,"message":"379","line":75,"column":12,"nodeType":"346","messageId":"347","endLine":75,"endColumn":19},{"ruleId":"344","severity":1,"message":"380","line":81,"column":12,"nodeType":"346","messageId":"347","endLine":81,"endColumn":19},{"ruleId":"344","severity":1,"message":"381","line":81,"column":21,"nodeType":"346","messageId":"347","endLine":81,"endColumn":31},{"ruleId":"344","severity":1,"message":"382","line":82,"column":12,"nodeType":"346","messageId":"347","endLine":82,"endColumn":18},{"ruleId":"344","severity":1,"message":"383","line":82,"column":20,"nodeType":"346","messageId":"347","endLine":82,"endColumn":29},{"ruleId":"344","severity":1,"message":"384","line":83,"column":12,"nodeType":"346","messageId":"347","endLine":83,"endColumn":18},{"ruleId":"344","severity":1,"message":"385","line":83,"column":20,"nodeType":"346","messageId":"347","endLine":83,"endColumn":29},{"ruleId":"344","severity":1,"message":"386","line":84,"column":12,"nodeType":"346","messageId":"347","endLine":84,"endColumn":20},{"ruleId":"344","severity":1,"message":"387","line":84,"column":22,"nodeType":"346","messageId":"347","endLine":84,"endColumn":33},{"ruleId":"344","severity":1,"message":"388","line":85,"column":12,"nodeType":"346","messageId":"347","endLine":85,"endColumn":17},{"ruleId":"344","severity":1,"message":"389","line":85,"column":19,"nodeType":"346","messageId":"347","endLine":85,"endColumn":27},{"ruleId":"344","severity":1,"message":"390","line":86,"column":12,"nodeType":"346","messageId":"347","endLine":86,"endColumn":17},{"ruleId":"344","severity":1,"message":"391","line":86,"column":19,"nodeType":"346","messageId":"347","endLine":86,"endColumn":27},{"ruleId":"344","severity":1,"message":"392","line":87,"column":12,"nodeType":"346","messageId":"347","endLine":87,"endColumn":16},{"ruleId":"344","severity":1,"message":"393","line":87,"column":18,"nodeType":"346","messageId":"347","endLine":87,"endColumn":25},{"ruleId":"344","severity":1,"message":"394","line":144,"column":11,"nodeType":"346","messageId":"347","endLine":144,"endColumn":19},{"ruleId":"344","severity":1,"message":"395","line":147,"column":13,"nodeType":"346","messageId":"347","endLine":147,"endColumn":22},{"ruleId":"344","severity":1,"message":"396","line":1,"column":22,"nodeType":"346","messageId":"347","endLine":1,"endColumn":25},{"ruleId":"344","severity":1,"message":"397","line":1,"column":27,"nodeType":"346","messageId":"347","endLine":1,"endColumn":31},{"ruleId":"344","severity":1,"message":"398","line":43,"column":12,"nodeType":"346","messageId":"347","endLine":43,"endColumn":17},{"ruleId":"344","severity":1,"message":"360","line":45,"column":11,"nodeType":"346","messageId":"347","endLine":45,"endColumn":23},{"ruleId":"344","severity":1,"message":"399","line":43,"column":9,"nodeType":"346","messageId":"347","endLine":43,"endColumn":20},{"ruleId":"344","severity":1,"message":"398","line":45,"column":12,"nodeType":"346","messageId":"347","endLine":45,"endColumn":17},{"ruleId":"344","severity":1,"message":"360","line":47,"column":11,"nodeType":"346","messageId":"347","endLine":47,"endColumn":23},{"ruleId":"363","severity":1,"message":"400","line":61,"column":8,"nodeType":"365","endLine":61,"endColumn":10,"suggestions":"401"},{"ruleId":"344","severity":1,"message":"402","line":1,"column":68,"nodeType":"346","messageId":"347","endLine":1,"endColumn":73},{"ruleId":"344","severity":1,"message":"403","line":31,"column":12,"nodeType":"346","messageId":"347","endLine":31,"endColumn":16},{"ruleId":"344","severity":1,"message":"404","line":33,"column":11,"nodeType":"346","messageId":"347","endLine":33,"endColumn":26},{"ruleId":"344","severity":1,"message":"405","line":37,"column":11,"nodeType":"346","messageId":"347","endLine":37,"endColumn":22},{"ruleId":"363","severity":1,"message":"406","line":60,"column":8,"nodeType":"365","endLine":60,"endColumn":10,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":118,"column":25,"nodeType":"410","endLine":118,"endColumn":48},{"ruleId":"344","severity":1,"message":"411","line":1,"column":51,"nodeType":"346","messageId":"347","endLine":1,"endColumn":55},{"ruleId":"344","severity":1,"message":"412","line":66,"column":11,"nodeType":"346","messageId":"347","endLine":66,"endColumn":22},{"ruleId":"344","severity":1,"message":"413","line":1,"column":87,"nodeType":"346","messageId":"347","endLine":1,"endColumn":96},{"ruleId":"363","severity":1,"message":"406","line":48,"column":8,"nodeType":"365","endLine":48,"endColumn":10,"suggestions":"414"},{"ruleId":"344","severity":1,"message":"415","line":84,"column":12,"nodeType":"346","messageId":"347","endLine":84,"endColumn":16},{"ruleId":"344","severity":1,"message":"416","line":177,"column":25,"nodeType":"346","messageId":"347","endLine":177,"endColumn":33},{"ruleId":"408","severity":1,"message":"409","line":198,"column":25,"nodeType":"410","endLine":198,"endColumn":48},{"ruleId":"344","severity":1,"message":"350","line":1,"column":23,"nodeType":"346","messageId":"347","endLine":1,"endColumn":27},{"ruleId":"344","severity":1,"message":"417","line":1,"column":29,"nodeType":"346","messageId":"347","endLine":1,"endColumn":40},{"ruleId":"344","severity":1,"message":"402","line":1,"column":68,"nodeType":"346","messageId":"347","endLine":1,"endColumn":73},{"ruleId":"344","severity":1,"message":"353","line":1,"column":98,"nodeType":"346","messageId":"347","endLine":1,"endColumn":108},{"ruleId":"344","severity":1,"message":"418","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":15},{"ruleId":"344","severity":1,"message":"419","line":34,"column":11,"nodeType":"346","messageId":"347","endLine":34,"endColumn":17},{"ruleId":"363","severity":1,"message":"420","line":50,"column":8,"nodeType":"365","endLine":50,"endColumn":10,"suggestions":"421"},{"ruleId":"363","severity":1,"message":"422","line":58,"column":6,"nodeType":"365","endLine":58,"endColumn":8,"suggestions":"423"},{"ruleId":"344","severity":1,"message":"424","line":10,"column":10,"nodeType":"346","messageId":"347","endLine":10,"endColumn":21},{"ruleId":"425","severity":1,"message":"426","line":99,"column":44,"nodeType":"427","messageId":"428","endLine":99,"endColumn":46},{"ruleId":"344","severity":1,"message":"429","line":2,"column":128,"nodeType":"346","messageId":"347","endLine":2,"endColumn":142},{"ruleId":"344","severity":1,"message":"430","line":100,"column":9,"nodeType":"346","messageId":"347","endLine":100,"endColumn":17},{"ruleId":"363","severity":1,"message":"431","line":156,"column":6,"nodeType":"365","endLine":156,"endColumn":8,"suggestions":"432"},{"ruleId":"433","severity":1,"message":"434","line":216,"column":17,"nodeType":"435","messageId":"436","endLine":216,"endColumn":35},{"ruleId":"425","severity":1,"message":"426","line":246,"column":58,"nodeType":"427","messageId":"428","endLine":246,"endColumn":60},{"ruleId":"344","severity":1,"message":"349","line":3,"column":26,"nodeType":"346","messageId":"347","endLine":3,"endColumn":35},{"ruleId":"344","severity":1,"message":"437","line":4,"column":10,"nodeType":"346","messageId":"347","endLine":4,"endColumn":20},{"ruleId":"344","severity":1,"message":"374","line":5,"column":10,"nodeType":"346","messageId":"347","endLine":5,"endColumn":21},{"ruleId":"344","severity":1,"message":"403","line":22,"column":12,"nodeType":"346","messageId":"347","endLine":22,"endColumn":16},{"ruleId":"344","severity":1,"message":"438","line":23,"column":12,"nodeType":"346","messageId":"347","endLine":23,"endColumn":20},{"ruleId":"344","severity":1,"message":"439","line":23,"column":22,"nodeType":"346","messageId":"347","endLine":23,"endColumn":33},{"ruleId":"344","severity":1,"message":"404","line":25,"column":11,"nodeType":"346","messageId":"347","endLine":25,"endColumn":26},{"ruleId":"344","severity":1,"message":"405","line":29,"column":11,"nodeType":"346","messageId":"347","endLine":29,"endColumn":22},{"ruleId":"425","severity":1,"message":"426","line":36,"column":48,"nodeType":"427","messageId":"428","endLine":36,"endColumn":50},{"ruleId":"408","severity":1,"message":"409","line":68,"column":25,"nodeType":"410","endLine":68,"endColumn":91},{"ruleId":"344","severity":1,"message":"440","line":2,"column":10,"nodeType":"346","messageId":"347","endLine":2,"endColumn":28},{"ruleId":"344","severity":1,"message":"403","line":13,"column":12,"nodeType":"346","messageId":"347","endLine":13,"endColumn":16},{"ruleId":"344","severity":1,"message":"404","line":15,"column":11,"nodeType":"346","messageId":"347","endLine":15,"endColumn":26},{"ruleId":"344","severity":1,"message":"405","line":19,"column":11,"nodeType":"346","messageId":"347","endLine":19,"endColumn":22},{"ruleId":"344","severity":1,"message":"441","line":23,"column":11,"nodeType":"346","messageId":"347","endLine":23,"endColumn":17},{"ruleId":"408","severity":1,"message":"409","line":34,"column":25,"nodeType":"410","endLine":34,"endColumn":50},{"ruleId":"344","severity":1,"message":"442","line":2,"column":39,"nodeType":"346","messageId":"347","endLine":2,"endColumn":44},{"ruleId":"363","severity":1,"message":"443","line":77,"column":8,"nodeType":"365","endLine":77,"endColumn":10,"suggestions":"444"},{"ruleId":"363","severity":1,"message":"445","line":37,"column":6,"nodeType":"365","endLine":37,"endColumn":12,"suggestions":"446"},{"ruleId":"344","severity":1,"message":"447","line":11,"column":8,"nodeType":"346","messageId":"347","endLine":11,"endColumn":15},{"ruleId":"344","severity":1,"message":"448","line":19,"column":10,"nodeType":"346","messageId":"347","endLine":19,"endColumn":15},{"ruleId":"344","severity":1,"message":"449","line":78,"column":25,"nodeType":"346","messageId":"347","endLine":78,"endColumn":42},{"ruleId":"344","severity":1,"message":"450","line":82,"column":12,"nodeType":"346","messageId":"347","endLine":82,"endColumn":22},{"ruleId":"344","severity":1,"message":"451","line":84,"column":32,"nodeType":"346","messageId":"347","endLine":84,"endColumn":44},{"ruleId":"363","severity":1,"message":"452","line":105,"column":8,"nodeType":"365","endLine":105,"endColumn":10,"suggestions":"453"},{"ruleId":"363","severity":1,"message":"454","line":148,"column":8,"nodeType":"365","endLine":148,"endColumn":24,"suggestions":"455"},{"ruleId":"363","severity":1,"message":"456","line":155,"column":8,"nodeType":"365","endLine":155,"endColumn":44,"suggestions":"457"},{"ruleId":"408","severity":1,"message":"409","line":181,"column":42,"nodeType":"410","endLine":181,"endColumn":82},{"ruleId":"408","severity":1,"message":"409","line":185,"column":37,"nodeType":"410","endLine":185,"endColumn":82},{"ruleId":"425","severity":1,"message":"426","line":207,"column":24,"nodeType":"427","messageId":"428","endLine":207,"endColumn":26},{"ruleId":"344","severity":1,"message":"349","line":1,"column":24,"nodeType":"346","messageId":"347","endLine":1,"endColumn":33},{"ruleId":"344","severity":1,"message":"458","line":45,"column":19,"nodeType":"346","messageId":"347","endLine":45,"endColumn":27},{"ruleId":"344","severity":1,"message":"459","line":54,"column":12,"nodeType":"346","messageId":"347","endLine":54,"endColumn":22},{"ruleId":"344","severity":1,"message":"460","line":54,"column":24,"nodeType":"346","messageId":"347","endLine":54,"endColumn":37},"no-native-reassign",["461"],"no-negated-in-lhs",["462"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'PostingPage' is defined but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'CircularProgress' is defined but never used.","'Check' is defined but never used.","'Typography' is defined but never used.","'CreditNum' is assigned a value but never used.","'setCreditNum' is assigned a value but never used.","'newsPost' is assigned a value but never used.","'theme' is assigned a value but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'checked' is assigned a value but never used.","'handleChange2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["463"],"React Hook useEffect has missing dependencies: 'posts' and 'postsPerPage'. Either include them or remove the dependency array.",["464"],"'Exposure' is defined but never used.","'Brightness6' is defined but never used.","'ZoomInSharp' is defined but never used.","'zomReset' is defined but never used.","'Title' is defined but never used.","'useDispatch' is defined but never used.","'connect' is defined but never used.","'USER_AUTH' is defined but never used.","'Filename' is assigned a value but never used.","'setFilename' is assigned a value but never used.","'Content' is assigned a value but never used.","'Purpose' is assigned a value but never used.","'setPurpose' is assigned a value but never used.","'Pcolor' is assigned a value but never used.","'setPcolor' is assigned a value but never used.","'Psales' is assigned a value but never used.","'setPsales' is assigned a value but never used.","'Pcompany' is assigned a value but never used.","'setPcompany' is assigned a value but never used.","'Price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'Stock' is assigned a value but never used.","'setStock' is assigned a value but never used.","'Size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'variables' is assigned a value but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'value' is assigned a value but never used.","'reviewCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["465"],"'Input' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["466"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","'cancelCount' is assigned a value but never used.","'TextField' is defined but never used.",["467"],"'file' is assigned a value but never used.","'variable' is assigned a value but never used.","'CardContent' is defined but never used.","'Phone' is defined but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["468"],"React Hook useEffect has a missing dependency: 'location.state.data.post'. Either include it or remove the dependency array.",["469"],"'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormHelperText' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'image' and 'postId'. Either include them or remove the dependency array.",["470"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'useHistory' is defined but never used.","'purchase' is assigned a value but never used.","'setPurchase' is assigned a value but never used.","'CancelScheduleSend' is defined but never used.","'review' is assigned a value but never used.","'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'pictures', 'postID', and 'sumText'. Either include them or remove the dependency array.",["471"],"React Hook useEffect has a missing dependency: 'isUrl'. Either include it or remove the dependency array. You can also do a functional update 'setIsUrl(i => ...)' if you only need 'isUrl' in the 'setIsUrl' call.",["472"],"'MicIcon' is defined but never used.","'Route' is defined but never used.","'changeActiveTopic' is assigned a value but never used.","'isRemember' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.rememberChatToken', 'setCookie', and 'token'. Either include them or remove the dependency array. You can also do a functional update 'setToken(t => ...)' if you only need 'token' in the 'setToken' call.",["473"],"React Hook useEffect has missing dependencies: 'allChats.general', 'checked', and 'count'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["474"],"React Hook useEffect has missing dependencies: 'activeTopic', 'cookies.rememberChatToken', 'sendChatAction', and 'user'. Either include them or remove the dependency array.",["475"],"'setBanks' is assigned a value but never used.","'BankNumber' is assigned a value but never used.","'setBankNumber' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"482","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},"Update the dependencies array to be: [category, location.state]",{"range":"501","text":"502"},"Update the dependencies array to be: [currentPage, posts, postsPerPage]",{"range":"503","text":"504"},"Update the dependencies array to be: [userId]",{"range":"505","text":"506"},"Update the dependencies array to be: [postId]",{"range":"507","text":"508"},{"range":"509","text":"508"},"Update the dependencies array to be: [user.email]",{"range":"510","text":"511"},"Update the dependencies array to be: [location.state.data.post]",{"range":"512","text":"513"},"Update the dependencies array to be: [image, postId]",{"range":"514","text":"515"},"Update the dependencies array to be: [pictures, postID, sumText]",{"range":"516","text":"517"},"Update the dependencies array to be: [isUrl, post]",{"range":"518","text":"519"},"Update the dependencies array to be: [cookies.rememberChatToken, setCookie, token]",{"range":"520","text":"521"},"Update the dependencies array to be: [allChats.general, checked, count, sendChatAction]",{"range":"522","text":"523"},"Update the dependencies array to be: [interimTranscript, finalTranscript, sendChatAction, user, activeTopic, cookies.rememberChatToken]",{"range":"524","text":"525"},[1710,1712],"[category, location.state]",[2013,2026],"[currentPage, posts, postsPerPage]",[1660,1662],"[userId]",[1626,1628],"[postId]",[1394,1396],[1381,1383],"[user.email]",[1695,1697],"[location.state.data.post]",[4191,4193],"[image, postId]",[2053,2055],"[pictures, postID, sumText]",[1096,1102],"[isUrl, post]",[3045,3047],"[cookies.rememberChatToken, setCookie, token]",[4492,4508],"[allChats.general, checked, count, sendChatAction]",[4777,4813],"[interimTranscript, finalTranscript, sendChatAction, user, activeTopic, cookies.rememberChatToken]"]